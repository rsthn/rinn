{"mappings":"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","sources":["src/model-constraints.js","src/alpha.js","src/model-regex.js","src/_main.js","src/class.js","src/event.js","src/event-dispatcher.js","src/model.js","src/model-list.js","src/schema.js","src/flattenable.js","src/collection.js","src/template.js"],"sourcesContent":["\nimport Rinn from './alpha.js';\nimport Regex from './model-regex.js';\n\n/**\n**\tMap of model constraint handlers. Each function should accept parameters (in order): the model object (model), the constraint value (ctval),\n**\tthe property name (name), the property value (value) and return the corrected value once verified or throw an exception if errors occur.\n*/\n\nexport default\n{\n\t/**\n\t**\tUtility function (not a handler) to get the real value given a reference string. If the value is not a string, the value itself will\n\t**\tbe returned, if it is a string starting with '#' the model property will be returned, if starts with '@' the object property will be\n\t**\treturned, otherwise the contents of the string will eval'd and returned.\n\t*/\n\t_getref: function (value, obj)\n\t{\n\t\tif (typeof(value) == \"string\")\n\t\t{\n\t\t\tif (value.substr(0, 1) == \"#\")\t\t\tvalue = obj.get(value.substr(1));\n\t\t\telse if (value.substr(0, 1) == \"@\")\t\tvalue = obj[value.substr(1)];\n\n\t\t\tif (typeof(value) == \"string\")\n\t\t\t\treturn eval(value);\n\n\t\t\treturn value;\n\t\t}\n\t\telse\n\t\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the new value is of the valid type before storing it on the property. When possible if the\n\t**\tinput is of compatible type it will be converted to the target type.\n\t*/\n\ttype: function (model, ctval, name, value)\n\t{\n\t\tswitch (ctval)\n\t\t{\n\t\t\tcase \"int\":\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"float\":\n\t\t\t\tvalue = parseFloat(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"string\":\n\t\t\t\tvalue = (value === null || value === undefined) ? \"\" : value.toString();\n\t\t\t\tbreak;\n\n\t\t\tcase \"bit\":\n\t\t\t\tif (value === true || value === false) {\n\t\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\n\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"array\":\n\t\t\t\tif (Rinn.typeOf(value) == \"array\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (value === null || value === undefined)\n\t\t\t\t{\n\t\t\t\t\tvalue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"bool\":\n\t\t\t\tif (value === \"true\" || value === true) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (value === \"false\" || value === false) {\n\t\t\t\t\tvalue = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified model type.\n\t*/\n\tmodel: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!mclass) throw new Error (ctval);\n\n\t\tif (!value)\n\t\t\treturn new mclass();\n\n\t\treturn mclass.ensure (value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified class.\n\t*/\n\tcls: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) return new mclass();\n\n\t\treturn Rinn.ensureTypeOf(mclass, value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are of the specified class. Returns error if the class does not exist\n\t**\tor if the field is not an array. Therefore a type:array constraint should be used before this one.\n\t*/\n\tarrayof: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) value = [];\n\n\t\tif (!mclass || Rinn.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t\tvalue[i] = Rinn.ensureTypeOf(mclass, value[i]);\n\t\t\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are not null. Returns error if the field is not an array, therefore a\n\t**\ttype:array constraint should be used before this one.\n\t*/\n\tarraynull: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rinn.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (ctval) return value;\n\n\t\tif (Rinn.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are all compliant. Returns error if the field is not an array, therefore\n\t**\ta type:array constraint should be used before this one.\n\t*/\n\tarraycompliant: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rinn.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (!ctval) return value;\n\n\t\tif (Rinn.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t\tcontinue;\n\n\t\t\tif (!value[i].isCompliant())\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the presense of the field.\n\t*/\n\trequired: function (model, ctval, name, value)\n\t{\n\t\tif (value === null || value === undefined)\n\t\t\tthrow new Error (ctval ? \"\" : \"null\");\n\n\t\tswitch (Rinn.typeOf(value))\n\t\t{\n\t\t\tcase \"array\":\n\t\t\t\tif (value.length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tif (value.toString().length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum length of the field.\n\t*/\n\tminlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum length of the field.\n\t*/\n\tmaxlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum value of the field.\n\t*/\n\tminval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum value of the field.\n\t*/\n\tmaxval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum number of items in the array.\n\t*/\n\tmincount: function (model, ctval, name, value)\n\t{\n\t\tif (Rinn.typeOf(value) != \"array\" || value.length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum number of items in the array.\n\t*/\n\tmaxcount: function (model, ctval, name, value)\n\t{\n\t\tif (Rinn.typeOf(value) != \"array\" || value.length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the format of the field using a regular expression. The constraint value should be the name of\n\t**\tone of the Model.Regex regular expressions.\n\t*/\n\tpattern: function (model, ctval, name, value)\n\t{\n\t\tif (!Regex[ctval].test (value.toString()))\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is inside the specified set of options. The set can be an array or a string with\n\t**\tthe options separated by vertical bar (|). The comparison is case-sensitive.\n\t*/\n\tinset: function (model, ctval, name, value)\n\t{\n\t\tif (Rinn.typeOf(ctval) != \"array\")\n\t\t{\n\t\t\tif (!new RegExp(\"^(\"+ctval.toString()+\")$\").test (value.toString()))\n\t\t\t\tthrow new Error (ctval);\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (ctval.indexOf(value.toString()) == -1)\n\t\t\tthrow new Error (ctval.join(\"|\"));\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tSets the field to upper case.\n\t*/\n\tupper: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toUpperCase() : value;\n\t},\n\n\n\t/**\n\t**\tSets the field to lower case.\n\t*/\n\tlower: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toLowerCase() : value;\n\t}\n};\n","\r\nconst Rinn = { };\r\nexport default Rinn;\r\n\r\n/*\r\n**\tInvokes the specified function 'fn' 10ms later.\r\n**\r\n**\t>> void invokeLater (function fn);\r\n*/\r\nRinn.invokeLater = function (fn)\r\n{\r\n\tif (fn) setTimeout (function() { fn(); }, 10);\r\n};\r\n\r\n\r\n/*\r\n**\tWaits for the specified amount of milliseconds. Returns a Promise.\r\n**\r\n**\t>> Promise wait (int millis);\r\n*/\r\nRinn.wait = function (millis)\r\n{\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tsetTimeout (resolve, millis);\r\n\t});\r\n};\r\n\r\n\r\n/*\r\n**\tReturns the type of an element 'o', properly detects arrays and null types. The return string is always in lowercase.\r\n**\r\n**\t>> string typeOf (any o);\r\n*/\r\nRinn.typeOf = function (o)\r\n{\r\n\tif (o instanceof Array)\r\n\t\treturn \"array\";\r\n\r\n\tif (o === null)\r\n\t\treturn \"null\";\r\n\r\n\treturn (typeof(o)).toString().toLowerCase();\r\n};\r\n\r\n\r\n/*\r\n**\tReturns boolean indicating if the type of the element is an array or an object.\r\n**\r\n**\t>> bool isArrayOrObject (any o);\r\n*/\r\nRinn.isArrayOrObject = function (o)\r\n{\r\n\tswitch (Rinn.typeOf(o))\r\n\t{\r\n\t\tcase \"array\": case \"object\":\r\n\t\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/*\r\n**\tCreates a clone (deep copy) of the specified element. The element can be an array, an object or a primitive type.\r\n**\r\n**\t>> T clone (T elem);\r\n*/\r\nRinn.clone = function (elem)\r\n{\r\n\tlet o = Rinn.typeOf(elem);\r\n\r\n\tif (o === 'array')\r\n\t{\r\n\t\to = [ ];\r\n\r\n\t\tfor (let i = 0; i < elem.length; i++)\r\n\t\t\to.push (Rinn.clone(elem[i]));\r\n\t}\r\n\telse if (o === 'object')\r\n\t{\r\n\t\tif (('clone' in elem) && typeof(elem.clone) === 'function')\r\n\t\t\treturn elem.clone();\r\n\r\n\t\to = { };\r\n\r\n\t\tfor (let i in elem)\r\n\t\t\to[i] = Rinn.clone(elem[i]);\r\n\t}\r\n\telse\r\n\t{\r\n\t\to = elem;\r\n\t}\r\n\r\n\treturn o;\r\n};\r\n\r\n\r\n/*\r\n**\tMerges all given elements into the first one, object fields are cloned.\r\n**\r\n**\t>> T merge (T... elems)\r\n*/\r\nRinn.merge = function (output, ...objs)\r\n{\r\n\tif (Rinn.typeOf(output) == \"array\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet arr = objs[i];\r\n\r\n\t\t\tif (Rinn.typeOf(arr) != \"array\")\r\n\t\t\t{\r\n\t\t\t\toutput.push(arr);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor (let j = 0; j < arr.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\toutput.push(Rinn.clone(arr[j]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (Rinn.typeOf(output) == \"object\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet obj = objs[i];\r\n\t\t\tif (Rinn.typeOf(obj) != \"object\") continue;\r\n\r\n\t\t\tfor (let field in obj)\r\n\t\t\t{\r\n\t\t\t\tif (Rinn.isArrayOrObject(obj[field]))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (field in output)\r\n\t\t\t\t\t\tRinn.merge(output[field], obj[field]);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\toutput[field] = Rinn.clone(obj[field]);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\toutput[field] = obj[field];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/*\r\n**\tAssigns all fields from the specified objects into the first one.\r\n**\r\n**\t>> object override (object output, object... objs)\r\n*/\r\nRinn.override = function (output, ...objs)\r\n{\r\n\tfor (let i = 0; i < objs.length; i++)\r\n\t{\r\n\t\tfor (let j in objs[i])\r\n\t\t{\r\n\t\t\toutput[j] = objs[i][j];\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/*\r\n**\tCompares two objects and returns `true` if all properties in \"partial\" find a match in \"full\".\r\n*/\r\nRinn.partialCompare = function (full, partial)\r\n{\r\n\tif (full == null || partial == null) return false;\r\n\r\n\tif (full === partial)\r\n\t\treturn true;\r\n\r\n\tfor (var i in partial)\r\n\t{\r\n\t\tif (full[i] != partial[i])\r\n\t\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/*\r\n**\tPerforms a partial search for an object (o) in the specified array and returns its index or `false` if the\r\n**\tobject was not found. When `getObject` is set to `true` the object will be returned instead of an index, or\r\n**\t`null` if not found.\r\n*/\r\nRinn.arrayFind = function (arr, o, getObject)\r\n{\r\n\tfor (var i = 0; arr && i < arr.length; i++)\r\n\t{\r\n\t\tif (this.partialCompare (arr[i], o))\r\n\t\t\treturn getObject ? arr[i] : i;\r\n\t}\r\n\r\n\treturn getObject ? null : false;\r\n};\r\n\r\n\r\n/*\r\n**\tVerifies if the specified object is of class `m`, returns boolean.\r\n**\r\n**\t>> bool isTypeOf (object obj, class _class);\r\n*/\r\nRinn.isInstanceOf = function (obj, _class)\r\n{\r\n\tif (!obj || !_class || typeof(obj) !== 'object')\r\n\t\treturn false;\r\n\r\n\tif (obj instanceof _class)\r\n\t\treturn true;\r\n\r\n\tif ('isInstanceOf' in obj)\r\n\t\treturn obj.isInstanceOf(_class);\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/*\r\n**\tTraverses the given object attempting to find the index/key that does an identical match with the specified value,\r\n**\tif not found returns -1, otherwise the index/key where the value was found.\r\n**\r\n**\t>> int indexOf (array container, T value)\r\n**\t>> string indexOf (object container, T value)\r\n*/\r\nRinn.indexOf = function (container, value, forceArray=false)\r\n{\r\n\tif (forceArray)\r\n\t{\r\n\t\tfor (let i = 0; i < container.length; i++)\r\n\t\t{\r\n\t\t\tif (container[i] === value)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tfor (let i in container)\r\n\t{\r\n\t\tif (container[i] === value)\r\n\t\t\treturn i;\r\n\t}\r\n\r\n\treturn -1;\r\n};\r\n\r\n\r\n/*\r\n**\tEscapes a string using HTML entities.\r\n**\r\n**\t>> string escape (string str);\r\n*/\r\nRinn.escape = function (str)\r\n{\r\n\treturn (str+\"\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n};\r\n\r\n\r\n/*\r\n**\tVerifies if the specified object is of class `m`, if not it will create a new instance of `m` passing `o` as parameter.\r\n**\r\n**\t>> object ensureTypeOf (class m, object o);\r\n*/\r\nRinn.ensureTypeOf = function (m, o)\r\n{\r\n\tif (!o || !m || o instanceof m)\r\n\t\treturn o;\r\n\r\n\tif (o.isInstanceOf && m.prototype.className)\r\n\t{\r\n\t\tif (o.isInstanceOf (m.prototype.className))\r\n\t\t\treturn o;\r\n\t}\r\n\r\n\treturn new m (o);\r\n};\r\n\r\n\r\n/*\r\n**\tSerializes an object and returns its JSON string representation.\r\n**\r\n**\t>> string serialize (object o);\r\n*/\r\nRinn.serialize = function (o)\r\n{\r\n\treturn JSON.stringify(o);\r\n};\r\n\r\n\r\n/*\r\n**\tDeserializes a string in JSON format and returns the result.\r\n**\r\n**\t>> any deserialize (string s);\r\n*/\r\nRinn.deserialize = function (s)\r\n{\r\n\treturn JSON.parse(s);\r\n};\r\n\r\n\r\n/*\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/\r\nRinn.hookAppend = function (object, functionName, newFunction, conditional=true)\r\n{\r\n\tconst oldFunction = object[functionName];\r\n\r\n\tif (conditional)\r\n\t{\r\n\t\tobject[functionName] = function (...args) {\r\n\t\t\tif (oldFunction.apply (this, args) !== false)\r\n\t\t\t\treturn newFunction.apply (this, args);\r\n\t\t};\r\n\t}\r\n\telse\r\n\t{\r\n\t\tobject[functionName] = function (...args) {\r\n\t\t\toldFunction.apply (this, args);\r\n\t\t\treturn newFunction.apply (this, args);\r\n\t\t};\r\n\t}\r\n\r\n\treturn { \r\n\t\tunhook: function() {\r\n\t\t\tobject[functionName] = oldFunction;\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n/*\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/\r\nRinn.hookPrepend = function (object, functionName, newFunction, conditional=true)\r\n{\r\n\tconst oldFunction = object[functionName];\r\n\r\n\tif (conditional)\r\n\t{\r\n\t\tobject[functionName] = function (...args) {\r\n\t\t\tif (newFunction.apply (this, args) !== false)\r\n\t\t\t\treturn oldFunction.apply (this, args);\r\n\t\t};\r\n\t}\r\n\telse\r\n\t{\r\n\t\tobject[functionName] = function (...args) {\r\n\t\t\tnewFunction.apply (this, args);\r\n\t\t\treturn oldFunction.apply (this, args);\r\n\t\t};\r\n\t}\r\n\r\n\treturn { \r\n\t\tunhook: function() {\r\n\t\t\tobject[functionName] = oldFunction;\r\n\t\t}\r\n\t};\r\n};\r\n","\n/**\n**\tCommon regular expressions for pattern validation.\n*/\n\nexport default\n{\n\temail: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)+$/i,\n\turl: /^[\\w-]+:\\/\\/[\\w-]+(\\.\\w+)+.*$/,\n\turlNoProt: /^[\\w-]+(\\.\\w+)+.*$/,\n\tname: /^[-A-Za-z0-9_.]+$/,\n\tuname: /^['\\pL\\pN ]+$/,\n\ttext: /^[^&<>{}]*$/,\n\tutext: /^([\\r\\n\\pL\\pN\\pS &!@#$%*\\[\\]()_+=;',.\\/?:\"~-]+)$/\n};\n","\r\nimport _Rinn from './alpha.js';\r\nimport _Class from './class.js';\r\nimport _Event from './event.js';\r\nimport _EventDispatcher from './event-dispatcher.js';\r\nimport _Model from './model.js';\r\nimport _ModelList from './model-list.js';\r\nimport _Schema from './schema.js';\r\nimport _Flattenable from './flattenable.js';\r\nimport _Collection from './collection.js';\r\nimport _Template from './template.js';\r\n\r\nexport const Rinn = _Rinn;\r\nexport const Class = _Class;\r\nexport const Event = _Event;\r\nexport const EventDispatcher = _EventDispatcher;\r\nexport const Model = _Model;\r\nexport const ModelList = _ModelList;\r\nexport const Schema = _Schema;\r\nexport const Flattenable = _Flattenable;\r\nexport const Collection = _Collection;\r\nexport const Template = _Template;\r\n\r\nglobal.rinn =\r\n{\r\n\tRinn: Rinn,\r\n\tClass: Class,\r\n\tEvent: Event,\r\n\tEventDispatcher: EventDispatcher,\r\n\tModel: Model,\r\n\tModelList: ModelList,\r\n\tSchema: Schema,\r\n\tFlattenable: Flattenable,\r\n\tCollection: Collection,\r\n\tTemplate: Template,\r\n};\r\n","\r\nimport Rinn from './alpha.js';\r\n\r\n/**\r\n * Base class used to create other classes with complex prototype based multiple inheritance while at the\r\n * same time avoiding the prototype chain for faster access. Supports calling parent class methods.\r\n */\r\n\r\n//!class Class\r\nconst Class = function ()\r\n{\r\n};\r\n\r\n/**\r\n * Reference to the class itself.\r\n */\r\nClass._class = Class;\r\n\r\n/**\r\n * Contains the methods of each of the super classes.\r\n */\r\nClass._super = { };\r\n\r\n/**\r\n * Name of the class, if none specified the class will be considered \"final\" and will not be inheritable.\r\n * !readonly string className;\r\n */\r\nClass.prototype.className = 'Class';\r\n\r\n/**\r\n * Class constructor, should initialize the instance. Invoked when the `new` keyword is used with the class.\r\n * !constructor();\r\n */\r\nClass.prototype.__ctor = function ()\r\n{\r\n};\r\n\r\n/**\r\n * Class destructor, should clear the instance and release any used resources, invoked when the global `dispose` function is called with an instance as parameter.\r\n * !__dtor() : void;\r\n */\r\nClass.prototype.__dtor = function ()\r\n{\r\n};\r\n\r\n/**\r\n * Returns true if the object is an instance of the specified class, the parameter can be a class name (string), a constructor (function) or\r\n * a class instance (object), in any cases the appropriate checks will be done.\r\n * !isInstanceOf (className: string|function|object) : boolean;\r\n */\r\nClass.prototype.isInstanceOf = function (className)\r\n{\r\n\tif (className === null)\r\n\t\treturn false;\r\n\r\n\tif (typeof(className) === 'function')\r\n\t{\r\n\t\tclassName = className.prototype.className;\r\n\t}\r\n\telse if (typeof(className) !== 'string')\r\n\t{\r\n\t\tclassName = className.__proto__.className;\r\n\t}\r\n\r\n\treturn this.className === className ? true : this._super.hasOwnProperty(className);\r\n};\r\n\r\n/**\r\n * Returns true if the given object is an instance of the specified class, the parameter can be a class name (string), a constructor (function)\r\n * or a class instance (object), in any cases the appropriate checks will be done.\r\n * !instanceOf (object: object, className: string|function|object) : boolean;\r\n */\r\nClass.instanceOf = function (object, className)\r\n{\r\n\tif (object === null || className === null)\r\n\t\treturn false;\r\n\r\n\treturn object.isInstanceOf(className);\r\n};\r\n\r\n/**\r\n * Internal method to ensure the _super field of an instance has all functions properly bound to the instance.\r\n */\r\nClass.prototype._initSuperRefs = function ()\r\n{\r\n\tlet _super = this.constructor._super;\r\n\tlet _newSuper = { };\r\n\r\n\tconst self = this;\r\n\r\n\tfor (let i in _super)\r\n\t{\r\n\t\tlet o = { };\r\n\r\n\t\tlet _prot = _super[i].prototype;\r\n\t\tfor (let j in _prot)\r\n\t\t{\r\n\t\t\tif (Rinn.typeOf(_prot[j]) !== 'function')\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\to[j] = (function(fn)\r\n\t\t\t{\r\n\t\t\t\treturn function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\r\n\t\t\t\t\treturn fn.call(self, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t(_prot[j]);\r\n\t\t}\r\n\r\n\t\t_newSuper[i] = o;\r\n\t}\r\n\r\n\tthis._super = _newSuper;\r\n};\r\n\r\n\r\n/*\r\n**\tExtends the class with the specified prototype. The prototype can be a function (class constructor) or an object. Note that the\r\n**\tclass will be modified (and returned) instead of creating a new class. Must be called at the class-level (**not** instance level).\r\n**\tWhen a class is provided all fields starting with uppercase at the class-level will not be inherited, this is used to create constants\r\n**\ton classes without having them to be copied to derived classes.\r\n**\r\n**\t>> class inherit (constructor classConstructor);\r\n**\t>> class inherit (object obj);\r\n*/\r\nClass.inherit = function (proto)\r\n{\r\n\tlet self = this._class;\r\n\r\n\tlet _super = self._super;\r\n\tlet _class = self._class;\r\n\r\n\tif (Rinn.typeOf(proto) === 'function')\r\n\t{\r\n\t\t// Move constants (uppercased properties) to the class-level instead of prototype-level.\r\n\t\tfor (let i in proto._class)\r\n\t\t\tif (!/^[A-Z]/.test(i)) self[i] = proto._class[i];\r\n\r\n\t\t// Combine methods and properties.\r\n\t\tRinn.override (self.prototype, proto._class.prototype);\r\n\r\n\t\t// Combine super references.\r\n\t\tRinn.override (_super, proto._class._super);\r\n\r\n\t\t// Add new super reference if className specified in inherited prototypes.\r\n\t\tif (proto._class.prototype.className)\r\n\t\t\t_super[proto._class.prototype.className] = proto._class;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tRinn.override (self.prototype, proto);\r\n\t}\r\n\r\n\tself._super = _super;\r\n\tself._class = _class;\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\n/**\r\n * Internal method used to extend a class with one or more prototypes.\r\n */\r\nClass.prototype._extend = function (base, protos)\r\n{\r\n\tif (protos.length === 0)\r\n\t\treturn base;\r\n\r\n\t//VIOLET OPTIMIZE\r\n\tconst _class = function (...args)\r\n\t{\r\n\t\tthis._initSuperRefs();\r\n\t\tthis.__ctor.apply(this, args);\r\n\t};\r\n\r\n\t_class._class = _class;\r\n\t_class._super = { };\r\n\r\n\tClass.inherit.call (_class, base);\r\n\tdelete _class.prototype.className;\r\n\r\n\tfor (let i = 0; i < protos.length; i++)\r\n\t\t_class.inherit (protos[i]);\r\n\r\n\tdelete _class._super.Class;\r\n\r\n\tif ('classInit' in _class.prototype)\r\n\t\t_class.prototype.classInit();\r\n\r\n\t_class.isInstance = function(value) {\r\n\t\treturn Rinn.isInstanceOf(value, _class);\r\n\t};\r\n\r\n\treturn _class;\r\n};\r\n\r\n\r\n/**\r\n * Creates a new class with the specified prototypes each of which can be a class constructor (function) or an object.\r\n */\r\nClass.extend = function (...protos)\r\n{\r\n\treturn this._class.prototype._extend (this, protos);\r\n};\r\n\r\n\r\n/**\r\n * Creates a new instance of a class resulting from extending the self class with the specified prototype.\r\n */\r\nClass.create = function (proto)\r\n{\r\n\treturn new (this.extend(proto)) ();\r\n};\r\n\r\n/**\r\n * Mutates the host object to be an instance of the specified class.\r\n * !static mutate (classConstructor: object, host: object, override?: object) : object;\r\n */\r\nClass.mutate = function (classConstructor, host, override=null)\r\n{\r\n\tlet zombie = new classConstructor ();\r\n\r\n\t// Copy all members from the class prototype.\r\n\tfor (let i in classConstructor.prototype)\r\n\t{\r\n\t\tif (host.hasOwnProperty(i))\r\n\t\t\tcontinue;\r\n\t\r\n\t\thost[i] = classConstructor.prototype[i];\r\n\t}\r\n\t\r\n\t// Copy all members from the zombie class instance.\r\n\tfor (let i in zombie)\r\n\t{\r\n\t\tif (host.hasOwnProperty(i))\r\n\t\t\tcontinue;\r\n\t\r\n\t\thost[i] = zombie[i];\r\n\t}\r\n\r\n\t// Rebind the super references.\r\n\tif (host._super)\r\n\t{\r\n\t\tfor (let i in host._super)\r\n\t\t{\r\n\t\t\tfor (let j in host._super[i]) {\r\n\t\t\t\thost._super[i][j] = classConstructor.prototype.constructor._super[i].prototype[j].bind(host);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Copy override members.\r\n\tif (override !== null) {\r\n\t\tfor (let i in override)\r\n\t\t\thost[i] = override[i];\r\n\t}\r\n\r\n\treturn host;\r\n};\r\n\r\nexport default Class;\r\n","\r\nimport Rinn from './alpha.js';\r\nimport Class from './class.js';\r\n\r\n/**\r\n**\tHolds the information about a triggered event. It also provides a mechanism to allow asynchronous\r\n**\tevent propagation to ensure the event chain order.\r\n*/\r\n\r\nexport default Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Event\",\r\n\r\n\t/**\r\n\t**\tSource of the event.\r\n\t*/\r\n\tsource: null,\r\n\r\n\t/**\r\n\t**\tName of the event.\r\n\t*/\r\n\tname: null,\r\n\r\n\t/**\r\n\t**\tArguments of the event.\r\n\t*/\r\n\targs: null,\r\n\r\n\t/**\r\n\t**\tIndicates if the last event handler wants to use async mode.\r\n\t*/\r\n\t_async: false,\r\n\r\n\t/**\r\n\t**\tQueue of all handlers to invoke.\r\n\t*/\r\n\tlist: null,\r\n\r\n\t/**\r\n\t**\tNext event to be executed in the event chain.\r\n\t*/\r\n\tnext: null,\r\n\r\n\t/**\r\n\t**\tReturn values from event handlers.\r\n\t*/\r\n\tret: null,\r\n\r\n\t/**\r\n\t**\tOriginal root event.\r\n\t*/\r\n\toriginal: null,\r\n\r\n\t/**\r\n\t**\tIndex of the current event handler.\r\n\t*/\r\n\ti: -1,\r\n\r\n\t/**\r\n\t**\tContructs an event object with the specified parameters. Source is the event-dispatcher object, list is\r\n\t**\tan array with all the listeners to invoke. The eventName and eventArgs are the event information to be\r\n\t**\tpassed to each handler and if a callback is specified (cbHandler+cbContext) it will be executed once all\r\n\t**\tthe event handlers have been processed.\r\n\t**\r\n\t**\tEvent __ctor (source: EventDispatcher, list: Array, eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t*/\r\n\t__ctor: function (source, list, eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tthis.source = source;\r\n\r\n\t\tthis.name = eventName;\r\n\t\tthis.args = eventArgs;\r\n\r\n\t\tthis.cbHandler = cbHandler;\r\n\t\tthis.cbContext = cbContext;\r\n\r\n\t\tthis.list = list;\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/**\r\n\t**\tResets the event to its initial state. An event object can be reused by resetting it and then\r\n\t**\tinvoking the resume event.\r\n\t**\r\n\t**\tEvent reset ();\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.next = null;\r\n\t\tthis.ret = [];\r\n\r\n\t\tthis._async = false;\r\n\t\tthis.i = -1;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tChanges the source of the event.\r\n\t**\r\n\t**\tEvent setSource (object value);\r\n\t*/\r\n\tsetSource: function (value)\r\n\t{\r\n\t\tthis.source = value;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the internal asynchronous flag. Should be called before a handler returns. If a handler\r\n\t**\tcalls this method it should also call resume() when async operations are finished.\r\n\t**\r\n\t**\tEvent wait ();\r\n\t*/\r\n\twait: function ()\r\n\t{\r\n\t\tthis._async = true;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tResumes event propagation. Should be called manually by event handlers that also call wait().\r\n\t**\r\n\t**\tEvent resume ();\r\n\t*/\r\n\tresume: function ()\r\n\t{\r\n\t\tthis._async = false;\r\n\r\n\t\twhile (!this._async)\r\n\t\t{\r\n\t\t\tif (++this.i >= this.list.length)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif (this.list[this.i].silent)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rinn.typeOf(this.list[this.i].handler) == \"string\")\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].context)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!this.list[this.i].context[this.list[this.i].handler])\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tif (this.list[this.i].context[this.list[this.i].handler] (this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (global[this.list[this.i].handler].call (null, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].handler.call (this.list[this.i].context, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._async)\r\n\t\t\treturn this;\r\n\r\n\t\tif (this.i >= this.list.length && this.next) this.next.resume();\r\n\r\n\t\tif (this.cbHandler)\r\n\t\t\tthis.cbHandler.call (this.cbContext);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the \"original\" property of the event to indicate where the original event comes from.\r\n\t**\r\n\t**\tEvent from (event: Event);\r\n\t*/\r\n\tfrom: function (event)\r\n\t{\r\n\t\tthis.original = event;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tEnqueues the specified event to be executed upon the current event process is finished. The \"original\"\r\n\t**\tproperty of the chained event will be set to the current event.\r\n\t**\r\n\t**\tEvent enqueueEvent (event: Event);\r\n\t*/\r\n\tenqueue: function (event)\r\n\t{\r\n\t\tif (!event) return this;\r\n\r\n\t\tvar evt;\r\n\t\tfor (evt = this; evt.next != null; evt = evt.next);\r\n\r\n\t\tevt.next = event;\r\n\t\tevent.from (this);\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n","\r\nimport Class from './class.js';\r\nimport Event from './event.js';\r\n\r\n/**\r\n**\tEvent dispatcher allows several event listeners to be attached, these will be invoked whenever the\r\n**\tevent that is being listened to is triggered.\r\n*/\r\n\r\nexport default Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"EventDispatcher\",\r\n\r\n\t/**\r\n\t**\tListeners attached to this event dispatcher. Grouped by event name.\r\n\t*/\r\n\tlisteners: null,\r\n\r\n\t/**\r\n\t**\tNamespace for event dispatching. Defaults to null. Can be modified using setNamespace().\r\n\t*/\r\n\tnamespace: null,\r\n\r\n\t/**\r\n\t**\tInitializes the event dispatcher.\r\n\t**\r\n\t**\tEventDispatcher __ctor ();\r\n\t*/\r\n\t__ctor: function ()\r\n\t{\r\n\t\tthis.listeners = { };\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the event dispatching namespace. Used to force all events dispatched to have the specified namespace.\r\n\t**\r\n\t**\tEventDispatcher setNamespace (value: string);\r\n\t*/\r\n\tsetNamespace: function (value)\r\n\t{\r\n\t\tthis.namespace = value;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tAdds an event listener for a specified event to the event dispatcher. The event name can have an optional\r\n\t**\tnamespace indicator which is added to the beginning of the event name and separated using a colon (:). This\r\n\t**\tindicator can be used to later trigger or remove all handlers of an specific namespace.\r\n\t**\r\n\t**\tEventDispatcher addEventListener (eventName: string, handler: function, context: object, data: object);\r\n\t*/\r\n\taddEventListener: function (eventName, handler, context, data)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (!this.listeners[name])\r\n\t\t\tthis.listeners[name] = [];\r\n\r\n\t\tthis.listeners[name].push ({ ns: ns, handler: handler, context: context, data: data, silent: 0 });\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tRemoves an event listener from the event dispatcher. If only the name is provided all handlers with the\r\n\t**\tspecified name will be removed. If a context is provided without a handler then any handler matching the\r\n\t**\tcontext will be removed. Special event name \"*\" can be used to match all event names.\r\n\t**\r\n\t**\tEventDispatcher removeEventListener (eventName: string, handler: function, context: object);\r\n\t*/\r\n\tremoveEventListener: function (eventName, handler, context)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar k = true;\r\n\r\n\t\t\t\t\tif (handler)\r\n\t\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\t\tif (context)\r\n\t\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\t\tif (ns)\r\n\t\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar k = true;\r\n\r\n\t\t\t\tif (handler)\r\n\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\tif (context)\r\n\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\tif (ns)\r\n\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tPrepares an event with the specified parameters for its later usage. The event is started when\r\n\t**\tthe resume() method is called. If a callback is specified it will be executed once all event\r\n\t**\thandlers have been processed.\r\n\t**\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tprepareEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tvar list = [];\r\n\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (this.listeners[name])\r\n\t\t\tlist = list.concat (this.listeners[name]);\r\n\r\n\t\tif (this.listeners[\"*\"])\r\n\t\t\tlist = list.concat (this.listeners[\"*\"]);\r\n\r\n\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\tif (list[i].silent) list.splice (i--, 1);\r\n\r\n\t\tif (ns)\r\n\t\t{\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\tif (list[i].ns != ns) list.splice (i--, 1);\r\n\t\t}\r\n\r\n\t\treturn new Event (this, list, name, eventArgs, cbHandler, cbContext);\r\n\t},\r\n\r\n\t/**\r\n\t**\tSilences or unsilences all handlers attached to an event such that if the event fires the handler(s) will\r\n\t**\tnot be invoked. It is recommended to use a namespace to ensure other handlers will continue to be run.\r\n\t**\r\n\t**\tEventDispatcher silence (eventName: string);\r\n\t*/\r\n\tsilence: function (eventName, value)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tvalue = value === false ? -1 : 1;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tlist[i].silent += value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tlist[i].silent += value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tDispatches an event to the respective listeners. If a callback is specified it will be executed once\r\n\t**\tall event handlers have been processed.\r\n\t**\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tdispatchEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\treturn this.prepareEvent(this.namespace ? this.namespace+':'+eventName : eventName, eventArgs, cbHandler, cbContext).resume();\r\n\t}\r\n});\r\n","\nimport Rinn from './alpha.js';\nimport EventDispatcher from './event-dispatcher.js';\n\n/**\n**\tA model is a high-integrity data object used to store properties and more importantly to provide event support to notify of any\n**\tkind of change that occurs to the model's properties. Integrity of the model is maintained by optionally using property constraints.\n*/\n\nlet _Model = EventDispatcher.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"Model\",\n\n\t/**\n\t**\tDefault properties for the model. Can be a map with the property name and its default value or a function\n\t**\treturning a map with dynamic default values. This is used to reset the model to its initial state.\n\t*/\n\tdefaults: null,\n\n\t/**\n\t**\tModel property contraints. A map with the property name and an object specifying the constraints of the\n\t**\tproperty. This is used to determine the type, format and behavior of each property in the model.\n\t*/\n\tconstraints: null,\n\n\t/**\n\t**\tProperties of the model.\n\t*/\n\tdata: null,\n\n\t/**\n\t**\tArray with the name of the properties that have changed. Populated prior modelChanged event.\n\t*/\n\tchangedList: null,\n\n\t/**\n\t**\tSilent mode indicator. While in silent mode events will not be dispatched.\n\t*/\n\t_silent: 0,\n\n\t/**\n\t**\tCurrent nesting level of the set() method. This is used to determine when all the property\n\t**\tchanges are done.\n\t*/\n\t_level: 0,\n\n\t/**\n\t**\tInitializes the model and sets the properties to the specified data object.\n\t**\n\t**\t>> Model __ctor (object data);\n\t**\t>> Model __ctor (object data, object defaults);\n\t*/\n\t__ctor: function (data, defaults)\n\t{\n\t\tthis._super.EventDispatcher.__ctor();\n\n\t\tthis.data = { };\n\n\t\tif (defaults != null)\n\t\t{\n\t\t\tthis.reset (defaults, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet o = null;\n\n\t\t\tif (!this.defaults && this.constraints)\n\t\t\t{\n\t\t\t\to = { };\n\n\t\t\t\tfor (let i in this.constraints)\n\t\t\t\t{\n\t\t\t\t\tlet j = this.constraints[i];\n\t\t\t\t\tif (j.def === null || j.def === undefined)\n\t\t\t\t\t{\n\t\t\t\t\t\to[i] = null;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof(j.def) === 'function')\n\t\t\t\t\t\to[i] = j.def();\n\t\t\t\t\telse\n\t\t\t\t\t\to[i] = j.def;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.reset(o);\n\t\t}\n\n\t\tthis.init();\n\n\t\tif (data != null)\n\t\t\tthis.set (data, true);\n\n\t\tif (this.constraints) this.update();\n\n\t\tthis.ready();\n\t},\n\n\t/**\n\t**\tResets the model to its default state and triggers update events. If a map is provided the defaults of\n\t**\tthe model will be set to the specified map.\n\t**\n\t**\t>> Model reset (object defaults, [bool nsilent=true]);\n\t**\t>> Model reset ([bool nsilent=true]);\n\t*/\n\treset: function (defaults, nsilent)\n\t{\n\t\tif (!this.defaults)\n\t\t{\n\t\t\tif (!defaults || (Rinn.typeOf(defaults) !== 'object' && Rinn.typeOf(defaults) !== 'function'))\n\t\t\t\treturn this;\n\n\t\t\tthis.defaults = defaults;\n\t\t}\n\n\t\tif (Rinn.typeOf(this.defaults) === 'function')\n\t\t\tthis.data = this.defaults();\n\t\telse\n\t\t\tthis.data = Rinn.clone(this.defaults);\n\n\t\treturn (nsilent === false || defaults === false) ? this : this.update(null, true);\n\t},\n\n\t/**\n\t**\tInitializes the model. Called before the model properties are set.\n\t**\n\t**\t>> void init ();\n\t*/\n\tinit: function ()\n\t{\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t**\n\t**\t>> void ready ();\n\t*/\n\tready: function ()\n\t{\n\t},\n\n\t/**\n\t**\tEnables or disables silent mode. When the model is in silent mode events will not be dispatched.\n\t**\n\t**\t>> Model silent (value: bool);\n\t*/\n\tsilent: function (value)\n\t{\n\t\tthis._silent += value ? 1 : -1;\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates a property name and value against the constraints defined in the model (if any). Returns the\n\t**\tfinal value if successful or throws an empty exception if errors occur.\n\t**\n\t**\t>> T _validate (string name, T value);\n\t*/\n\t_validate: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t\treturn value;\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tthrow new Error (`Constraint [${ctname}:${constraints[ctname]}] failed on property '${name}'.`);\n\t\t\t}\n\t\t}\n\n\t\treturn nvalue;\n\t},\n\n\t/**\n\t**\tSets the value of a property and returns the value set. This method is internally used to set properties\n\t**\tone at a time. If constraints are present in the model for the specified property all constraints will be\n\t**\tverified. When constraint errors occur the constraintError event will be raised and the property value\n\t**\twill not be changed.\n\t**\n\t**\t>> T _set (string name, T value);\n\t*/\n\t_set: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t{\n\t\t\tthis.data[name] = value;\n\t\t\treturn value;\n\t\t}\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar cvalue = this.data[name];\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (!this._silent)\n\t\t\t\t\tthis.dispatchEvent (\"constraintError\", { constraint: ctname, message: e.message, name: name, value: value });\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn (this.data[name] = nvalue);\n\t},\n\n\t/**\n\t**\tTriggers property events to indicate a property is changing. First triggers \"propertyChanging\" and then\n\t**\t\"propertyChanged\". If the first event returns false the second event will not be triggered.\n\t**\n\t**\t>> void _propertyEvent (string name, T prev, T value, bool direct=false);\n\t*/\n\t_propertyEvent: function (name, prev, value, direct)\n\t{\n\t\tvar temp = { name: name, old: prev, value: value, level: this._level };\n\n\t\tvar evt = this.dispatchEvent (\"propertyChanging\", temp);\n\n\t\tif (!direct)\n\t\t\ttemp.value = this._set (name, temp.value);\n\t\telse\n\t\t\tthis.data[name] = temp.value;\n\n\t\tif (evt != null && evt.ret.length && evt.ret[0] === false)\n\t\t\treturn;\n\n\t\tthis.dispatchEvent (\"propertyChanged.\" + name, temp);\n\t\tthis.dispatchEvent (\"propertyChanged\", temp);\n\n\t\tthis.changedList.push (name);\n\t},\n\n\t/**\n\t**\tSets one or more properties of the model. Possible arguments can be two strings or a map.\n\t**\n\t**\t>> Model set (string name, T value, bool force=true);\n\t**\t>> Model set (string name, T value, bool silent=false);\n\t**\t>> Model set (string name, T value);\n\t**\t>> Model set (object data);\n\t*/\n\tset: function ()\n\t{\n\t\tvar n = arguments.length;\n\t\tvar force = false, silent = false;\n\n\t\tif ((n > 2 || (n == 2 && Rinn.typeOf(arguments[0]) == \"object\")) && Rinn.typeOf(arguments[n-1]) == \"boolean\")\n\t\t{\n\t\t\tforce = arguments[--n];\n\t\t\tif (force === false) silent = true;\n\t\t}\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (n == 2)\n\t\t{\n\t\t\tif (this.data[arguments[0]] != arguments[1] || force)\n\t\t\t{\n\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\tthis._propertyEvent (arguments[0], this.data[arguments[0]], this._validate (arguments[0], arguments[1]));\n\t\t\t\telse\n\t\t\t\t\tthis._set (arguments[0], arguments[1]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in arguments[0])\n\t\t\t{\n\t\t\t\tif (this.data[i] != arguments[0][i] || force)\n\t\t\t\t{\n\t\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\t\tthis._propertyEvent (i, this.data[i], this._validate (i, arguments[0][i]));\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._set (i, arguments[0][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!--this._level && this.changedList.length && !silent && !this._silent)\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tReturns true if the given key exists in the model.\n\t**\n\t**\t>> boolean has (string name);\n\t*/\n\thas: function (name)\n\t{\n\t\treturn name in this.data;\n\t},\n\n\t/**\n\t**\tReturns the value of a property. If no name is specified the whole map of properties will be returned.\n\t**\tIf a boolean value of \"true\" is provided the properties map will be returned but first will be compacted\n\t**\tusing the default data to ensure only valid properties are present.\n\t**\n\t**\t>> T get (string name);\n\t**\t>> object get ();\n\t**\t>> object get (true);\n\t**\t>> object get (false);\n\t**\t\n\t*/\n\tget: function (name, def)\n\t{\n\t\tif (arguments.length == 0 || name === false)\n\t\t\treturn this.data;\n\n\t\tif (arguments.length == 1 && name === true)\n\t\t\treturn this.flatten ();\n\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : this.data[name];\n\n\t\treturn this.data[name];\n\t},\n\n\t/**\n\t**\tReturns the value of a property as an integer number.\n\t**\n\t**\t>> int getInt (string name, [int def]);\n\t*/\n\tgetInt: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseInt (this.data[name]);\n\n\t\treturn parseInt (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a floating point number.\n\t**\n\t**\t>> float getFloat (string name, [float def]);\n\t*/\n\tgetFloat: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseFloat (this.data[name]);\n\n\t\treturn parseFloat (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a boolean value (true or false).\n\t**\n\t**\t>> bool getBool (string name, [bool def]);\n\t**\t\n\t*/\n\tgetBool: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\tname = this.data[name] === undefined ? def : this.data[name];\n\t\telse\n\t\t\tname = this.data[name];\n\n\t\tif (name === \"true\" || name === true)\n\t\t\treturn true;\n\n\t\tif (name === \"false\" || name === false)\n\t\t\treturn false;\n\n\t\treturn parseInt (name) ? true : false;\n\t},\n\n\t/**\n\t**\tReturns a reference object for a model property. The resulting object contains two methods\n\t**\tnamed \"get\" and \"set\" to modify the value of the property.\n\t**\n\t**\t>> object getReference (string name);\n\t*/\n\tgetReference: function (name)\n\t{\t\n\t\tvar m = this;\n\n\t\treturn {\n\t\t\tget: function() {\n\t\t\t\treturn m.get(name);\n\t\t\t},\n\n\t\t\tset: function(value) {\n\t\t\t\tm.set(name, value);\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t**\tSets or returns a constraint given the property name. \n\t**\n\t**\t>> Model constraint (string field, string constraint, T value);\n\t**\t>> Model constraint (string field, object constraint);\n\t**\t>> Model constraint (object constraints);\n\t**\t>> object constraint (string field);\n\t*/\n\tconstraint: function (field, constraint, value)\n\t{\n\t\tif (arguments.length == 3 || arguments.length == 2 || (arguments.length == 1 && Rinn.typeOf(field) == \"object\"))\n\t\t{\n\t\t\tif (this.constraints === this.constructor.prototype.constraints)\n\t\t\t\tthis.constraints = Rinn.clone (this.constraints);\n\n\t\t\tswitch (arguments.length)\n\t\t\t{\n\t\t\t\tcase 1:\n\t\t\t\t\tRinn.override (this.constraints, field);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tRinn.override (this.constraints[field], constraint);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.constraints[field][constraint] = value;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn !field ? this : this.constraints[field];\n\t},\n\n\t/**\n\t**\tReturns a compact version of the model properties. That is, a map only with validated properties that are\n\t**\talso present in the default data map. Returns null if the object is not compliant. If the \"safe\" parameter\n\t**\tis set one last property named \"class\" will be attached, this specifies the original classPath of the object.\n\t**\n\t**\t>> object flatten ([bool safe=false]);\n\t*/\n\tflatten: function (safe, rsafe)\n\t{\n\t\tif (safe)\n\t\t{\n\t\t\tvar data = this.flatten(false, true);\n\t\t\tif (data == null) return null;\n\n\t\t\tdata[\"class\"] = this.classPath;\n\t\t\treturn data;\n\t\t}\n\n\t\tif (!this.constraints && !this.defaults)\n\t\t\treturn this.data;\n\n\t\tif (!this.isCompliant())\n\t\t\treturn { };\n\n\t\tvar constraints = this.constraints;\n\t\tvar keys = this.defaults ? (Rinn.typeOf(this.defaults) == \"function\" ? this.defaults() : this.defaults) : this.constraints;\n\n\t\tvar data = { };\n\n\t\tfor (var i in this.data)\n\t\t{\n\t\t\tif (!(i in keys)) continue;\n\n\t\t\tif (constraints && constraints[i])\n\t\t\t{\n\t\t\t\tvar ct = constraints[i];\n\n\t\t\t\tif (ct.model)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten(rsafe) : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.arrayof)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = [];\n\n\t\t\t\t\tfor (var j = 0; j < this.data[i].length; j++)\n\t\t\t\t\t\tdata[i][j] = this.data[i][j] ? this.data[i][j].flatten(rsafe) : null;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.cls)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten() : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdata[i] = this.data[i];\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t/**\n\t**\tRemoves a property or a list of properties.\n\t**\n\t**\t>> void remove (string name, [bool nsilent=true]);\n\t**\t>> void remove (array name, [bool nsilent=true]);\n\t*/\n\tremove: function (name, nsilent)\n\t{\n\t\tif (Rinn.typeOf(name) == \"array\")\n\t\t{\n\t\t\tfor (var i = 0; i < name.length; i++)\n\t\t\t\tdelete this.data[name[i]];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: name });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdelete this.data[name];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: [name] });\n\t\t}\n\t},\n\n\t/**\n\t**\tTriggers data change events for one or more properties. Ensure that silent mode is not enabled or else\n\t**\tthis method will have no effect. If no parameters are provided a full update will be triggered on all of\n\t**\tthe model properties.\n\t**\n\t**\t>> Model update (array fields);\n\t**\t>> Model update (string name);\n\t**\t>> Model update (bool forceModelChanged);\n\t**\t>> Model update ();\n\t*/\n\tupdate: function (fields, direct)\n\t{\n\t\tif (this._silent) return this;\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (fields && Rinn.typeOf(fields) == 'string')\n\t\t{\n\t\t\tthis._propertyEvent (fields, this.data[fields], this.data[fields], direct);\n\t\t}\n\t\telse if (fields && Rinn.typeOf(fields) == 'array')\n\t\t{\n\t\t\tfor (var i of fields)\n\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t}\n\n\t\tif (!--this._level && !this._silent && (this.changedList.length != 0 || fields === true))\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates one or mode model properties using the defined constraints. If no parameters are provided all of\n\t**\tthe properties in the model will be validated.\n\t**\n\t**\t>> Model validate (array fields);\n\t**\t>> Model validate (string name);\n\t**\t>> Model validate ();\n\t*/\n\tvalidate: function (fields)\n\t{\n\t\tif (!this.constraints) return this;\n\n\t\tif (fields && Rinn.typeOf(fields) == \"string\")\n\t\t{\n\t\t\tthis._set (fields, this.data[fields])\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t{\n\t\t\t\tif (fields && Rinn.indexOf(fields, i) == -1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._set (i, this.data[i])\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates all the properties in the model and returns a boolean indicating if all of them comply with the\n\t**\tconstraints defined in the model.\n\t**\n\t**\t>> bool isCompliant ();\n\t*/\n\tisCompliant: function ()\n\t{\n\t\tif (!this.constraints) return true;\n\n\t\ttry\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t\tthis._validate (i, this.data[i]);\n\n\t\t\treturn true;\n\t\t}\n\t\tcatch (e) {\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t**\tRegisters an event handler for changes in a specific property of the model.\n\t**\n\t**\t>> void observe (string property, function handler, object context);\n\t*/\n\tobserve: function (property, handler, context)\n\t{\n\t\tthis.addEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tUnregisters an event handler from changes in a specific property of the model.\n\t**\n\t**\t>> void unobserve (string property, function handler, object context);\n\t*/\n\tunobserve: function (property, handler, context)\n\t{\n\t\tthis.removeEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tAdds a propertyChanged event handler for the given property. The property name can have an event namespace prepended and separated by colon.\n\t**\n\t**\t>> void watch (string property, function handler);\n\t*/\n\twatch: function (property, handler)\n\t{\n\t\tproperty = property.split(':');\n\n\t\tif (property.length == 1)\n\t\t{\n\t\t\tproperty[1] = property[0];\n\t\t\tproperty[0] = 'watch';\n\t\t}\n\n\t\tthis.addEventListener (property[0]+\":propertyChanged.\"+property[1], function (evt, args) {\n\t\t\thandler (args.value, args, evt);\n\t\t});\n\t},\n\n\t/**\n\t**\tRemoves propertyChanged handlers related to the specified property. The property name can have an event namespace prepended and separated by colon.\n\t**\n\t**\t>> void unwatch (string property);\n\t*/\n\tunwatch: function (property)\n\t{\n\t\tproperty = property.split(':');\n\t\tif (property.length == 1)\n\t\t{\n\t\t\tproperty[1] = property[0];\n\t\t\tproperty[0] = 'watch';\n\t\t}\n\n\t\tthis.removeEventListener (property[0]+\":propertyChanged.\"+property[1]);\n\t},\n\n\t/**\n\t**\tSerializes the model into a string.\n\t**\n\t**\tstring toString ();\n\t*/\n\ttoString: function ()\n\t{\n\t\treturn Rinn.serialize(this.get (true));\n\t}\n});\n\n\n/**\n**\tImport model constraints.\n*/\n\nimport Constraints from './model-constraints.js';\n_Model.Constraints = Constraints;\n\nexport default _Model;\n","\nimport Rinn from './alpha.js';\nimport Model from './model.js';\n\n/**\n**\tGeneric list for models.\n*/\n\nexport default Model.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"ModelList\",\n\n\t/**\n\t**\tClass of the items in the list, can be overriden by child classes to impose a more strict constraint.\n\t*/\n\titemt: Model,\n\n\t/**\n\t**\tMirror of data.contents\n\t*/\n\tcontents: null,\n\n\t/**\n\t**\tIDs of every item in the contents.\n\t*/\n\titemId: null,\n\n\t/**\n\t**\tAutoincremental ID for the next item to be added.\n\t*/\n\tnextId: null,\n\n\t/**\n\t**\tDefault properties of the model.\n\t*/\n\tdefaults:\n\t{\n\t\tcontents: null\n\t},\n\n\t/**\n\t**\tConstraints of the model to ensure integrity.\n\t*/\n\tconstraints:\n\t{\n\t\tcontents: {\n\t\t\ttype: \"array\",\n\t\t\tarrayof: \"@itemt\"\n\t\t}\n\t},\n\n\t/**\n\t**\tConstructor.\n\t*/\n\t__ctor: function (...args)\n\t{\n\t\tthis.itemId = [];\n\t\tthis.nextId = 0;\n\n\t\tthis._super.Model.__ctor(...args);\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t*/\n\tready: function ()\n\t{\n\t\tthis._eventGroup = \"ModelList_\" + Date.now() + \":modelChanged\";\n\n\t\tthis.contents = this.data.contents;\n\t},\n\n\t/**\n\t**\tConnects the event handlers to the item.\n\t**\n\t**\t>> Model _bind (int iid, Model item);\n\t*/\n\t_bind: function (iid, item)\n\t{\n\t\tif (item && item.addEventListener) item.addEventListener (this._eventGroup, this._onItemEvent, this, iid);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tDisconnects the event handlers from the item.\n\t**\n\t**\t>> Model _unbind (Model item);\n\t*/\n\t_unbind: function (item)\n\t{\n\t\tif (item && item.removeEventListener) item.removeEventListener (this._eventGroup);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tHandler for item events.\n\t**\n\t**\t>> Model _onItemEvent (Event evt, object args, int iid);\n\t*/\n\t_onItemEvent: function (evt, args, iid)\n\t{\n\t\tthis.prepareEvent (\"itemChanged\", { id: iid, item: evt.source }).from (evt)\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tReturns the number of items in the list.\n\t**\n\t**\t>> int length ();\n\t*/\n\tlength: function ()\n\t{\n\t\treturn this.data.contents.length;\n\t},\n\n\t/**\n\t**\tClears the contents of the list.\n\t**\n\t**\t>> void clear ();\n\t*/\n\tclear: function ()\n\t{\n\t\tfor (var i = 0; i < this.data.contents; i++)\n\t\t\tthis._unbind (this.data.contents[i]);\n\n\t\tthis.itemId = [];\n\t\tthis.nextId = 0;\n\n\t\tthis.contents = this.data.contents = [];\n\n\t\tthis.prepareEvent (\"itemsCleared\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tSets the contents of the list with the specified array. All items will be ensured to be of the same model\n\t**\ttype as the one specified in the list.\n\t**\n\t**\t>> ModelList setData (array data);\n\t*/\n\tsetData: function (data)\n\t{\n\t\tthis.clear();\n\t\tif (!data) return this;\n\n\t\tfor (var i = 0; i < data.length; i++)\n\t\t{\n\t\t\tvar item = Rinn.ensureTypeOf(this.itemt, data[i]);\n\n\t\t\tthis.itemId.push(this.nextId++);\n\t\t\tthis.data.contents.push(item);\n\n\t\t\tthis._bind(this.nextId-1, item);\n\t\t}\n\n\t\tthis.prepareEvent (\"itemsChanged\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tReturns the raw array contents of the list.\n\t**\n\t**\t>> array getData ();\n\t*/\n\tgetData: function ()\n\t{\n\t\treturn this.data.contents;\n\t},\n\n\t/**\n\t**\tReturns the item at the specified index or null if the index is out of bounds.\n\t**\n\t**\t>> Model getAt (int index);\n\t*/\n\tgetAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\treturn this.data.contents[index];\n\t},\n\n\t/**\n\t**\tRemoves and returns the item at the specified index. Returns null if the index is out of bounds.\n\t**\n\t**\t>> Model removeAt (int index);\n\t*/\n\tremoveAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\tlet item = this.data.contents.splice(index, 1)[0];\n\t\tlet id = this.itemId.splice(index, 1)[0];\n\n\t\tthis._unbind (item);\n\n\t\tthis.prepareEvent (\"itemRemoved\", { id: id, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tSets the item at the specified index. Returns false if the index is out of bounds, true otherwise. The\n\t**\titem will be ensured to be of the model defined in the list.\n\t**\n\t**\t>> bool setAt (int index, Model item);\n\t*/\n\tsetAt: function (index, item)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\titem = Rinn.ensureTypeOf(this.itemt, item);\n\n\t\tthis._unbind(this.data.contents[index]);\n\t\tthis.data.contents[index] = item;\n\t\tthis._bind(this.itemId[index], item);\n\n\t\tthis.prepareEvent (\"itemChanged\", { id: this.itemId[index], item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tNotifies a change in the item at the specified index. Returns false if the index is out of bounds.\n\t**\n\t**\t>> bool updateAt (int index);\n\t*/\n\tupdateAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\tthis.prepareEvent (\"itemChanged\", { id: this.itemId[index], item: this.data.contents[index] })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tAdds an item to the bottom of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model push (Model item);\n\t*/\n\tpush: function (item)\n\t{\n\t\tif (item && Rinn.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rinn.ensureTypeOf(this.itemt, item);\n\n\t\tthis.itemId.push(this.nextId++);\n\t\tthis.data.contents.push (item);\n\t\tthis._bind(this.nextId-1, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { id: this.itemId[this.itemId.length-1], item: item, position: 'tail' })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the bottom of the list.\n\t**\n\t**\t>> Model pop ();\n\t*/\n\tpop: function ()\n\t{\n\t\treturn this._unbind(this.data.contents.pop());\n\t},\n\n\t/**\n\t**\tAdds an item to the top of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model unshift (Model item);\n\t*/\n\tunshift: function (item)\n\t{\n\t\tif (item && Rinn.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rinn.ensureTypeOf(this.itemt, item);\n\n\t\tthis.itemId.unshift(this.nextId++);\n\t\tthis.data.contents.unshift (item);\n\t\tthis._bind(this.nextId-1, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { id: this.itemId[0], item: item, position: 'head' })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the top of the list.\n\t**\n\t**\t>> Model shift ();\n\t*/\n\tshift: function ()\n\t{\n\t\treturn this._unbind(this.data.contents.shift());\n\t},\n\n\t/**\n\t**\tSearches for an item matching the specified partial definition and returns its index. Returns -1 if the\n\t**\titem was not found. If retObject is set to true the object will be returned instead of its index and null\n\t**\twill be returned when the item is not found.\n\t**\n\t**\tint|object find (object data, bool retObject=false);\n\t*/\n\tfind: function (data, retObject=false)\n\t{\n\t\tvar contents = this.data.contents;\n\n\t\tfor (var i = 0; i < contents.length; i++)\n\t\t{\n\t\t\tif (Rinn.partialCompare (contents[i].data, data))\n\t\t\t\treturn retObject ? contents[i] : i;\n\t\t}\n\n\t\treturn retObject ? null : -1;\n\t}\n});\n","\r\nimport Rinn from './alpha.js';\r\n\r\n/**\r\n * The utility functions in this module allow to create a very strict serialization/deserialization schema\r\n * to ensure that all values are of the specific type when stored in string format.\r\n */\r\n\r\nlet Schema =\r\n{\r\n\tType: function (proto)\r\n    {\r\n\t\tlet tmp =\r\n\t\t{\r\n            flatten: function (value, context) {\r\n                return value;\r\n            },\r\n\r\n            unflatten: function (value, context) {\r\n                return value;\r\n            }\r\n        };\r\n\r\n        return proto ? Rinn.override(tmp, proto) : tmp;\r\n    },\r\n\r\n\tString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tInteger: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tNumber: function (precision)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_precision: precision,\r\n\t\t\t_round: false,\r\n\r\n\t\t\tprecision: function (value)\r\n\t\t\t{\r\n\t\t\t\tthis._precision = ~~value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tvalue = parseFloat(value);\r\n\r\n\t\t\t\tif (this._precision > 0)\r\n\t\t\t\t\tvalue = (~~(value*Math.pow(10, this._precision))) / Math.pow(10, this._precision);\r\n\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn parseFloat(value);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tBool: function (compact)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_compact: compact,\r\n\r\n\t\t\tcompact: function(value)\r\n\t\t\t{\r\n\t\t\t\tthis._compact = value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\tvalue = ~~value;\r\n\t\t\t\treturn this._compact ? (value > 0 ? 1 : 0) : (value > 0 ? true : false);\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn (~~value) ? true : false;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tSharedString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return 0;\r\n\r\n\t\t\t\tvalue = value.toString();\r\n\r\n                if (!(\"strings\" in context))\r\n                {\r\n                    context.index = { };\r\n                    context.strings = [ ];\r\n                }\r\n\r\n                if (!(value in context.index))\r\n                {\r\n                    context.strings.push(value);\r\n                    context.index[value] = context.strings.length;\r\n                }\r\n\r\n                return context.index[value];\r\n            },\r\n\r\n\t\t\tunflatten: function (value, context)\r\n\t\t\t{\r\n                return value == null || value == 0 ? null : context.strings[~~value - 1];\r\n            }\r\n        });\r\n    },\r\n\r\n\tArray: function (type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\titemType: type,\r\n\t\t\t_debug: false,\r\n\t\t\t_filter: null,\r\n\r\n\t\t\tdebug: function(v) {\r\n\t\t\t\tthis._debug = v;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            of: function (type) {\r\n                this.itemType = type;\r\n                return this;\r\n            },\r\n\r\n\t\t\tfilter: function (callback) {\r\n\t\t\t\tthis._filter = callback;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n\r\n                for (let i = 0; i < value.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (this._filter && !this._filter(value[i], i))\r\n\t\t\t\t\t\tcontinue;\r\n\r\n                    o.push(this.itemType.flatten(value[i], context));\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n\t\t\tunflatten: async function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(await this.itemType.unflatten(value[i], context));\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n    },\r\n\r\n    Object: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            properties: [ ],\r\n\r\n            property: function (name, type, defvalue=null)\r\n            {\r\n                this.properties.push({ name: name, source: name, type: type, defvalue: defvalue });\r\n                return this;\r\n            },\r\n\r\n            propertyAlias: function (name, source, type, defvalue=null)\r\n            {\r\n                this.properties.push({ name: name, source: source, type: type, defvalue: defvalue });\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (this.properties[i].source in value)\r\n\t\t\t\t\t\t\to[this.properties[i].name] = this.properties[i].type.flatten(value[this.properties[i].source], context);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\to[this.properties[i].name] = this.properties[i].type.flatten(this.properties[i].defvalue, context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = [ ];\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (this.properties[i].source in value)\r\n\t\t\t\t\t\t\to.push(this.properties[i].type.flatten(value[this.properties[i].source], context));\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\to.push(this.properties[i].type.flatten(this.properties[i].defvalue, context));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(this.properties[i].name in value ? value[this.properties[i].name] : this.properties[i].defvalue, context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(i in value ? value[i] : this.properties[i].defvalue, context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Class: function (classConstructor)\r\n    {\r\n\t\treturn Schema.Type\r\n\t\t({\r\n            _constructor: classConstructor,\r\n\r\n            constructor: function (classConstructor)\r\n            {\r\n                this._constructor = classConstructor;\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n                return value == null ? null : value.flatten(context);\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\treturn value == null ? null : await (new this._constructor()).unflatten(value, context);\r\n            }\r\n        });\r\n\t},\r\n\r\n\t/*\r\n\t**\tUsed when you want to specify just a single property.\r\n\t*/\r\n    Property: function(name, type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\tproperty: name,\r\n\t\t\ttype: type,\r\n\r\n\t\t\tname: function (name)\r\n\t\t\t{\r\n\t\t\t\tthis.property = name;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tis: function (type)\r\n\t\t\t{\r\n\t\t\t\tthis.type = type;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\t\t\t\t\to[this.property] = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value[this.property], context);\r\n\t\t\t\telse\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value, context);\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Map: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = [ ];\r\n\r\n\t\t\t\tfor (let i in value)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(i);\r\n\t\t\t\t\to.push(value[i]);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i += 2)\r\n\t\t\t\t\to[value[i]] = value[i+1];\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Selector: function ()\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\tconditions: [],\r\n\t\t\tvalue: null,\r\n\r\n\t\t\twhen: function (value, type)\r\n\t\t\t{\r\n\t\t\t\tthis.conditions.push([ (val) => val === value, type ]);\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\twith: function (value)\r\n\t\t\t{\r\n\t\t\t\tthis.value = value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tfor (let i of this.conditions)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (i[0](this.value) === true)\r\n\t\t\t\t\t\treturn i[1].flatten(value, context);\r\n\t\t\t\t}\r\n\r\n                return null;\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tfor (let i of this.conditions)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (i[0](this.value) === true)\r\n\t\t\t\t\t\treturn await i[1].unflatten(value, context);\r\n\t\t\t\t}\r\n\r\n                return null;\r\n            }\r\n\r\n        });\r\n\t}\r\n};\r\n\r\nexport default Schema;\r\n","\r\nimport Class from './class.js';\r\n\r\n/**\r\n**\tClass used to add flattening and unflattening capabilities to any object. A \"flat\" object is an object composed\r\n**\tonly of native types, that is: `null,` `boolean`, `integer`, `number`, `array` or `object`.\r\n*/\r\n\r\nexport default Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Flattenable\",\r\n\r\n\t/**\r\n\t**\tType schema used to flatten/unflatten the contents of this class. See Schema class for more information.\r\n\t*/\r\n\ttypeSchema: null,\r\n\r\n\t/**\r\n\t**\tReturns the flattened contents of the object.\r\n\t*/\r\n\tflatten: function (context)\r\n\t{\r\n\t\treturn this.typeSchema.flatten(this, context);\r\n\t},\r\n\r\n\t/**\r\n\t**\tUnflattens the given object and overrides the local contents.\r\n\t*/\r\n\tunflatten: async function (value, context)\r\n\t{\r\n\t\tObject.assign(this, await this.typeSchema.unflatten(value, context));\r\n\t\tawait this.onUnflattened();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted when the unflatten() method is called on the object.\r\n\t*/\r\n\tonUnflattened: async function ()\r\n\t{\r\n\t}\r\n});\r\n","\r\nimport Flattenable from './flattenable.js';\r\nimport Schema from './schema.js';\r\nimport Rinn from './alpha.js';\r\n\r\n/**\r\n**\tFlattenable collection class, used to store items and manipulate them. The items should also be flattenable.\r\n*/\r\n\r\nexport default Flattenable.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Collection\",\r\n\r\n\t/**\r\n\t**\tDescribes the type schema of the underlying items.\r\n\t*/\r\n\titemTypeSchema: null,\r\n\r\n\t/**\r\n\t**\tArray of items.\r\n\t*/\r\n\titems: null, /* Array */\r\n\r\n\t/**\r\n\t**\tConstructs the collection.\r\n\t*/\r\n\t__ctor: function (itemTypeSchema)\r\n\t{\r\n\t\tif (!itemTypeSchema) itemTypeSchema = this.itemTypeSchema;\r\n\r\n\t\tif (itemTypeSchema)\r\n\t\t\tthis.typeSchema = Schema.Property('items').is(Schema.Array().of(itemTypeSchema));\r\n\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted after the collection has been unflattened, re-adds the items to ensure onItemAdded() is called.\r\n\t*/\r\n\tonUnflattened: function()\r\n\t{\r\n\t\tlet items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (let i of items)\r\n\t\t\tthis.add(i);\r\n\t},\r\n\r\n\t/**\r\n\t * \tExecuted when the value in `items` is changed.\r\n\t */\r\n\titemsReferenceChanged: function()\r\n\t{\r\n\t},\r\n\r\n\t/*\r\n\t**\tResets the collection to empty. Note that onItemRemoved will not be called.\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.items = [];\r\n\t\tthis.itemsReferenceChanged();\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tClears the contents of the collection (removes each item manually, onItemRemoved will be called).\r\n\t*/\r\n\tclear: function ()\r\n\t{\r\n\t\tvar items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (var i = 0; i < items.length; i++)\r\n\t\t\tthis.onItemRemoved (items[i], 0);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSorts the collection. A comparison function should be provided, or the name of a property to sort by.\r\n\t**\r\n\t**\tObject sort (fn: Function)\r\n\t**\tObject sort (prop: string, [desc:bool=false])\r\n\t*/\r\n\tsort: function (fn, desc)\r\n\t{\r\n\t\tif (typeof(fn) != \"function\")\r\n\t\t{\r\n\t\t\tthis.items.sort(function(a, b)\r\n\t\t\t{\r\n\t\t\t\treturn (a[fn] <= b[fn] ? -1 : 1) * (desc === true ? -1 : 1);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.items.sort(fn);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSearches for an item with the specified fields and returns it. The \"inc\" object is the \"inclusive\" map, meaning all fields must match\r\n\t**\tand the optional \"exc\" is the exclusive map, meaning not even one field should match.\r\n\t**\r\n\t**\tObject findItem (inc: Object, exc: Object);\r\n\t*/\t\r\n\tfindItem: function (inc, exc)\r\n\t{\r\n\t\tif (!this.items) return null;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t{\r\n\t\t\tif (exc && Rinn.partialCompare(this.items[i], exc))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rinn.partialCompare(this.items[i], inc))\r\n\t\t\t\treturn this.items[i];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the container array.\r\n\t*/\r\n\tgetItems: function ()\r\n\t{\r\n\t\treturn this.items;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the number of items in the collection.\r\n\t*/\r\n\tlength: function ()\r\n\t{\r\n\t\treturn this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns true if the collection is empty.\r\n\t*/\r\n\tisEmpty: function ()\r\n\t{\r\n\t\treturn !this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the index of the specified item, or -1 if not found.\r\n\t*/\r\n\tindexOf: function (item)\r\n\t{\r\n\t\treturn this.items.indexOf(item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the item at the specified index, or null if not found. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/\r\n\tgetAt: function (index, relative=false)\r\n\t{\r\n\t\tif (index < 0 && relative == true)\r\n\t\t\tindex += this.items.length;\r\n\r\n\t\treturn index >= 0 && index < this.items.length ? this.items[index] : null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the first item in the collection.\r\n\t*/\r\n\tfirst: function ()\r\n\t{\r\n\t\treturn this.getAt(0);\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the last item in the collection.\r\n\t*/\r\n\tlast: function ()\r\n\t{\r\n\t\treturn this.getAt(-1, true);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item at the specified index, effectively moving the remaining items to the right.\r\n\t*/\r\n\taddAt: function (index, item)\r\n\t{\r\n\t\tif (!item || !this.onBeforeItemAdded (item))\r\n\t\t\treturn this;\r\n\r\n\t\tif (index < 0) index = 0;\r\n\t\tif (index > this.items.length) index = this.items.length;\r\n\r\n\t\tif (index == 0)\r\n\t\t{\r\n\t\t\tthis.items.unshift(item);\r\n\t\t}\r\n\t\telse if (index == this.items.length)\r\n\t\t{\r\n\t\t\tthis.items.push(item);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar tmp = this.items.splice(0, index);\r\n\t\t\ttmp.push(item);\r\n\r\n\t\t\tthis.items = tmp.concat(this.items);\r\n\t\t\tthis.itemsReferenceChanged();\r\n\t\t}\r\n\r\n\t\tthis.onItemAdded (item);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the start of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tunshift: function (item)\r\n\t{\r\n\t\treturn this.addAt(0, item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tpush: function (item)\r\n\t{\r\n\t\treturn this.addAt(this.items.length, item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tadd: function (item)\r\n\t{\r\n\t\treturn this.push(item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the item at the specified index. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/\r\n\tremoveAt: function (index, relative=false)\r\n\t{\r\n\t\tif (index < 0 && relative == true)\r\n\t\t\tindex += this.items.length;\r\n\r\n\t\tif (index < 0 || index >= this.items.length)\r\n\t\t\treturn null;\r\n\r\n\t\tvar item = this.items[index];\r\n\t\tthis.items.splice (index, 1);\r\n\t\tthis.onItemRemoved (item, index);\r\n\r\n\t\treturn item;\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves an item from the end of the collection.\r\n\t*/\r\n\tpop: function (item)\r\n\t{\r\n\t\treturn this.removeAt(-1, true);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves an item from the start of the collection.\r\n\t*/\r\n\tshift: function (item)\r\n\t{\r\n\t\treturn this.removeAt(0);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the specified item from the collection.\r\n\t*/\r\n\tremove: function (item)\r\n\t{\r\n\t\treturn this.removeAt (this.indexOf(item));\r\n\t},\r\n\r\n\t/*\r\n\t**\tRuns the specified callback for each of the items in the collection, if false is returned by the callback this function\r\n\t**\twill exit immediately. Parameters to the callback are: (item, index, collection).\r\n\t*/\r\n\tforEach: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecutes a method call with the specified parameters on each of the items in the collection, if false is returned by the\r\n\t**\titem's method this function will exit immediately.\r\n\t*/\r\n\tforEachCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEach but in reverse order.\r\n\t*/\r\n\tforEachRev: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEachCall but in reverse order.\r\n\t*/\r\n\tforEachRevCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the beforeItemAdded event. If returns false the item will not be added.\r\n\t*/\r\n\tonBeforeItemAdded: function (item)\r\n\t{\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemAdded event.\r\n\t*/\r\n\tonItemAdded: function (item)\r\n\t{\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemRemoved event.\r\n\t*/\r\n\tonItemRemoved: function (item)\r\n\t{\r\n\t}\r\n});\r\n","\nimport Rinn from './alpha.js';\n\n/**\n**\tTemplating module. The template formats available are shown below, note that the sym-open and sym-close symbols are by\n**\tdefault the square brackets, however those can be modified since are just parameters.\n**\n**\tHTML Escaped Output:\t\t\t[data.value]\t\t\t\t\tEscapes HTML characters from the output.\n**\tRaw Output:\t\t\t\t\t\t[!data.value]\t\t\t\t\tDoes not escape HTML characters from the output (used to output direct HTML).\n**\tDouble-Quoted Escaped Output:\t[data.value]\t\t\t\t\tEscapes HTML characters and surrounds with double quotes.\n**\tImmediate Reparse:\t\t\t\t[<....] [@....] \"...\" '...'\t\tReparses the contents as if parseTemplate() was called again.\n**\tImmediate Output:\t\t\t\t[:...]\t\t\t\t\t\t\tTakes the contents and outputs exactly as-is without format and optionally surrounded by the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsym-open and sym-close symbols when the first character is not '<', sym_open or space.\n**\tFiltered Output:\t\t\t\t[functionName ... <expr> ...]\tRuns a function call, 'expr' can be any of the allowed formats shown here (nested if desired),\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunctionName should map to one of the available expression functions registered in the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRinn.Template.functions map, each of which have their own parameters.\n*/\n\nlet Template =\n{\n\t/*\n\t**\tStrict mode flag. When set, any undefined expression function will trigger an exception.\n\t*/\n\tstrict: false,\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method.\n\t**\n\t**\t>> array parseTemplate (string template, char sym_open, char sym_close, bool is_tpl=false);\n\t*/\n\tparseTemplate: function (template, sym_open, sym_close, is_tpl=false, root=1)\n\t{\n\t\tlet nflush = 'string', flush = null, state = 0, count = 0;\n\t\tlet str = '', parts = [], mparts = parts, nparts = false;\n\n\t\tif (is_tpl === true)\n\t\t{\n\t\t\ttemplate = template.trim();\n\t\t\tnflush = 'identifier';\n\t\t\tstate = 10;\n\n\t\t\tmparts.push(parts = []);\n\t\t}\n\n\t\ttemplate += \"\\0\";\n\n\t\tfunction unescape (value)\n\t\t{\n\t\t\tif (typeof(value) == 'object')\n\t\t\t{\n\t\t\t\tif (value instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t\t\t\tunescape(value[i]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvalue.data = unescape(value.data);\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t{\n\t\t\t\tif (value[i] == '\\\\')\n\t\t\t\t{\n\t\t\t\t\tlet r = value[i+1];\n\n\t\t\t\t\tswitch (r)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'n': r = \"\\n\"; break;\n\t\t\t\t\t\tcase 'r': r = \"\\r\"; break;\n\t\t\t\t\t\tcase 'f': r = \"\\f\"; break;\n\t\t\t\t\t\tcase 'v': r = \"\\v\"; break;\n\t\t\t\t\t\tcase 't': r = \"\\t\"; break;\n\t\t\t\t\t\tcase 's': r = \"\\s\"; break;\n\t\t\t\t\t\tcase '\"': r = \"\\\"\"; break;\n\t\t\t\t\t\tcase \"'\": r = \"\\'\"; break;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = value.substr(0, i) + r + value.substr(i+2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction emit (type, data)\n\t\t{\n\t\t\tif (type == 'template')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, true, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t\ttype = 'base-string';\n\n\t\t\t\tif (Rinn.typeOf(data) == 'array')\n\t\t\t\t{\n\t\t\t\t\ttype = data[0].type;\n\t\t\t\t\tdata = data[0].data;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data.trim().split('\\n').map(i => i.trim()).join(\"\\n\"), sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge-alt')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, '{', '}', false, 0);\n\t\t\t}\n\n\t\t\tif (type == 'parse-merge' || type == 'parse-merge-alt' || type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tparts.push(data[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tparts.push({ type: type, data: data });\n\n\t\t\tif (nparts)\n\t\t\t{\n\t\t\t\tmparts.push(parts = []);\n\t\t\t\tnparts = false;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < template.length; i++)\n\t\t{\n\t\t\tif (template[i] == '\\\\')\n\t\t\t{\n\t\t\t\tstr += '\\\\';\n\t\t\t\tstr += template[++i];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (state)\n\t\t\t{\n\t\t\t\tcase 0:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-merge';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 12; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'template';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 1:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 10:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '.')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\temit ('access', '.');\n\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tnparts = true;\n\n\t\t\t\t\t\twhile (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null) i++;\n\t\t\t\t\t\ti--;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 14; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 15; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 16; count = 1; nflush = 'parse-merge-alt';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 13; count = 1; nflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) emit (nflush, str);\n\t\t\t\t\t\tstate = 11; count = 1; str = ''; nflush = 'parse';\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nflush != 'identifier')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 11:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 12:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (str.length != 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 13:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\n\t\t\t\t\t\t\tstate = 10;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 14:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\"');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 15:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\\'');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 16:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '`');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (flush)\n\t\t\t{\n\t\t\t\temit (flush, str);\n\t\t\t\tflush = str = '';\n\t\t\t}\n\t\t}\n\n\t\tif (!is_tpl)\n\t\t{\n\t\t\tlet i = 0;\n\t\t\twhile (i < mparts.length)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ti = mparts.length-1;\n\t\t\twhile (i > 0)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i--, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (mparts.length == 0)\n\t\t\t\tmparts.push({ type: 'string', data: '' });\n\t\t}\n\n\t\tif (root)\n\t\t\tunescape(mparts);\n\n\t\treturn mparts;\n\t},\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method. This\n\t**\tversion assumes the sym_open and sym_close chars are [ and ] respectively.\n\t**\n\t**\t>> array parse (string template);\n\t*/\n\tparse: function (template)\n\t{\n\t\treturn this.parseTemplate(template.trim(), '[', ']', false);\n\t},\n\n\t/**\n\t**\tRemoves all static parts from a parsed template.\n\t**\n\t**\t>> array clean (array parts);\n\t*/\n\tclean: function (parts)\n\t{\n\t\tfor (let i = 0; i < parts.length; i++)\n\t\t{\n\t\t\tif (parts[i].type != 'template')\n\t\t\t{\n\t\t\t\tparts.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\treturn parts;\n\t},\n\n\t/**\n\t**\tExpands a template using the given data object, ret can be set to 'text' or 'obj' allowing to expand the template as\n\t**\ta string (text) or an array of objects (obj) respectively. If none provided it will be expanded as text.\n\t**\n\t**\t>> string/array expand (array parts, object data, string ret='text', string mode='base-string');\n\t*/\n\texpand: function (parts, data, ret='text', mode='base-string')\n\t{\n\t\tlet s = [];\n\n\t\t// Expand variable parts.\n\t\tif (mode == 'var')\n\t\t{\n\t\t\tlet escape = true;\n\t\t\tlet quote = false;\n\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (str == '') str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tescape = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tquote = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tescape = false;\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tquote = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (str != 'this')\n\t\t\t{\n\t\t\t\tlet failed = false;\n\n\t\t\t\tif (data != null)\n\t\t\t\t{\n\t\t\t\t\tif (!(str in data))\n\t\t\t\t\t{\n\t\t\t\t\t\tfailed = true;\n\t\t\t\t\t\tdata = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tdata = data[str];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tfailed = true;\n\n\t\t\t\tif (failed && parts.length == 1)\n\t\t\t\t{\n\t\t\t\t\tif (Template.strict == true)\n\t\t\t\t\t\tthrow new Error ('Expression function `'+str+'` not found.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof(data) == 'string')\n\t\t\t{\n\t\t\t\tif (escape)\n\t\t\t\t\tdata = data.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n\n\t\t\t\tif (quote)\n\t\t\t\t\tdata = '\"' + data + '\"';\n\t\t\t}\n\n\t\t\ts.push(data);\n\t\t}\n\n\t\t// Expand variable parts and returns a reference to it.\n\t\tif (ret == 'varref')\n\t\t{\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (str == '') str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn str != 'this' ? [data, str] : null;\n\t\t}\n\n\t\t// Expand function parts.\n\t\tif (mode == 'fn')\n\t\t{\n\t\t\tvar args = [];\n\n\t\t\targs.push(Template.expand(parts[0], data, 'text', 'base-string'));\n\n\t\t\tif ('_'+args[0] in Template.functions)\n\t\t\t\targs[0] = '_'+args[0];\n\n\t\t\tif (!(args[0] in Template.functions))\n\t\t\t{\n\t\t\t\tif (Template.strict == true)\n\t\t\t\t\tthrow new Error ('Expression function `'+args[0]+'` not found.');\n\n\t\t\t\treturn `(Unknown: ${args[0]})`;\n\t\t\t}\n\n\t\t\tif (args[0][0] == '_')\n\t\t\t\treturn Template.functions[args[0]] (parts, data);\n\n\t\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\t\targs.push(Template.expand(parts[i], data, 'arg', 'base-string'));\n\n\t\t\ts.push(Template.functions[args[0]] (args, parts, data));\n\t\t}\n\n\t\t// Template mode.\n\t\tif (mode == 'template')\n\t\t{\n\t\t\tif (parts.length == 1)\n\t\t\t{\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'string')\n\t\t\t\t\treturn parts[0][0].data;\n\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'identifier')\n\t\t\t\t{\n\t\t\t\t\tlet name = parts[0][0].data;\n\n\t\t\t\t\tif (name in Template.functions || '_'+name in Template.functions)\n\t\t\t\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t\t\t}\n\t\n\t\t\t\treturn Template.expand(parts[0], data, ret, 'var');\n\t\t\t}\n\n\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t}\n\n\t\t// Expand parts.\n\t\tif (mode == 'base-string')\n\t\t{\n\t\t\tlet index = -1;\n\n\t\t\tfor (let i of parts)\n\t\t\t{\n\t\t\t\tlet tmp = null;\n\t\t\t\tindex++;\n\n\t\t\t\tswitch (i.type)\n\t\t\t\t{\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'template');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'string': case 'identifier':\n\t\t\t\t\t\ttmp = i.data;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'base-string');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (ret == 'void')\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (ret == 'last' && index != parts.length-1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\ts.push(tmp);\n\t\t\t}\n\t\t}\n\n\t\t// Return types for direct objects.\n\t\tif (ret == 'obj') return s;\n\n\t\tif (ret == 'last')\n\t\t{\n\t\t\tif (typeOf(s) == 'Rose\\\\Arry')\n\t\t\t\ts = s[0];\n\n\t\t\treturn s;\n\t\t}\n\n\t\t// When the output is not really needed.\n\t\tif (ret == 'void') return null;\n\n\t\t// Return as argument ('object' if only one, or string if more than one), that is, the first item in the result.\n\t\tif (ret == 'arg')\n\t\t{\n\t\t\tif (Rinn.typeOf(s) == 'array')\n\t\t\t{\n\t\t\t\tif (s.length != 1)\n\t\t\t\t\treturn s.join('');\n\n\t\t\t\treturn s[0];\n\t\t\t}\n\n\t\t\treturn s;\n\t\t}\n\n\t\tif (ret == 'text' && Rinn.typeOf(s) == 'array')\n\t\t{\n\t\t\tlet f = (e => e != null && typeof(e) == 'object' ? ('map' in e ? e.map(f).join('') : ('join' in e ? e.join('') : e.toString())) : e);\n\t\t\ts = s.map(f).join('');\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tParses the given template and returns a function that when called with an object will expand the template.\n\t**\n\t**\t>> object compile (string template);\n\t*/\n\tcompile: function (template)\n\t{\n\t\ttemplate = Template.parse(template);\n\n\t\treturn function (data=null, mode='text') {\n\t\t\treturn Template.expand(template, data ? data : { }, mode);\n\t\t};\n\t},\n\n\t/**\n\t**\tParses and expands the given template immediately.\n\t**\n\t**\t>> object eval (string template, object data, string mode='text');\n\t*/\n\teval: function (template, data=null, mode='text')\n\t{\n\t\ttemplate = Template.parse(template);\n\t\treturn Template.expand(template, data ? data : { }, mode);\n\t},\n\n\t/**\n\t**\tExpands the template as 'arg' and returns the result.\n\t**\n\t**\t>> object value (string parts, object data);\n\t*/\n\tvalue: function (parts, data=null)\n\t{\n\t\treturn Rinn.typeOf(parts) != 'array' ? parts : Template.expand(parts, data ? data : { }, 'arg');\n\t},\n\n\t/**\n\t**\tRegisters an expression function.\n\t**\n\t**\t>> object register (string name, function fn);\n\t*/\n\tregister: function (name, fn)\n\t{\n\t\tTemplate.functions[name] = fn;\n\t},\n\n\t/**\n\t**\tCalls an expression function.\n\t**\n\t**\t>> object call (string name, object args, object data);\n\t*/\n\t'call': function (name, args, data=null)\n\t{\n\t\tif (name in Template.functions)\n\t\t\treturn Template.functions[name] (args, null, data);\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tReturns a map given a 'parts' array having values of the form \"name: value\" or \":name value\".\n\t**\n\t**\t>> Map getNamedValues (array parts, object data, int i=1, bool expanded=true);\n\t*/\n\tgetNamedValues: function (parts, data, i=1, expanded=true)\n\t{\n\t\tlet s = { };\n\t\tlet mode = 0;\n\t\n\t\tfor (; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet key = Template.expand(parts[i], data, 'arg');\n\n\t\t\tif (!mode) {\n\t\t\t\tif (key.startsWith(':')) mode = 1; else mode = key.endsWith(':') ? 2 : 3;\n\t\t\t}\n\n\t\t\tif (mode == 1)\n\t\t\t\tkey = key.substr(1);\n\t\t\telse if (mode == 2)\n\t\t\t\tkey = key.substr(0, key.length-1);\n\n\t\t\tif (expanded)\n\t\t\t\ts[key] = Template.expand(parts[i+1], data, 'arg');\n\t\t\telse\n\t\t\t\ts[key] = parts[i+1];\n\t\t}\n\n\t\treturn s;\n\t}\n};\n\n\n/**\n**\tTemplate functions, functions that are used to format data. Each function takes three parameters (args, parts and data). By default the function arguments\n**\tare expanded and passed via 'args' for convenience, however if the function name starts with '_' the 'args' parameter will be skipped and only (parts, data)\n**\twill be available, each 'part' must be expanded manually by calling Template.expand.\n*/\n\nTemplate.functions =\n{\n\t/**\n\t**\tExpression functions.\n\t*/\n\t'global': function(args) { return globalThis; },\n\t'null': function(args) { return null; },\n\t'true': function(args) { return true; },\n\t'false': function(args) { return false; },\n\n\t'len': function(args) { return args[1].toString().length; },\n\t'int': function(args) { return ~~args[1]; },\n\t'str': function(args) { return args[1].toString(); },\n\t'float': function(args) { return parseFloat(args[1]); },\n\t'chr': function(args) { return String.fromCharCode(args[1]); },\n\t'ord': function(args) { return args[1].toString().charCodeAt(0); },\n\n\t'not': function(args) { return !args[1]; },\n\t'neg': function(args) { return -args[1]; },\n\t'abs': function(args) { return Math.abs(args[1]); },\n\n\t'and': function(args) { for (let i = 1; i < args.length; i++) if (!args[i]) return false; return true; },\n\t'or': function(args) { for (let i = 1; i < args.length; i++) if (~~args[i]) return true; return false; },\n\n\t'eq': function(args) { return args[1] == args[2]; },\n\t'ne': function(args) { return args[1] != args[2]; },\n\t'lt': function(args) { return args[1] < args[2]; },\n\t'le': function(args) { return args[1] <= args[2]; },\n\t'gt': function(args) { return args[1] > args[2]; },\n\t'ge': function(args) { return args[1] >= args[2]; },\n\t'isnotnull': function(args) { return !!args[1]; },\n\t'isnull': function(args) { return !args[1]; },\n\t'iszero': function(args) { return parseInt(args[1]) == 0; },\n\n\t'eq?': function(args) { return args[1] == args[2]; },\n\t'ne?': function(args) { return args[1] != args[2]; },\n\t'lt?': function(args) { return args[1] < args[2]; },\n\t'le?': function(args) { return args[1] <= args[2]; },\n\t'gt?': function(args) { return args[1] > args[2]; },\n\t'ge?': function(args) { return args[1] >= args[2]; },\n\t'notnull?': function(args) { return !!args[1]; },\n\t'null?': function(args) { return !args[1]; },\n\t'zero?': function(args) { return parseInt(args[1]) == 0; },\n\n\t'typeof': function(args) { return Rinn.typeOf(args[1]); },\n\n\t'*': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'/': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'+': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'-': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'mul': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'div': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'sum': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'sub': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'mod': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x %= args[i]; return x; },\n\t'pow': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x = Math.pow(x, args[i]); return x; },\n\n\t/**\n\t**\tReturns the JSON representation of the expression.\n\t**\n\t**\tdump <expr>\n\t*/\n\t'dump': function (args)\n\t{\n\t\treturn JSON.stringify(args[1]);\n\t},\n\n\t/**\n\t**\tSets one or more variables in the data context.\n\t**\n\t**\tset <var-name> <expr> [<var-name> <expr>]*\n\t*/\n\t'_set': function (parts, data)\n\t{\n\t\tfor (let i = 1; i+1 < parts.length; i += 2)\n\t\t{\n\t\t\tlet value = Template.value(parts[i+1], data);\n\n\t\t\tif (parts[i].length > 1)\n\t\t\t{\n\t\t\t\tlet ref = Template.expand(parts[i], data, 'varref');\n\t\t\t\tif (ref != null) ref[0][ref[1]] = value;\n\t\t\t}\n\t\t\telse\n\t\t\t\tdata[Template.value(parts[i], data)] = value;\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tRemoves one or more variables from the data context.\n\t**\n\t**\tunset <var-name> [<var-name>]*\n\t*/\n\t'_unset': function (parts, data)\n\t{\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t{\n\t\t\tif (parts[i].length > 1)\n\t\t\t{\n\t\t\t\tlet ref = Template.expand(parts[i], data, 'varref');\n\t\t\t\tif (ref != null) delete ref[0][ref[1]];\n\t\t\t}\n\t\t\telse\n\t\t\t\tdelete data[Template.value(parts[i], data)];\n\t\t}\n\n\t\treturn null;\n\t},\n\n\n\t/**\n\t**\tReturns the expression without white-space on the left or right. The expression can be a string or an array.\n\t**\n\t**\ttrim <expr>\n\t*/\n\t'trim': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.trim()) : args[1].trim()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in uppercase. The expression can be a string or an array.\n\t**\n\t**\tupper <expr>\n\t*/\n\t'upper': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toUpperCase()) : args[1].toUpperCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in lower. The expression can be a string or an array.\n\t**\n\t**\tlower <expr>\n\t*/\n\t'lower': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toLowerCase()) : args[1].toLowerCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns a sub-string of the given string.\n\t**\n\t**\tsubstr <start> <count> <string>\n\t**\tsubstr <start> <string>\n\t*/\n\t'substr': function (args)\n\t{\n\t\tlet s = args[args.length-1].toString();\n\n\t\tlet start = 0;\n\t\tlet count = null;\n\n\t\tif (args.length == 4)\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = ~~(args[2]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = null;\n\t\t}\n\n\t\tif (start < 0) start += s.length;\n\t\tif (count < 0) count += s.length;\n\n\t\tif (count === null)\n\t\t\tcount = s.length - start;\n\n\t\treturn s.substr(start, count);\n\t},\n\n\t/**\n\t**\tReplaces a matching string with the given replacement string in a given text.\n\t**\n\t**\treplace <search> <replacement> <text>\n\t*/\n\t'replace': function (args)\n\t{\n\t\treturn args[3].split(args[1]).join(args[2]);\n\t},\n\n\t/**\n\t**\tConverts all new-line chars in the expression to <br/>, the expression can be a string or an array.\n\t**\n\t**\tnl2br <expr>\n\t*/\n\t'nl2br': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.replace(/\\n/g, \"<br/>\")) : args[1].replace(/\\n/g, \"<br/>\")) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', the expression can be a string or an array.\n\t**\n\t**\t% <tag-name> <expr>\n\t*/\n\t'%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet s = '';\n\n\t\tfor (let i = 0; i < args.length; i++)\n\t\t{\n\t\t\tif (Rinn.typeOf(args[i]) == 'array')\n\t\t\t{\n\t\t\t\ts += `<${name}>`;\n\t\t\t\t\n\t\t\t\tfor (let j = 0; j < args[i].length; j++)\n\t\t\t\t\ts += args[i][j];\n\n\t\t\t\ts += `</${name}>`;\n\t\t\t}\n\t\t\telse\n\t\t\t\ts += `<${name}>${args[i]}</${name}>`;\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', attributes are supported.\n\t**\n\t**\t%% <tag-name> [<attr> <value>]* [<content>]\n\t*/\n\t'%%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet attr = '';\n\t\tlet text = '';\n\n\t\tfor (let i = 0; i < args.length; i += 2)\n\t\t{\n\t\t\tif (i+1 < args.length)\n\t\t\t\tattr += ` ${args[i]}=\"${args[i+1]}\"`;\n\t\t\telse\n\t\t\t\ttext = args[i];\n\t\t}\n\n\t\treturn text ? `<${name}${attr}>${text}</${name}>` : `<${name}${attr}/>`;\n\t},\n\n\t/**\n\t**\tJoins the given array expression into a string. The provided string-expr will be used as separator.\n\t**\n\t**\tjoin <string-expr> <array-expr>\n\t*/\n\t'join': function (args)\n\t{\n\t\tif (args[2] && Rinn.typeOf(args[2]) == 'array')\n\t\t\treturn args[2].join(args[1]);\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tSplits the given expression by the specified string. Returns an array.\n\t**\n\t**\tsplit <string-expr> <expr>\n\t*/\n\t'split': function (args)\n\t{\n\t\tif (args[2] && typeof(args[2]) == \"string\")\n\t\t\treturn args[2].split(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the keys of the given object-expr.\n\t**\n\t**\tkeys <object-expr>\n\t*/\n\t'keys': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.keys(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the values of the given object-expr.\n\t**\n\t**\tvalues <object-expr>\n\t*/\n\t'values': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.values(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tConstructs a string obtained by concatenating the expanded template for each of the items in the list-expr, the mandatory varname\n\t**\tparameter (namely 'i') indicates the name of the variable that will contain the data of each item as the list-expr is\n\t**\ttraversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote the index/key and numeric index\n\t**\tof the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\teach <varname> <list-expr> <template>\n\t*/\n\t'_each': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet s = '';\n\t\tlet j = 0;\n\n\t\tif (!list) return s;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\ts += Template.expand(parts[3], data, 'text');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tExpands the given template for each of the items in the list-expr, the mandatory varname parameter (namely 'i') indicates the name of the variable\n\t**\tthat will contain the data of each item as the list-expr is traversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote\n\t**\tthe index/key and numeric index of the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\tDoes not produce any output (returns null).\n\t**\n\t**\tforeach <varname> <list-expr> <template>\n\t*/\n\t'_foreach': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet j = 0;\n\n\t\tif (!list) return null;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tTemplate.expand(parts[3], data, 'text');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tReturns the valueA if the expression is true otherwise valueB, this is a short version of the 'if' function with the\n\t**\tdifference that the result is 'obj' instead of text.\n\t**\n\t**\t? <expr> <valueA> [<valueB>]\n\t*/\n\t'_?': function (parts, data)\n\t{\n\t\tif (Template.expand(parts[1], data, 'arg'))\n\t\t\treturn Template.expand(parts[2], data, 'arg');\n\n\t\tif (parts.length > 3)\n\t\t\treturn Template.expand(parts[3], data, 'arg');\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tReturns the valueA if it is not null (or empty or zero), otherwise returns valueB.\n\t**\n\t**\t?? <valueA> <valueB>\n\t*/\n\t'_??': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\t\tif (value) return value;\n\t\n\t\treturn Template.expand(parts[2], data, 'arg');\n\t},\n\n\t/**\n\t**\tReturns the value if the expression is true, supports 'elif' and 'else' as well. The result of this function is always text.\n\t**\n\t**\tif <expr> <value> [elif <expr> <value>] [else <value>]\n\t*/\n\t'_if': function (parts, data)\n\t{\n\t\tfor (let i = 0; i < parts.length; i += 3)\n\t\t{\n\t\t\tif (Template.expand(parts[i], data, 'arg') == 'else')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\n\t\t\tif (Template.expand(parts[i+1], data, 'arg'))\n\t\t\t\treturn Template.expand(parts[i+2], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tLoads the expression value and attempts to match one case.\n\t**\n\t**\tswitch <expr> <case1> <value1> ... <caseN> <valueN> default <defvalue> \n\t*/\n\t'_switch': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\n\t\tfor (let i = 2; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet case_value = Template.expand(parts[i], data, 'arg');\n\t\t\tif (case_value == value || case_value == 'default')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tExits the current inner most loop.\n\t**\n\t**\tbreak\n\t*/\n\t'_break': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_BREAK');\n\t},\n\n\t/**\n\t**\tSkips execution and continues the next cycle of the current inner most loop.\n\t**\n\t**\tcontinue\n\t*/\n\t'_continue': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_CONTINUE');\n\t},\n\n\t/**\n\t**\tConstructs an array with the results of repeating the specified template for a number of times.\n\t**\n\t**\trepeat <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_repeat': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`repeat`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0, to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tlet value = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\t\tlet arr = [];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\t\n\t\t\tfor (let i = from; ; i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn arr;\n\t},\n\n\t/**\n\t**\tRepeats the specified template for a number of times.\n\t**\n\t**\tfor <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_for': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`for`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0; to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tvalue = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\t\n\t\t\tfor (let i = from; ; i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tRepeats the specified template infinitely until a \"break\" is found.\n\t**\n\t**\tloop <template>\n\t*/\n\t'_loop': function (parts, data)\n\t{\n\t\tif (parts.length < 2)\n\t\t\treturn '(`loop`: Wrong number of parameters)';\n\n\t\tlet tpl = parts[1];\n\n\t\twhile (true)\n\t\t{\n\t\t\ttry {\n\t\t\t\tTemplate.value(tpl, data);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tlet name = e.message;\n\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tWrites the specified arguments to the console.\n\t**\n\t**\techo <expr> [<expr>...]\n\t*/\n\t'_echo': function (parts, data)\n\t{\n\t\tlet s = '';\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts += Template.expand(parts[i], data, 'arg');\n\n\t\tconsole.log(s);\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tConstructs a list from the given arguments and returns it.\n\t**\n\t**\t# <expr> [<expr>...]\n\t*/\n\t'_#': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(Template.expand(parts[i], data, 'arg'));\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded list from the given arguments and returns it.\n\t**\n\t**\t## <expr> [<expr>...]\n\t*/\n\t'_##': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(parts[i]);\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs an associative array (dictionary) and returns it.\n\t**\n\t**\t& <name>: <expr> [<name>: <expr>...]\n\t**\t& :<name> <expr> [:<name> <expr>...]\n\t*/\n\t'_&': function (parts, data)\n\t{\n\t\treturn Template.getNamedValues (parts, data, 1, true);\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded associative array (dictionary) and returns it.\n\t**\n\t**\t&& <name>: <expr> [<name>: <expr>...]\n\t**\t&& :<name> <expr> [:<name> <expr>...]\n\t*/\n\t'_&&': function (parts, data)\n\t{\n\t\treturn Template.getNamedValues (parts, data, 1, false);\n\t},\n\n\t/**\n\t**\tReturns true if the specified map contains all the specified keys. If it fails the global variable `err` will contain an error message.\n\t**\n\t**\tcontains <expr> <name> [<name>...]\n\t*/\n\t'contains': function (args, parts, data)\n\t{\n\t\tlet value = args[1];\n\n\t\tif (typeof(value) != 'object')\n\t\t{\n\t\t\tdata.err = 'Argument is not a Map';\n\t\t\treturn false;\n\t\t}\n\n\t\tlet s = '';\n\n\t\tfor (let i = 2; i < args.length; i++)\n\t\t{\n\t\t\tif (!(args[i] in value))\n\t\t\t\ts += ', '+args[i];\n\t\t}\n\n\t\tif (s != '')\n\t\t{\n\t\t\tdata.err = s.substr(1);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tReturns true if the specified map has the specified key. Returns boolean.\n\t**\n\t**\thas <name> <expr>\n\t*/\n\t'has': function (args, parts, data)\n\t{\n\t\tlet value = args[2];\n\n\t\tif (Rinn.typeOf(value) != 'object')\n\t\t\treturn false;\n\n\t\treturn args[1] in value;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the transformed values of the array/map (evaluating the template). And just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tmap <varname> <list-expr> <template>\n\t*/\n\t'_map': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rinn.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (arrayMode)\n\t\t\t\toutput.push(Template.expand(parts[3], data, 'arg'));\n\t\t\telse\n\t\t\t\toutput[i] = Template.expand(parts[3], data, 'arg');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the elements where the template evaluates to non-zero. Just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tfilter <varname> <list-expr> <template>\n\t*/\n\t'_filter': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rinn.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (~~Template.expand(parts[3], data, 'arg'))\n\t\t\t{\n\t\t\t\tif (arrayMode)\n\t\t\t\t\toutput.push(list[i]);\n\t\t\t\telse\n\t\t\t\t\toutput[i] = list[i];\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tExpands the specified template string with the given data. The sym_open and sym_close will be '{' and '}' respectively.\n\t**\tIf no data is provided, current data parameter will be used.\n\t**\n\t**\texpand <template> <data>\n\t*/\n\t'expand': function (args, parts, data)\n\t{\n\t\treturn Template.expand (Template.parseTemplate (args[1], '{', '}'), args.length == 3 ? args[2] : data);\n\t},\n\n\t/**\n\t**\tCalls a function described by the given parameter.\n\t**\n\t**\tcall <function> <args...>\n\t*/\n\t'_call': function (parts, data)\n\t{\n\t\tlet ref = Template.expand(parts[1], data, 'varref');\n\n\t\tif (!ref || typeof(ref[0][ref[1]]) != 'function')\n\t\t\tthrow new Error ('Expression is not a function: ' + Template.expand(parts[1], data, 'obj').map(i => i == null ? '.' : i).join(''));\n\n\t\tlet args = [];\n\n\t\tfor (let i = 2; i < parts.length; i++)\n\t\t\targs.push(Template.value(parts[i], data));\n\n\t\treturn ref[0][ref[1]] (...args);\n\t},\n};\n\nexport default Template;\n"],"names":["$1V76q","parcelRequire","$f765ede7a2bbed38$export$2e2bcd8739ae039","_getref","value","obj","substr","get","eval","type","model","ctval","name","parseInt","isNaN","Error","parseFloat","toString","default","typeOf","mclass","this","ensure","cls","ensureTypeOf","arrayof","i","length","arraynull","remove","splice","arraycompliant","isCompliant","required","minlen","maxlen","minval","maxval","mincount","maxcount","pattern","$8swMk","test","inset","RegExp","indexOf","join","upper","toUpperCase","lower","toLowerCase","$16609fbd7d1b65ca$var$Rinn","$16609fbd7d1b65ca$export$2e2bcd8739ae039","invokeLater","fn","setTimeout","wait","millis","Promise","resolve","reject","o","Array","isArrayOrObject","clone","elem","push","merge","output","objs","arr","j","i1","field","override","partialCompare","full","partial","arrayFind","getObject","isInstanceOf","_class","container","forceArray","$628a5d5bf09c0499$export$2e2bcd8739ae039","email","url","urlNoProt","uname","text","utext","$948f072c447a9569$var$Class","_super","prototype","className","__ctor","__dtor","__proto__","hasOwnProperty","instanceOf","object","_initSuperRefs","constructor","_newSuper","self","_prot","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","call","inherit","proto","_extend","base","protos","args","apply","$948f072c447a9569$export$2e2bcd8739ae039","extend","source","ret","list","eventName","eventArgs","cbHandler","cbContext","next","_async","listeners","namespace","handler","context","data","split","ns","k","$d7fcaaa29d0ffaa7$var$_Model","$0681abc29226a7a0$export$2e2bcd8739ae039","defaults","constraints","changedList","_silent","_level","EventDispatcher","reset","def","undefined","init","set","update","ready","nsilent","silent","_validate","nvalue","ctname","Constraints","e","message","_set","dispatchEvent","constraint","_propertyEvent","prev","direct","temp","old","level","evt","n","arguments","force","fields","has","flatten","getInt","getFloat","getBool","getReference","m","safe","rsafe","classPath","keys","ct","validate","observe","property","addEventListener","unobserve","removeEventListener","watch","unwatch","serialize","$leTsS","$d7fcaaa29d0ffaa7$export$2e2bcd8739ae039","$7a8546796ed70f75$export$2e2bcd8739ae039","itemt","contents","itemId","nextId","Model","_eventGroup","Date","now","_bind","iid","item","_onItemEvent","_unbind","prepareEvent","id","from","enqueue","resume","clear","setData","getData","getAt","index","removeAt","setAt","updateAt","position","pop","unshift","shift","find","retObject","unflatten","tmp","$b774d0942594d100$var$Schema","Type","precision","_precision","Math","pow","compact","_compact","strings","type1","itemType","v","_debug","callback","_filter","async","defvalue","properties","symbolic","classConstructor1","classConstructor","_constructor","name1","type2","conditions","val","$d46d380bfeb80f47$export$2e2bcd8739ae039","itemTypeSchema","typeSchema","$b774d0942594d100$export$2e2bcd8739ae039","Property","is","of","items","add","itemsReferenceChanged","onItemRemoved","desc","sort","a","b","inc","exc","isEmpty","relative","onBeforeItemAdded","concat","onItemAdded","addAt","$5965a8a303d1bb14$var$Template","strict","parseTemplate","template","sym_open","sym_close","is_tpl","root","nflush","flush","state","count","str","parts","mparts","nparts","emit","trim","map","i2","match","unescape","r","parse","clean","expand","mode","s","escape","quote","last","first","functions","failed","replace","f","compile","register","getNamedValues","expanded","key","startsWith","endsWith","global","globalThis","null","true","false","len","int","float","chr","String","fromCharCode","ord","charCodeAt","not","neg","abs","and","or","eq","ne","lt","le","gt","ge","isnotnull","isnull","iszero","typeof","x","mul","div","sum","sub","mod","dump","JSON","stringify","ref","_unset","start","nl2br","attr","Object","values","_each","var_name","_foreach","_if","_switch","case_value","_break","_continue","_repeat","to","step","tpl","_for","_loop","_echo","console","log","contains","err","_map","arrayMode","_call","i3","$5965a8a303d1bb14$export$2e2bcd8739ae039","$5eaf60761b941187$export$eefcfe56efaaa57d","$5eaf60761b941187$export$4c85e640eb41c31b","$5eaf60761b941187$export$d61e24a684f9e51","$7c8e31460e56f4d6$export$2e2bcd8739ae039","$5eaf60761b941187$export$ec8b666c5fe2c75a","$5eaf60761b941187$export$a1edc412be3e1841","$5eaf60761b941187$export$59eced47f477f85a","$5eaf60761b941187$export$19342e026b58ebb7","$5eaf60761b941187$export$3a9581c9ade29768","$5eaf60761b941187$export$fb8073518f34e6ec","$16da3fe9744df3bc$export$2e2bcd8739ae039","$5eaf60761b941187$export$14416b8d99d47caa","$parcel$global","rinn","Rinn","Class","Event","ModelList","Schema","Flattenable","Collection","Template"],"version":3,"file":"rinn.js.map"}