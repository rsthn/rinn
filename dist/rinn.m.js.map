{"mappings":"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","sources":["src/model-constraints.js","src/alpha.js","src/model-regex.js","src/class.js","src/event.js","src/event-dispatcher.js","src/model.js","src/model-list.js","src/schema.js","src/flattenable.js","src/collection.js","src/template.js","src/main.js"],"sourcesContent":["/*\n**\trinn/model-constraints.js\n**\n**\tCopyright (c) 2013-2022, RedStar Technologies, All rights reserved.\n**\thttps://rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nimport Rinn from './alpha.js';\nimport Regex from './model-regex.js';\n\n/**\n**\tMap of model constraint handlers. Each function should accept parameters (in order): the model object (model), the constraint value (ctval),\n**\tthe property name (name), the property value (value) and return the corrected value once verified or throw an exception if errors occur.\n*/\n\nexport default\n{\n\t/**\n\t**\tUtility function (not a handler) to get the real value given a reference string. If the value is not a string, the value itself will\n\t**\tbe returned, if it is a string starting with '#' the model property will be returned, if starts with '@' the object property will be\n\t**\treturned, otherwise the contents of the string will eval'd and returned.\n\t*/\n\t_getref: function (value, obj)\n\t{\n\t\tif (typeof(value) == \"string\")\n\t\t{\n\t\t\tif (value.substr(0, 1) == \"#\")\t\t\tvalue = obj.get(value.substr(1));\n\t\t\telse if (value.substr(0, 1) == \"@\")\t\tvalue = obj[value.substr(1)];\n\n\t\t\tif (typeof(value) == \"string\")\n\t\t\t\treturn eval(value);\n\n\t\t\treturn value;\n\t\t}\n\t\telse\n\t\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the new value is of the valid type before storing it on the property. When possible if the\n\t**\tinput is of compatible type it will be converted to the target type.\n\t*/\n\ttype: function (model, ctval, name, value)\n\t{\n\t\tswitch (ctval)\n\t\t{\n\t\t\tcase \"int\":\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"float\":\n\t\t\t\tvalue = parseFloat(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"string\":\n\t\t\t\tvalue = (value === null || value === undefined) ? \"\" : value.toString();\n\t\t\t\tbreak;\n\n\t\t\tcase \"bit\":\n\t\t\t\tif (value === true || value === false) {\n\t\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\n\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"array\":\n\t\t\t\tif (Rinn.typeOf(value) == \"array\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (value === null || value === undefined)\n\t\t\t\t{\n\t\t\t\t\tvalue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"bool\":\n\t\t\t\tif (value === \"true\" || value === true) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (value === \"false\" || value === false) {\n\t\t\t\t\tvalue = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified model type.\n\t*/\n\tmodel: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!mclass) throw new Error (ctval);\n\n\t\tif (!value)\n\t\t\treturn new mclass();\n\n\t\treturn mclass.ensure (value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified class.\n\t*/\n\tcls: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) return new mclass();\n\n\t\treturn Rinn.ensureTypeOf(mclass, value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are of the specified class. Returns error if the class does not exist\n\t**\tor if the field is not an array. Therefore a type:array constraint should be used before this one.\n\t*/\n\tarrayof: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) value = [];\n\n\t\tif (!mclass || Rinn.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t\tvalue[i] = Rinn.ensureTypeOf(mclass, value[i]);\n\t\t\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are not null. Returns error if the field is not an array, therefore a\n\t**\ttype:array constraint should be used before this one.\n\t*/\n\tarraynull: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rinn.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (ctval) return value;\n\n\t\tif (Rinn.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are all compliant. Returns error if the field is not an array, therefore\n\t**\ta type:array constraint should be used before this one.\n\t*/\n\tarraycompliant: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rinn.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (!ctval) return value;\n\n\t\tif (Rinn.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t\tcontinue;\n\n\t\t\tif (!value[i].isCompliant())\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the presense of the field.\n\t*/\n\trequired: function (model, ctval, name, value)\n\t{\n\t\tif (value === null || value === undefined)\n\t\t\tthrow new Error (ctval ? \"\" : \"null\");\n\n\t\tswitch (Rinn.typeOf(value))\n\t\t{\n\t\t\tcase \"array\":\n\t\t\t\tif (value.length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tif (value.toString().length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum length of the field.\n\t*/\n\tminlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum length of the field.\n\t*/\n\tmaxlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum value of the field.\n\t*/\n\tminval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum value of the field.\n\t*/\n\tmaxval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum number of items in the array.\n\t*/\n\tmincount: function (model, ctval, name, value)\n\t{\n\t\tif (Rinn.typeOf(value) != \"array\" || value.length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum number of items in the array.\n\t*/\n\tmaxcount: function (model, ctval, name, value)\n\t{\n\t\tif (Rinn.typeOf(value) != \"array\" || value.length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the format of the field using a regular expression. The constraint value should be the name of\n\t**\tone of the Model.Regex regular expressions.\n\t*/\n\tpattern: function (model, ctval, name, value)\n\t{\n\t\tif (!Regex[ctval].test (value.toString()))\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is inside the specified set of options. The set can be an array or a string with\n\t**\tthe options separated by vertical bar (|). The comparison is case-sensitive.\n\t*/\n\tinset: function (model, ctval, name, value)\n\t{\n\t\tif (Rinn.typeOf(ctval) != \"array\")\n\t\t{\n\t\t\tif (!new RegExp(\"^(\"+ctval.toString()+\")$\").test (value.toString()))\n\t\t\t\tthrow new Error (ctval);\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (ctval.indexOf(value.toString()) == -1)\n\t\t\tthrow new Error (ctval.join(\"|\"));\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tSets the field to upper case.\n\t*/\n\tupper: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toUpperCase() : value;\n\t},\n\n\n\t/**\n\t**\tSets the field to lower case.\n\t*/\n\tlower: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toLowerCase() : value;\n\t}\n};\n","/*\r\n**\trinn/alpha.js\r\n**\r\n**\tCopyright (c) 2013-2022, RedStar Technologies, All rights reserved.\r\n**\thttps://rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rinn = { };\r\nexport default Rinn;\r\n\r\n/*\r\n**\tInvokes the specified function 'fn' 10ms later.\r\n**\r\n**\t>> void invokeLater (function fn);\r\n*/\r\nRinn.invokeLater = function (fn)\r\n{\r\n\tif (fn) setTimeout (function() { fn(); }, 10);\r\n};\r\n\r\n\r\n/*\r\n**\tWaits for the specified amount of milliseconds. Returns a Promise.\r\n**\r\n**\t>> Promise wait (int millis);\r\n*/\r\nRinn.wait = function (millis)\r\n{\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tsetTimeout (resolve, millis);\r\n\t});\r\n};\r\n\r\n\r\n/*\r\n**\tReturns the type of an element 'o', properly detects arrays and null types. The return string is always in lowercase.\r\n**\r\n**\t>> string typeOf (any o);\r\n*/\r\nRinn.typeOf = function (o)\r\n{\r\n\tif (o instanceof Array)\r\n\t\treturn \"array\";\r\n\r\n\tif (o === null)\r\n\t\treturn \"null\";\r\n\r\n\treturn (typeof(o)).toString().toLowerCase();\r\n};\r\n\r\n\r\n/*\r\n**\tReturns boolean indicating if the type of the element is an array or an object.\r\n**\r\n**\t>> bool isArrayOrObject (any o);\r\n*/\r\nRinn.isArrayOrObject = function (o)\r\n{\r\n\tswitch (Rinn.typeOf(o))\r\n\t{\r\n\t\tcase \"array\": case \"object\":\r\n\t\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/*\r\n**\tCreates a clone (deep copy) of the specified element. The element can be an array, an object or a primitive type.\r\n**\r\n**\t>> T clone (T elem);\r\n*/\r\nRinn.clone = function (elem)\r\n{\r\n\tlet o = Rinn.typeOf(elem);\r\n\r\n\tif (o === 'array')\r\n\t{\r\n\t\to = [ ];\r\n\r\n\t\tfor (let i = 0; i < elem.length; i++)\r\n\t\t\to.push (Rinn.clone(elem[i]));\r\n\t}\r\n\telse if (o === 'object')\r\n\t{\r\n\t\tif (('clone' in elem) && typeof(elem.clone) === 'function')\r\n\t\t\treturn elem.clone();\r\n\r\n\t\to = { };\r\n\r\n\t\tfor (let i in elem)\r\n\t\t\to[i] = Rinn.clone(elem[i]);\r\n\t}\r\n\telse\r\n\t{\r\n\t\to = elem;\r\n\t}\r\n\r\n\treturn o;\r\n};\r\n\r\n\r\n/*\r\n**\tMerges all given elements into the first one, object fields are cloned.\r\n**\r\n**\t>> T merge (T... elems)\r\n*/\r\nRinn.merge = function (output, ...objs)\r\n{\r\n\tif (Rinn.typeOf(output) == \"array\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet arr = objs[i];\r\n\r\n\t\t\tif (Rinn.typeOf(arr) != \"array\")\r\n\t\t\t{\r\n\t\t\t\toutput.push(arr);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor (let j = 0; j < arr.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\toutput.push(Rinn.clone(arr[j]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (Rinn.typeOf(output) == \"object\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet obj = objs[i];\r\n\t\t\tif (Rinn.typeOf(obj) != \"object\") continue;\r\n\r\n\t\t\tfor (let field in obj)\r\n\t\t\t{\r\n\t\t\t\tif (Rinn.isArrayOrObject(obj[field]))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (field in output)\r\n\t\t\t\t\t\tRinn.merge(output[field], obj[field]);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\toutput[field] = Rinn.clone(obj[field]);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\toutput[field] = obj[field];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/*\r\n**\tAssigns all fields from the specified objects into the first one.\r\n**\r\n**\t>> object override (object output, object... objs)\r\n*/\r\nRinn.override = function (output, ...objs)\r\n{\r\n\tfor (let i = 0; i < objs.length; i++)\r\n\t{\r\n\t\tfor (let j in objs[i])\r\n\t\t{\r\n\t\t\toutput[j] = objs[i][j];\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/*\r\n**\tCompares two objects and returns `true` if all properties in \"partial\" find a match in \"full\".\r\n*/\r\nRinn.partialCompare = function (full, partial)\r\n{\r\n\tif (full == null || partial == null) return false;\r\n\r\n\tif (full === partial)\r\n\t\treturn true;\r\n\r\n\tfor (var i in partial)\r\n\t{\r\n\t\tif (full[i] != partial[i])\r\n\t\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/*\r\n**\tPerforms a partial search for an object (o) in the specified array and returns its index or `false` if the\r\n**\tobject was not found. When `getObject` is set to `true` the object will be returned instead of an index, or\r\n**\t`null` if not found.\r\n*/\r\nRinn.arrayFind = function (arr, o, getObject)\r\n{\r\n\tfor (var i = 0; arr && i < arr.length; i++)\r\n\t{\r\n\t\tif (this.partialCompare (arr[i], o))\r\n\t\t\treturn getObject ? arr[i] : i;\r\n\t}\r\n\r\n\treturn getObject ? null : false;\r\n};\r\n\r\n\r\n/*\r\n**\tVerifies if the specified object is of class `m`, returns boolean.\r\n**\r\n**\t>> bool isTypeOf (object obj, class _class);\r\n*/\r\nRinn.isInstanceOf = function (obj, _class)\r\n{\r\n\tif (!obj || !_class || typeof(obj) !== 'object')\r\n\t\treturn false;\r\n\r\n\tif (obj instanceof _class)\r\n\t\treturn true;\r\n\r\n\tif ('isInstanceOf' in obj)\r\n\t\treturn obj.isInstanceOf(_class);\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/*\r\n**\tTraverses the given object attempting to find the index/key that does an identical match with the specified value,\r\n**\tif not found returns -1, otherwise the index/key where the value was found.\r\n**\r\n**\t>> int indexOf (array container, T value)\r\n**\t>> string indexOf (object container, T value)\r\n*/\r\nRinn.indexOf = function (container, value, forceArray=false)\r\n{\r\n\tif (forceArray)\r\n\t{\r\n\t\tfor (let i = 0; i < container.length; i++)\r\n\t\t{\r\n\t\t\tif (container[i] === value)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tfor (let i in container)\r\n\t{\r\n\t\tif (container[i] === value)\r\n\t\t\treturn i;\r\n\t}\r\n\r\n\treturn -1;\r\n};\r\n\r\n\r\n/*\r\n**\tEscapes a string using HTML entities.\r\n**\r\n**\t>> string escape (string str);\r\n*/\r\nRinn.escape = function (str)\r\n{\r\n\treturn (str+\"\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n};\r\n\r\n\r\n/*\r\n**\tVerifies if the specified object is of class `m`, if not it will create a new instance of `m` passing `o` as parameter.\r\n**\r\n**\t>> object ensureTypeOf (class m, object o);\r\n*/\r\nRinn.ensureTypeOf = function (m, o)\r\n{\r\n\tif (!o || !m || o instanceof m)\r\n\t\treturn o;\r\n\r\n\tif (o.isInstanceOf && m.prototype.className)\r\n\t{\r\n\t\tif (o.isInstanceOf (m.prototype.className))\r\n\t\t\treturn o;\r\n\t}\r\n\r\n\treturn new m (o);\r\n};\r\n\r\n\r\n/*\r\n**\tSerializes an object and returns its JSON string representation.\r\n**\r\n**\t>> string serialize (object o);\r\n*/\r\nRinn.serialize = function (o)\r\n{\r\n\treturn JSON.stringify(o);\r\n};\r\n\r\n\r\n/*\r\n**\tDeserializes a string in JSON format and returns the result.\r\n**\r\n**\t>> any deserialize (string s);\r\n*/\r\nRinn.deserialize = function (s)\r\n{\r\n\treturn JSON.parse(s);\r\n};\r\n\r\n\r\n/*\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/\r\nRinn.hookAppend = function (object, functionName, newFunction, conditional=true)\r\n{\r\n\tconst oldFunction = object[functionName];\r\n\r\n\tif (conditional)\r\n\t{\r\n\t\tobject[functionName] = function (...args) {\r\n\t\t\tif (oldFunction.apply (this, args) !== false)\r\n\t\t\t\treturn newFunction.apply (this, args);\r\n\t\t};\r\n\t}\r\n\telse\r\n\t{\r\n\t\tobject[functionName] = function (...args) {\r\n\t\t\toldFunction.apply (this, args);\r\n\t\t\treturn newFunction.apply (this, args);\r\n\t\t};\r\n\t}\r\n\r\n\treturn { \r\n\t\tunhook: function() {\r\n\t\t\tobject[functionName] = oldFunction;\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n/*\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/\r\nRinn.hookPrepend = function (object, functionName, newFunction, conditional=true)\r\n{\r\n\tconst oldFunction = object[functionName];\r\n\r\n\tif (conditional)\r\n\t{\r\n\t\tobject[functionName] = function (...args) {\r\n\t\t\tif (newFunction.apply (this, args) !== false)\r\n\t\t\t\treturn oldFunction.apply (this, args);\r\n\t\t};\r\n\t}\r\n\telse\r\n\t{\r\n\t\tobject[functionName] = function (...args) {\r\n\t\t\tnewFunction.apply (this, args);\r\n\t\t\treturn oldFunction.apply (this, args);\r\n\t\t};\r\n\t}\r\n\r\n\treturn { \r\n\t\tunhook: function() {\r\n\t\t\tobject[functionName] = oldFunction;\r\n\t\t}\r\n\t};\r\n};\r\n","/*\n**\trinn/model-regex.js\n**\n**\tCopyright (c) 2013-2022, RedStar Technologies, All rights reserved.\n**\thttps://rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n**\tCommon regular expressions for pattern validation.\n*/\n\nexport default\n{\n\temail: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)+$/i,\n\turl: /^[\\w-]+:\\/\\/[\\w-]+(\\.\\w+)+.*$/,\n\turlNoProt: /^[\\w-]+(\\.\\w+)+.*$/,\n\tname: /^[-A-Za-z0-9_.]+$/,\n\tuname: /^['\\pL\\pN ]+$/,\n\ttext: /^[^&<>{}]*$/,\n\tutext: /^([\\r\\n\\pL\\pN\\pS &!@#$%*\\[\\]()_+=;',.\\/?:\"~-]+)$/\n};\n","/*\r\n**\trinn/class.js\r\n**\r\n**\tCopyright (c) 2013-2022, RedStar Technologies, All rights reserved.\r\n**\thttps://rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nimport Rinn from './alpha.js';\r\n\r\n/**\r\n * \tBase class used to create other classes with complex prototype based multiple inheritance while at the\r\n * \tsame time avoiding the prototype chain for faster access. Supports calling parent class methods.\r\n */\r\n\r\n//!class Class\r\nconst Class = function ()\r\n{\r\n};\r\n\r\n/**\r\n * \tReference to the class itself.\r\n */\r\nClass._class = Class;\r\n\r\n/**\r\n * \tContains the methods of each of the super classes.\r\n */\r\nClass._super = { };\r\n\r\n/**\r\n * \tName of the class, if none specified the class will be considered \"final\" and will not be inheritable.\r\n * \t@public @type {string}\r\n * \t!string className;\r\n */\r\nClass.prototype.className = 'Class';\r\n\r\n/**\r\n * \tClass constructor, should initialize the instance. Invoked when the `new` keyword is used with the class.\r\n * \t!__ctor() : Class;\r\n */\r\nClass.prototype.__ctor = function ()\r\n{\r\n};\r\n\r\n/**\r\n * \tClass destructor, should clear the instance and release any used resources, invoked when the global `dispose` function\r\n * \tis called with an instance as parameter.\r\n * \t!__dtor() : void;\r\n */\r\nClass.prototype.__dtor = function ()\r\n{\r\n};\r\n\r\n/**\r\n * \tReturns true if the object is an instance of the specified class, the parameter can be a class name (string), a constructor (function) or\r\n * \ta class instance (object), in any cases the appropriate checks will be done.\r\n *\r\n * \t@param {string|function|object} className\r\n * \t@returns {boolean}\r\n *\r\n * \t!isInstanceOf (className: string|function|object) : boolean;\r\n */\r\nClass.prototype.isInstanceOf = function (className)\r\n{\r\n\tif (className === null)\r\n\t\treturn false;\r\n\r\n\tif (typeof(className) === 'function')\r\n\t{\r\n\t\tclassName = className.prototype.className;\r\n\t}\r\n\telse if (typeof(className) !== 'string')\r\n\t{\r\n\t\tclassName = className.__proto__.className;\r\n\t}\r\n\r\n\treturn this.className === className ? true : this._super.hasOwnProperty(className);\r\n};\r\n\r\n/**\r\n * \tReturns true if the given object is an instance of the specified class, the parameter can be a class name (string), a constructor (function)\r\n * \tor a class instance (object), in any cases the appropriate checks will be done.\r\n *\r\n * \t@param {Object} object\r\n * \t@param {string|function|object} className\r\n *\r\n *\t!instanceOf (object: object, className: string|function|object) : boolean;\r\n */\r\nClass.instanceOf = function (object, className)\r\n{\r\n\tif (object === null || className === null)\r\n\t\treturn false;\r\n\r\n\treturn object.isInstanceOf(className);\r\n};\r\n\r\n/**\r\n * \tInternal method to ensure the _super field of an instance has all functions properly bound to the instance.\r\n */\r\nClass.prototype._initSuperRefs = function ()\r\n{\r\n\tlet _super = this.constructor._super;\r\n\tlet _newSuper = { };\r\n\r\n\tconst self = this;\r\n\r\n\tfor (let i in _super)\r\n\t{\r\n\t\tlet o = { };\r\n\r\n\t\tlet _prot = _super[i].prototype;\r\n\t\tfor (let j in _prot)\r\n\t\t{\r\n\t\t\tif (Rinn.typeOf(_prot[j]) !== 'function')\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\to[j] = (function(fn)\r\n\t\t\t{\r\n\t\t\t\treturn function (a00, a01, a02, a03, a04, a05, a06, a07, a08, a09, a0A) {\r\n\t\t\t\t\treturn fn.call(self, a00, a01, a02, a03, a04, a05, a06, a07, a08, a09, a0A);\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t(_prot[j]);\r\n\t\t}\r\n\r\n\t\t_newSuper[i] = o;\r\n\t}\r\n\r\n\tthis._super = _newSuper;\r\n};\r\n\r\n\r\n/*\r\n**\tExtends the class with the specified prototype. The prototype can be a function (class constructor) or an object. Note that the\r\n**\tclass will be modified (and returned) instead of creating a new class. Must be called at the class-level (**not** instance level).\r\n**\tWhen a class is provided all fields starting with uppercase at the class-level will not be inherited, this is used to create constants\r\n**\ton classes without having them to be copied to derived classes.\r\n**\r\n**\t>> class inherit (constructor classConstructor);\r\n**\t>> class inherit (object obj);\r\n*/\r\nClass.inherit = function (proto)\r\n{\r\n\tlet self = this._class;\r\n\r\n\tlet _super = self._super;\r\n\tlet _class = self._class;\r\n\r\n\tif (Rinn.typeOf(proto) === 'function')\r\n\t{\r\n\t\t// Move constants (uppercased properties) to the class-level instead of prototype-level.\r\n\t\tfor (let i in proto._class)\r\n\t\t\tif (!/^[A-Z]/.test(i)) self[i] = proto._class[i];\r\n\r\n\t\t// Combine methods and properties.\r\n\t\tRinn.override (self.prototype, proto._class.prototype);\r\n\r\n\t\t// Combine super references.\r\n\t\tRinn.override (_super, proto._class._super);\r\n\r\n\t\t// Add new super reference if className specified in inherited prototypes.\r\n\t\tif (proto._class.prototype.className)\r\n\t\t\t_super[proto._class.prototype.className] = proto._class;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tRinn.override (self.prototype, proto);\r\n\t}\r\n\r\n\tself._super = _super;\r\n\tself._class = _class;\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\n/*\r\n**\tInternal method used to extend a class with one or more prototypes.\r\n**\r\n**\t>> class _extend (object base, object[] protos);\r\n*/\r\nClass.prototype._extend = function (base, protos)\r\n{\r\n\tif (protos.length === 0)\r\n\t\treturn base;\r\n\r\n\t//VIOLET OPTIMIZE\r\n\tconst _class = function (...args)\r\n\t{\r\n\t\tthis._initSuperRefs();\r\n\t\tthis.__ctor.apply(this, args);\r\n\t};\r\n\r\n\t_class._class = _class;\r\n\t_class._super = { };\r\n\r\n\tClass.inherit.call (_class, base);\r\n\tdelete _class.prototype.className;\r\n\r\n\tfor (let i = 0; i < protos.length; i++)\r\n\t\t_class.inherit (protos[i]);\r\n\r\n\tdelete _class._super.Class;\r\n\r\n\tif ('classInit' in _class.prototype)\r\n\t\t_class.prototype.classInit();\r\n\r\n\t_class.isInstance = function(value) {\r\n\t\treturn Rinn.isInstanceOf(value, _class);\r\n\t};\r\n\r\n\treturn _class;\r\n};\r\n\r\n\r\n/**\r\n * \tCreates a new class with the specified prototypes each of which can be a class constructor (function) or an object.\r\n */\r\nClass.extend = function (...protos)\r\n{\r\n\treturn this._class.prototype._extend (this, protos);\r\n};\r\n\r\n\r\n/*\r\n**\tCreates a new instance of a class resulting from extending the self class with the specified prototype.\r\n**\r\n**\t>> object create (object proto);\r\n*/\r\nClass.create = function (proto)\r\n{\r\n\treturn new (this.extend(proto)) ();\r\n};\r\n\r\nexport default Class;\r\n","/*\r\n**\trinn/event.js\r\n**\r\n**\tCopyright (c) 2013-2022, RedStar Technologies, All rights reserved.\r\n**\thttps://rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nimport Rinn from './alpha.js';\r\nimport Class from './class.js';\r\n\r\n/**\r\n**\tHolds the information about a triggered event. It also provides a mechanism to allow asynchronous\r\n**\tevent propagation to ensure the event chain order.\r\n*/\r\n\r\nexport default Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Event\",\r\n\r\n\t/**\r\n\t**\tSource of the event.\r\n\t*/\r\n\tsource: null,\r\n\r\n\t/**\r\n\t**\tName of the event.\r\n\t*/\r\n\tname: null,\r\n\r\n\t/**\r\n\t**\tArguments of the event.\r\n\t*/\r\n\targs: null,\r\n\r\n\t/**\r\n\t**\tIndicates if the last event handler wants to use async mode.\r\n\t*/\r\n\t_async: false,\r\n\r\n\t/**\r\n\t**\tQueue of all handlers to invoke.\r\n\t*/\r\n\tlist: null,\r\n\r\n\t/**\r\n\t**\tNext event to be executed in the event chain.\r\n\t*/\r\n\tnext: null,\r\n\r\n\t/**\r\n\t**\tReturn values from event handlers.\r\n\t*/\r\n\tret: null,\r\n\r\n\t/**\r\n\t**\tOriginal root event.\r\n\t*/\r\n\toriginal: null,\r\n\r\n\t/**\r\n\t**\tIndex of the current event handler.\r\n\t*/\r\n\ti: -1,\r\n\r\n\t/**\r\n\t**\tContructs an event object with the specified parameters. Source is the event-dispatcher object, list is\r\n\t**\tan array with all the listeners to invoke. The eventName and eventArgs are the event information to be\r\n\t**\tpassed to each handler and if a callback is specified (cbHandler+cbContext) it will be executed once all\r\n\t**\tthe event handlers have been processed.\r\n\t**\r\n\t**\tEvent __ctor (source: EventDispatcher, list: Array, eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t*/\r\n\t__ctor: function (source, list, eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tthis.source = source;\r\n\r\n\t\tthis.name = eventName;\r\n\t\tthis.args = eventArgs;\r\n\r\n\t\tthis.cbHandler = cbHandler;\r\n\t\tthis.cbContext = cbContext;\r\n\r\n\t\tthis.list = list;\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/**\r\n\t**\tResets the event to its initial state. An event object can be reused by resetting it and then\r\n\t**\tinvoking the resume event.\r\n\t**\r\n\t**\tEvent reset ();\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.next = null;\r\n\t\tthis.ret = [];\r\n\r\n\t\tthis._async = false;\r\n\t\tthis.i = -1;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tChanges the source of the event.\r\n\t**\r\n\t**\tEvent setSource (object value);\r\n\t*/\r\n\tsetSource: function (value)\r\n\t{\r\n\t\tthis.source = value;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the internal asynchronous flag. Should be called before a handler returns. If a handler\r\n\t**\tcalls this method it should also call resume() when async operations are finished.\r\n\t**\r\n\t**\tEvent wait ();\r\n\t*/\r\n\twait: function ()\r\n\t{\r\n\t\tthis._async = true;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tResumes event propagation. Should be called manually by event handlers that also call wait().\r\n\t**\r\n\t**\tEvent resume ();\r\n\t*/\r\n\tresume: function ()\r\n\t{\r\n\t\tthis._async = false;\r\n\r\n\t\twhile (!this._async)\r\n\t\t{\r\n\t\t\tif (++this.i >= this.list.length)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif (this.list[this.i].silent)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rinn.typeOf(this.list[this.i].handler) == \"string\")\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].context)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!this.list[this.i].context[this.list[this.i].handler])\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tif (this.list[this.i].context[this.list[this.i].handler] (this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (global[this.list[this.i].handler].call (null, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].handler.call (this.list[this.i].context, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._async)\r\n\t\t\treturn this;\r\n\r\n\t\tif (this.i >= this.list.length && this.next) this.next.resume();\r\n\r\n\t\tif (this.cbHandler)\r\n\t\t\tthis.cbHandler.call (this.cbContext);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the \"original\" property of the event to indicate where the original event comes from.\r\n\t**\r\n\t**\tEvent from (event: Event);\r\n\t*/\r\n\tfrom: function (event)\r\n\t{\r\n\t\tthis.original = event;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tEnqueues the specified event to be executed upon the current event process is finished. The \"original\"\r\n\t**\tproperty of the chained event will be set to the current event.\r\n\t**\r\n\t**\tEvent enqueueEvent (event: Event);\r\n\t*/\r\n\tenqueue: function (event)\r\n\t{\r\n\t\tif (!event) return this;\r\n\r\n\t\tvar evt;\r\n\t\tfor (evt = this; evt.next != null; evt = evt.next);\r\n\r\n\t\tevt.next = event;\r\n\t\tevent.from (this);\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n","/*\r\n**\trinn/event-dispatcher.js\r\n**\r\n**\tCopyright (c) 2013-2022, RedStar Technologies, All rights reserved.\r\n**\thttps://rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nimport Class from './class.js';\r\nimport Event from './event.js';\r\n\r\n/**\r\n**\tEvent dispatcher allows several event listeners to be attached, these will be invoked whenever the\r\n**\tevent that is being listened to is triggered.\r\n*/\r\n\r\nexport default Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"EventDispatcher\",\r\n\r\n\t/**\r\n\t**\tListeners attached to this event dispatcher. Grouped by event name.\r\n\t*/\r\n\tlisteners: null,\r\n\r\n\t/**\r\n\t**\tNamespace for event dispatching. Defaults to null. Can be modified using setNamespace().\r\n\t*/\r\n\tnamespace: null,\r\n\r\n\t/**\r\n\t**\tInitializes the event dispatcher.\r\n\t**\r\n\t**\tEventDispatcher __ctor ();\r\n\t*/\r\n\t__ctor: function ()\r\n\t{\r\n\t\tthis.listeners = { };\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the event dispatching namespace. Used to force all events dispatched to have the specified namespace.\r\n\t**\r\n\t**\tEventDispatcher setNamespace (value: string);\r\n\t*/\r\n\tsetNamespace: function (value)\r\n\t{\r\n\t\tthis.namespace = value;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tAdds an event listener for a specified event to the event dispatcher. The event name can have an optional\r\n\t**\tnamespace indicator which is added to the beginning of the event name and separated using a colon (:). This\r\n\t**\tindicator can be used to later trigger or remove all handlers of an specific namespace.\r\n\t**\r\n\t**\tEventDispatcher addEventListener (eventName: string, handler: function, context: object, data: object);\r\n\t*/\r\n\taddEventListener: function (eventName, handler, context, data)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (!this.listeners[name])\r\n\t\t\tthis.listeners[name] = [];\r\n\r\n\t\tthis.listeners[name].push ({ ns: ns, handler: handler, context: context, data: data, silent: 0 });\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tRemoves an event listener from the event dispatcher. If only the name is provided all handlers with the\r\n\t**\tspecified name will be removed. If a context is provided without a handler then any handler matching the\r\n\t**\tcontext will be removed. Special event name \"*\" can be used to match all event names.\r\n\t**\r\n\t**\tEventDispatcher removeEventListener (eventName: string, handler: function, context: object);\r\n\t*/\r\n\tremoveEventListener: function (eventName, handler, context)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar k = true;\r\n\r\n\t\t\t\t\tif (handler)\r\n\t\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\t\tif (context)\r\n\t\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\t\tif (ns)\r\n\t\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar k = true;\r\n\r\n\t\t\t\tif (handler)\r\n\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\tif (context)\r\n\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\tif (ns)\r\n\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tPrepares an event with the specified parameters for its later usage. The event is started when\r\n\t**\tthe resume() method is called. If a callback is specified it will be executed once all event\r\n\t**\thandlers have been processed.\r\n\t**\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tprepareEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tvar list = [];\r\n\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (this.listeners[name])\r\n\t\t\tlist = list.concat (this.listeners[name]);\r\n\r\n\t\tif (this.listeners[\"*\"])\r\n\t\t\tlist = list.concat (this.listeners[\"*\"]);\r\n\r\n\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\tif (list[i].silent) list.splice (i--, 1);\r\n\r\n\t\tif (ns)\r\n\t\t{\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\tif (list[i].ns != ns) list.splice (i--, 1);\r\n\t\t}\r\n\r\n\t\treturn new Event (this, list, name, eventArgs, cbHandler, cbContext);\r\n\t},\r\n\r\n\t/**\r\n\t**\tSilences or unsilences all handlers attached to an event such that if the event fires the handler(s) will\r\n\t**\tnot be invoked. It is recommended to use a namespace to ensure other handlers will continue to be run.\r\n\t**\r\n\t**\tEventDispatcher silence (eventName: string);\r\n\t*/\r\n\tsilence: function (eventName, value)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tvalue = value === false ? -1 : 1;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tlist[i].silent += value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tlist[i].silent += value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tDispatches an event to the respective listeners. If a callback is specified it will be executed once\r\n\t**\tall event handlers have been processed.\r\n\t**\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tdispatchEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\treturn this.prepareEvent(this.namespace ? this.namespace+':'+eventName : eventName, eventArgs, cbHandler, cbContext).resume();\r\n\t}\r\n});\r\n","/*\n**\trinn/model.js\n**\n**\tCopyright (c) 2013-2022, RedStar Technologies, All rights reserved.\n**\thttps://rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nimport Rinn from './alpha.js';\nimport EventDispatcher from './event-dispatcher.js';\n\n/**\n**\tA model is a high-integrity data object used to store properties and more importantly to provide event support to notify of any\n**\tkind of change that occurs to the model's properties. Integrity of the model is maintained by optionally using property constraints.\n*/\n\nlet _Model = EventDispatcher.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"Model\",\n\n\t/**\n\t**\tDefault properties for the model. Can be a map with the property name and its default value or a function\n\t**\treturning a map with dynamic default values. This is used to reset the model to its initial state.\n\t*/\n\tdefaults: null,\n\n\t/**\n\t**\tModel property contraints. A map with the property name and an object specifying the constraints of the\n\t**\tproperty. This is used to determine the type, format and behavior of each property in the model.\n\t*/\n\tconstraints: null,\n\n\t/**\n\t**\tProperties of the model.\n\t*/\n\tdata: null,\n\n\t/**\n\t**\tArray with the name of the properties that have changed. Populated prior modelChanged event.\n\t*/\n\tchangedList: null,\n\n\t/**\n\t**\tSilent mode indicator. While in silent mode events will not be dispatched.\n\t*/\n\t_silent: 0,\n\n\t/**\n\t**\tCurrent nesting level of the set() method. This is used to determine when all the property\n\t**\tchanges are done.\n\t*/\n\t_level: 0,\n\n\t/**\n\t**\tInitializes the model and sets the properties to the specified data object.\n\t**\n\t**\t>> Model __ctor (object data);\n\t**\t>> Model __ctor (object data, object defaults);\n\t*/\n\t__ctor: function (data, defaults)\n\t{\n\t\tthis._super.EventDispatcher.__ctor();\n\n\t\tthis.data = { };\n\n\t\tif (defaults != null)\n\t\t{\n\t\t\tthis.reset (defaults, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet o = null;\n\n\t\t\tif (!this.defaults && this.constraints)\n\t\t\t{\n\t\t\t\to = { };\n\n\t\t\t\tfor (let i in this.constraints)\n\t\t\t\t{\n\t\t\t\t\tlet j = this.constraints[i];\n\t\t\t\t\tif (j.def === null || j.def === undefined)\n\t\t\t\t\t{\n\t\t\t\t\t\to[i] = null;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof(j.def) === 'function')\n\t\t\t\t\t\to[i] = j.def();\n\t\t\t\t\telse\n\t\t\t\t\t\to[i] = j.def;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.reset(o);\n\t\t}\n\n\t\tthis.init();\n\n\t\tif (data != null)\n\t\t\tthis.set (data, true);\n\n\t\tif (this.constraints) this.update();\n\n\t\tthis.ready();\n\t},\n\n\t/**\n\t**\tResets the model to its default state and triggers update events. If a map is provided the defaults of\n\t**\tthe model will be set to the specified map.\n\t**\n\t**\t>> Model reset (object defaults, [bool nsilent=true]);\n\t**\t>> Model reset ([bool nsilent=true]);\n\t*/\n\treset: function (defaults, nsilent)\n\t{\n\t\tif (!this.defaults)\n\t\t{\n\t\t\tif (!defaults || (Rinn.typeOf(defaults) !== 'object' && Rinn.typeOf(defaults) !== 'function'))\n\t\t\t\treturn this;\n\n\t\t\tthis.defaults = defaults;\n\t\t}\n\n\t\tif (Rinn.typeOf(this.defaults) === 'function')\n\t\t\tthis.data = this.defaults();\n\t\telse\n\t\t\tthis.data = Rinn.clone(this.defaults);\n\n\t\treturn (nsilent === false || defaults === false) ? this : this.update(null, true);\n\t},\n\n\t/**\n\t**\tInitializes the model. Called before the model properties are set.\n\t**\n\t**\t>> void init ();\n\t*/\n\tinit: function ()\n\t{\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t**\n\t**\t>> void ready ();\n\t*/\n\tready: function ()\n\t{\n\t},\n\n\t/**\n\t**\tEnables or disables silent mode. When the model is in silent mode events will not be dispatched.\n\t**\n\t**\t>> Model silent (value: bool);\n\t*/\n\tsilent: function (value)\n\t{\n\t\tthis._silent += value ? 1 : -1;\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates a property name and value against the constraints defined in the model (if any). Returns the\n\t**\tfinal value if successful or throws an empty exception if errors occur.\n\t**\n\t**\t>> T _validate (string name, T value);\n\t*/\n\t_validate: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t\treturn value;\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tthrow new Error (`Constraint [${ctname}:${constraints[ctname]}] failed on property '${name}'.`);\n\t\t\t}\n\t\t}\n\n\t\treturn nvalue;\n\t},\n\n\t/**\n\t**\tSets the value of a property and returns the value set. This method is internally used to set properties\n\t**\tone at a time. If constraints are present in the model for the specified property all constraints will be\n\t**\tverified. When constraint errors occur the constraintError event will be raised and the property value\n\t**\twill not be changed.\n\t**\n\t**\t>> T _set (string name, T value);\n\t*/\n\t_set: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t{\n\t\t\tthis.data[name] = value;\n\t\t\treturn value;\n\t\t}\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar cvalue = this.data[name];\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (!this._silent)\n\t\t\t\t\tthis.dispatchEvent (\"constraintError\", { constraint: ctname, message: e.message, name: name, value: value });\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn (this.data[name] = nvalue);\n\t},\n\n\t/**\n\t**\tTriggers property events to indicate a property is changing. First triggers \"propertyChanging\" and then\n\t**\t\"propertyChanged\". If the first event returns false the second event will not be triggered.\n\t**\n\t**\t>> void _propertyEvent (string name, T prev, T value, bool direct=false);\n\t*/\n\t_propertyEvent: function (name, prev, value, direct)\n\t{\n\t\tvar temp = { name: name, old: prev, value: value, level: this._level };\n\n\t\tvar evt = this.dispatchEvent (\"propertyChanging\", temp);\n\n\t\tif (!direct)\n\t\t\ttemp.value = this._set (name, temp.value);\n\t\telse\n\t\t\tthis.data[name] = temp.value;\n\n\t\tif (evt != null && evt.ret.length && evt.ret[0] === false)\n\t\t\treturn;\n\n\t\tthis.dispatchEvent (\"propertyChanged.\" + name, temp);\n\t\tthis.dispatchEvent (\"propertyChanged\", temp);\n\n\t\tthis.changedList.push (name);\n\t},\n\n\t/**\n\t**\tSets one or more properties of the model. Possible arguments can be two strings or a map.\n\t**\n\t**\t>> Model set (string name, T value, bool force=true);\n\t**\t>> Model set (string name, T value, bool silent=false);\n\t**\t>> Model set (string name, T value);\n\t**\t>> Model set (object data);\n\t*/\n\tset: function ()\n\t{\n\t\tvar n = arguments.length;\n\t\tvar force = false, silent = false;\n\n\t\tif ((n > 2 || (n == 2 && Rinn.typeOf(arguments[0]) == \"object\")) && Rinn.typeOf(arguments[n-1]) == \"boolean\")\n\t\t{\n\t\t\tforce = arguments[--n];\n\t\t\tif (force === false) silent = true;\n\t\t}\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (n == 2)\n\t\t{\n\t\t\tif (this.data[arguments[0]] != arguments[1] || force)\n\t\t\t{\n\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\tthis._propertyEvent (arguments[0], this.data[arguments[0]], this._validate (arguments[0], arguments[1]));\n\t\t\t\telse\n\t\t\t\t\tthis._set (arguments[0], arguments[1]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in arguments[0])\n\t\t\t{\n\t\t\t\tif (this.data[i] != arguments[0][i] || force)\n\t\t\t\t{\n\t\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\t\tthis._propertyEvent (i, this.data[i], this._validate (i, arguments[0][i]));\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._set (i, arguments[0][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!--this._level && this.changedList.length && !silent && !this._silent)\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tReturns true if the given key exists in the model.\n\t**\n\t**\t>> boolean has (string name);\n\t*/\n\thas: function (name)\n\t{\n\t\treturn name in this.data;\n\t},\n\n\t/**\n\t**\tReturns the value of a property. If no name is specified the whole map of properties will be returned.\n\t**\tIf a boolean value of \"true\" is provided the properties map will be returned but first will be compacted\n\t**\tusing the default data to ensure only valid properties are present.\n\t**\n\t**\t>> T get (string name);\n\t**\t>> object get ();\n\t**\t>> object get (true);\n\t**\t>> object get (false);\n\t**\t\n\t*/\n\tget: function (name, def)\n\t{\n\t\tif (arguments.length == 0 || name === false)\n\t\t\treturn this.data;\n\n\t\tif (arguments.length == 1 && name === true)\n\t\t\treturn this.flatten ();\n\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : this.data[name];\n\n\t\treturn this.data[name];\n\t},\n\n\t/**\n\t**\tReturns the value of a property as an integer number.\n\t**\n\t**\t>> int getInt (string name, [int def]);\n\t*/\n\tgetInt: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseInt (this.data[name]);\n\n\t\treturn parseInt (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a floating point number.\n\t**\n\t**\t>> float getFloat (string name, [float def]);\n\t*/\n\tgetFloat: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseFloat (this.data[name]);\n\n\t\treturn parseFloat (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a boolean value (true or false).\n\t**\n\t**\t>> bool getBool (string name, [bool def]);\n\t**\t\n\t*/\n\tgetBool: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\tname = this.data[name] === undefined ? def : this.data[name];\n\t\telse\n\t\t\tname = this.data[name];\n\n\t\tif (name === \"true\" || name === true)\n\t\t\treturn true;\n\n\t\tif (name === \"false\" || name === false)\n\t\t\treturn false;\n\n\t\treturn parseInt (name) ? true : false;\n\t},\n\n\t/**\n\t**\tReturns a reference object for a model property. The resulting object contains two methods\n\t**\tnamed \"get\" and \"set\" to modify the value of the property.\n\t**\n\t**\t>> object getReference (string name);\n\t*/\n\tgetReference: function (name)\n\t{\t\n\t\tvar m = this;\n\n\t\treturn {\n\t\t\tget: function() {\n\t\t\t\treturn m.get(name);\n\t\t\t},\n\n\t\t\tset: function(value) {\n\t\t\t\tm.set(name, value);\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t**\tSets or returns a constraint given the property name. \n\t**\n\t**\t>> Model constraint (string field, string constraint, T value);\n\t**\t>> Model constraint (string field, object constraint);\n\t**\t>> Model constraint (object constraints);\n\t**\t>> object constraint (string field);\n\t*/\n\tconstraint: function (field, constraint, value)\n\t{\n\t\tif (arguments.length == 3 || arguments.length == 2 || (arguments.length == 1 && Rinn.typeOf(field) == \"object\"))\n\t\t{\n\t\t\tif (this.constraints === this.constructor.prototype.constraints)\n\t\t\t\tthis.constraints = Rinn.clone (this.constraints);\n\n\t\t\tswitch (arguments.length)\n\t\t\t{\n\t\t\t\tcase 1:\n\t\t\t\t\tRinn.override (this.constraints, field);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tRinn.override (this.constraints[field], constraint);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.constraints[field][constraint] = value;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn !field ? this : this.constraints[field];\n\t},\n\n\t/**\n\t**\tReturns a compact version of the model properties. That is, a map only with validated properties that are\n\t**\talso present in the default data map. Returns null if the object is not compliant. If the \"safe\" parameter\n\t**\tis set one last property named \"class\" will be attached, this specifies the original classPath of the object.\n\t**\n\t**\t>> object flatten ([bool safe=false]);\n\t*/\n\tflatten: function (safe, rsafe)\n\t{\n\t\tif (safe)\n\t\t{\n\t\t\tvar data = this.flatten(false, true);\n\t\t\tif (data == null) return null;\n\n\t\t\tdata[\"class\"] = this.classPath;\n\t\t\treturn data;\n\t\t}\n\n\t\tif (!this.constraints && !this.defaults)\n\t\t\treturn this.data;\n\n\t\tif (!this.isCompliant())\n\t\t\treturn { };\n\n\t\tvar constraints = this.constraints;\n\t\tvar keys = this.defaults ? (Rinn.typeOf(this.defaults) == \"function\" ? this.defaults() : this.defaults) : this.constraints;\n\n\t\tvar data = { };\n\n\t\tfor (var i in this.data)\n\t\t{\n\t\t\tif (!(i in keys)) continue;\n\n\t\t\tif (constraints && constraints[i])\n\t\t\t{\n\t\t\t\tvar ct = constraints[i];\n\n\t\t\t\tif (ct.model)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten(rsafe) : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.arrayof)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = [];\n\n\t\t\t\t\tfor (var j = 0; j < this.data[i].length; j++)\n\t\t\t\t\t\tdata[i][j] = this.data[i][j] ? this.data[i][j].flatten(rsafe) : null;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.cls)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten() : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdata[i] = this.data[i];\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t/**\n\t**\tRemoves a property or a list of properties.\n\t**\n\t**\t>> void remove (string name, [bool nsilent=true]);\n\t**\t>> void remove (array name, [bool nsilent=true]);\n\t*/\n\tremove: function (name, nsilent)\n\t{\n\t\tif (Rinn.typeOf(name) == \"array\")\n\t\t{\n\t\t\tfor (var i = 0; i < name.length; i++)\n\t\t\t\tdelete this.data[name[i]];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: name });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdelete this.data[name];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: [name] });\n\t\t}\n\t},\n\n\t/**\n\t**\tTriggers data change events for one or more properties. Ensure that silent mode is not enabled or else\n\t**\tthis method will have no effect. If no parameters are provided a full update will be triggered on all of\n\t**\tthe model properties.\n\t**\n\t**\t>> Model update (array fields);\n\t**\t>> Model update (string name);\n\t**\t>> Model update (bool forceModelChanged);\n\t**\t>> Model update ();\n\t*/\n\tupdate: function (fields, direct)\n\t{\n\t\tif (this._silent) return this;\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (fields && Rinn.typeOf(fields) == 'string')\n\t\t{\n\t\t\tthis._propertyEvent (fields, this.data[fields], this.data[fields], direct);\n\t\t}\n\t\telse if (fields && Rinn.typeOf(fields) == 'array')\n\t\t{\n\t\t\tfor (var i of fields)\n\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t}\n\n\t\tif (!--this._level && !this._silent && (this.changedList.length != 0 || fields === true))\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates one or mode model properties using the defined constraints. If no parameters are provided all of\n\t**\tthe properties in the model will be validated.\n\t**\n\t**\t>> Model validate (array fields);\n\t**\t>> Model validate (string name);\n\t**\t>> Model validate ();\n\t*/\n\tvalidate: function (fields)\n\t{\n\t\tif (!this.constraints) return this;\n\n\t\tif (fields && Rinn.typeOf(fields) == \"string\")\n\t\t{\n\t\t\tthis._set (fields, this.data[fields])\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t{\n\t\t\t\tif (fields && Rinn.indexOf(fields, i) == -1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._set (i, this.data[i])\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates all the properties in the model and returns a boolean indicating if all of them comply with the\n\t**\tconstraints defined in the model.\n\t**\n\t**\t>> bool isCompliant ();\n\t*/\n\tisCompliant: function ()\n\t{\n\t\tif (!this.constraints) return true;\n\n\t\ttry\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t\tthis._validate (i, this.data[i]);\n\n\t\t\treturn true;\n\t\t}\n\t\tcatch (e) {\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t**\tRegisters an event handler for changes in a specific property of the model.\n\t**\n\t**\t>> void observe (string property, function handler, object context);\n\t*/\n\tobserve: function (property, handler, context)\n\t{\n\t\tthis.addEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tUnregisters an event handler from changes in a specific property of the model.\n\t**\n\t**\t>> void unobserve (string property, function handler, object context);\n\t*/\n\tunobserve: function (property, handler, context)\n\t{\n\t\tthis.removeEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tAdds a propertyChanged event handler for the given property. The property name can have an event namespace prepended and separated by colon.\n\t**\n\t**\t>> void watch (string property, function handler);\n\t*/\n\twatch: function (property, handler)\n\t{\n\t\tproperty = property.split(':');\n\n\t\tif (property.length == 1)\n\t\t{\n\t\t\tproperty[1] = property[0];\n\t\t\tproperty[0] = 'watch';\n\t\t}\n\n\t\tthis.addEventListener (property[0]+\":propertyChanged.\"+property[1], function (evt, args) {\n\t\t\thandler (args.value, args, evt);\n\t\t});\n\t},\n\n\t/**\n\t**\tRemoves propertyChanged handlers related to the specified property. The property name can have an event namespace prepended and separated by colon.\n\t**\n\t**\t>> void unwatch (string property);\n\t*/\n\tunwatch: function (property)\n\t{\n\t\tproperty = property.split(':');\n\t\tif (property.length == 1)\n\t\t{\n\t\t\tproperty[1] = property[0];\n\t\t\tproperty[0] = 'watch';\n\t\t}\n\n\t\tthis.removeEventListener (property[0]+\":propertyChanged.\"+property[1]);\n\t},\n\n\t/**\n\t**\tSerializes the model into a string.\n\t**\n\t**\tstring toString ();\n\t*/\n\ttoString: function ()\n\t{\n\t\treturn Rinn.serialize(this.get (true));\n\t}\n});\n\n\n/**\n**\tImport model constraints.\n*/\n\nimport Constraints from './model-constraints.js';\n_Model.Constraints = Constraints;\n\nexport default _Model;\n","/*\n**\trinn/model-list.js\n**\n**\tCopyright (c) 2013-2022, RedStar Technologies, All rights reserved.\n**\thttps://rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nimport Rinn from './alpha.js';\nimport Model from './model.js';\n\n/**\n**\tGeneric list for models.\n*/\n\nexport default Model.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"ModelList\",\n\n\t/**\n\t**\tClass of the items in the list, can be overriden by child classes to impose a more strict constraint.\n\t*/\n\titemt: Model,\n\n\t/**\n\t**\tMirror of data.contents\n\t*/\n\tcontents: null,\n\n\t/**\n\t**\tIDs of every item in the contents.\n\t*/\n\titemId: null,\n\n\t/**\n\t**\tAutoincremental ID for the next item to be added.\n\t*/\n\tnextId: null,\n\n\t/**\n\t**\tDefault properties of the model.\n\t*/\n\tdefaults:\n\t{\n\t\tcontents: null\n\t},\n\n\t/**\n\t**\tConstraints of the model to ensure integrity.\n\t*/\n\tconstraints:\n\t{\n\t\tcontents: {\n\t\t\ttype: \"array\",\n\t\t\tarrayof: \"@itemt\"\n\t\t}\n\t},\n\n\t/**\n\t**\tConstructor.\n\t*/\n\t__ctor: function (...args)\n\t{\n\t\tthis.itemId = [];\n\t\tthis.nextId = 0;\n\n\t\tthis._super.Model.__ctor(...args);\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t*/\n\tready: function ()\n\t{\n\t\tthis._eventGroup = \"ModelList_\" + Date.now() + \":modelChanged\";\n\n\t\tthis.contents = this.data.contents;\n\t},\n\n\t/**\n\t**\tConnects the event handlers to the item.\n\t**\n\t**\t>> Model _bind (int iid, Model item);\n\t*/\n\t_bind: function (iid, item)\n\t{\n\t\tif (item && item.addEventListener) item.addEventListener (this._eventGroup, this._onItemEvent, this, iid);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tDisconnects the event handlers from the item.\n\t**\n\t**\t>> Model _unbind (Model item);\n\t*/\n\t_unbind: function (item)\n\t{\n\t\tif (item && item.removeEventListener) item.removeEventListener (this._eventGroup);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tHandler for item events.\n\t**\n\t**\t>> Model _onItemEvent (Event evt, object args, int iid);\n\t*/\n\t_onItemEvent: function (evt, args, iid)\n\t{\n\t\tthis.prepareEvent (\"itemChanged\", { id: iid, item: evt.source }).from (evt)\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tReturns the number of items in the list.\n\t**\n\t**\t>> int length ();\n\t*/\n\tlength: function ()\n\t{\n\t\treturn this.data.contents.length;\n\t},\n\n\t/**\n\t**\tClears the contents of the list.\n\t**\n\t**\t>> void clear ();\n\t*/\n\tclear: function ()\n\t{\n\t\tfor (var i = 0; i < this.data.contents; i++)\n\t\t\tthis._unbind (this.data.contents[i]);\n\n\t\tthis.itemId = [];\n\t\tthis.nextId = 0;\n\n\t\tthis.contents = this.data.contents = [];\n\n\t\tthis.prepareEvent (\"itemsCleared\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tSets the contents of the list with the specified array. All items will be ensured to be of the same model\n\t**\ttype as the one specified in the list.\n\t**\n\t**\t>> ModelList setData (array data);\n\t*/\n\tsetData: function (data)\n\t{\n\t\tthis.clear();\n\t\tif (!data) return this;\n\n\t\tfor (var i = 0; i < data.length; i++)\n\t\t{\n\t\t\tvar item = Rinn.ensureTypeOf(this.itemt, data[i]);\n\n\t\t\tthis.itemId.push(this.nextId++);\n\t\t\tthis.data.contents.push(item);\n\n\t\t\tthis._bind(this.nextId-1, item);\n\t\t}\n\n\t\tthis.prepareEvent (\"itemsChanged\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tReturns the raw array contents of the list.\n\t**\n\t**\t>> array getData ();\n\t*/\n\tgetData: function ()\n\t{\n\t\treturn this.data.contents;\n\t},\n\n\t/**\n\t**\tReturns the item at the specified index or null if the index is out of bounds.\n\t**\n\t**\t>> Model getAt (int index);\n\t*/\n\tgetAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\treturn this.data.contents[index];\n\t},\n\n\t/**\n\t**\tRemoves and returns the item at the specified index. Returns null if the index is out of bounds.\n\t**\n\t**\t>> Model removeAt (int index);\n\t*/\n\tremoveAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\tlet item = this.data.contents.splice(index, 1)[0];\n\t\tlet id = this.itemId.splice(index, 1)[0];\n\n\t\tthis._unbind (item);\n\n\t\tthis.prepareEvent (\"itemRemoved\", { id: id, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tSets the item at the specified index. Returns false if the index is out of bounds, true otherwise. The\n\t**\titem will be ensured to be of the model defined in the list.\n\t**\n\t**\t>> bool setAt (int index, Model item);\n\t*/\n\tsetAt: function (index, item)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\titem = Rinn.ensureTypeOf(this.itemt, item);\n\n\t\tthis._unbind(this.data.contents[index]);\n\t\tthis.data.contents[index] = item;\n\t\tthis._bind(this.itemId[index], item);\n\n\t\tthis.prepareEvent (\"itemChanged\", { id: this.itemId[index], item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tNotifies a change in the item at the specified index. Returns false if the index is out of bounds.\n\t**\n\t**\t>> bool updateAt (int index);\n\t*/\n\tupdateAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\tthis.prepareEvent (\"itemChanged\", { id: this.itemId[index], item: this.data.contents[index] })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tAdds an item to the bottom of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model push (Model item);\n\t*/\n\tpush: function (item)\n\t{\n\t\tif (item && Rinn.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rinn.ensureTypeOf(this.itemt, item);\n\n\t\tthis.itemId.push(this.nextId++);\n\t\tthis.data.contents.push (item);\n\t\tthis._bind(this.nextId-1, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { id: this.itemId[this.itemId.length-1], item: item, position: 'tail' })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the bottom of the list.\n\t**\n\t**\t>> Model pop ();\n\t*/\n\tpop: function ()\n\t{\n\t\treturn this._unbind(this.data.contents.pop());\n\t},\n\n\t/**\n\t**\tAdds an item to the top of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model unshift (Model item);\n\t*/\n\tunshift: function (item)\n\t{\n\t\tif (item && Rinn.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rinn.ensureTypeOf(this.itemt, item);\n\n\t\tthis.itemId.unshift(this.nextId++);\n\t\tthis.data.contents.unshift (item);\n\t\tthis._bind(this.nextId-1, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { id: this.itemId[0], item: item, position: 'head' })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the top of the list.\n\t**\n\t**\t>> Model shift ();\n\t*/\n\tshift: function ()\n\t{\n\t\treturn this._unbind(this.data.contents.shift());\n\t},\n\n\t/**\n\t**\tSearches for an item matching the specified partial definition and returns its index. Returns -1 if the\n\t**\titem was not found. If retObject is set to true the object will be returned instead of its index and null\n\t**\twill be returned when the item is not found.\n\t**\n\t**\tint|object find (object data, bool retObject=false);\n\t*/\n\tfind: function (data, retObject=false)\n\t{\n\t\tvar contents = this.data.contents;\n\n\t\tfor (var i = 0; i < contents.length; i++)\n\t\t{\n\t\t\tif (Rinn.partialCompare (contents[i].data, data))\n\t\t\t\treturn retObject ? contents[i] : i;\n\t\t}\n\n\t\treturn retObject ? null : -1;\n\t}\n});\n","/*\r\n**\trinn/schema\r\n**\r\n**\tCopyright (c) 2013-2022, RedStar Technologies, All rights reserved.\r\n**\thttps://rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nimport Rinn from './alpha.js';\r\n\r\n/**\r\n * The utility functions in this module allow to create a very strict serialization/deserialization schema\r\n * to ensure that all values are of the specific type when stored in string format.\r\n */\r\n\r\nlet Schema =\r\n{\r\n\tType: function (proto)\r\n    {\r\n\t\tlet tmp =\r\n\t\t{\r\n            flatten: function (value, context) {\r\n                return value;\r\n            },\r\n\r\n            unflatten: function (value, context) {\r\n                return value;\r\n            }\r\n        };\r\n\r\n        return proto ? Rinn.override(tmp, proto) : tmp;\r\n    },\r\n\r\n\tString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tInteger: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tNumber: function (precision)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_precision: precision,\r\n\t\t\t_round: false,\r\n\r\n\t\t\tprecision: function (value)\r\n\t\t\t{\r\n\t\t\t\tthis._precision = ~~value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tvalue = parseFloat(value);\r\n\r\n\t\t\t\tif (this._precision > 0)\r\n\t\t\t\t\tvalue = (~~(value*Math.pow(10, this._precision))) / Math.pow(10, this._precision);\r\n\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn parseFloat(value);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tBool: function (compact)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_compact: compact,\r\n\r\n\t\t\tcompact: function(value)\r\n\t\t\t{\r\n\t\t\t\tthis._compact = value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\tvalue = ~~value;\r\n\t\t\t\treturn this._compact ? (value > 0 ? 1 : 0) : (value > 0 ? true : false);\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn (~~value) ? true : false;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tSharedString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return 0;\r\n\r\n\t\t\t\tvalue = value.toString();\r\n\r\n                if (!(\"strings\" in context))\r\n                {\r\n                    context.index = { };\r\n                    context.strings = [ ];\r\n                }\r\n\r\n                if (!(value in context.index))\r\n                {\r\n                    context.strings.push(value);\r\n                    context.index[value] = context.strings.length;\r\n                }\r\n\r\n                return context.index[value];\r\n            },\r\n\r\n\t\t\tunflatten: function (value, context)\r\n\t\t\t{\r\n                return value == null || value == 0 ? null : context.strings[~~value - 1];\r\n            }\r\n        });\r\n    },\r\n\r\n\tArray: function (type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\titemType: type,\r\n\t\t\t_debug: false,\r\n\t\t\t_filter: null,\r\n\r\n\t\t\tdebug: function(v) {\r\n\t\t\t\tthis._debug = v;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            of: function (type) {\r\n                this.itemType = type;\r\n                return this;\r\n            },\r\n\r\n\t\t\tfilter: function (callback) {\r\n\t\t\t\tthis._filter = callback;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n\r\n                for (let i = 0; i < value.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (this._filter && !this._filter(value[i], i))\r\n\t\t\t\t\t\tcontinue;\r\n\r\n                    o.push(this.itemType.flatten(value[i], context));\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n\t\t\tunflatten: async function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(await this.itemType.unflatten(value[i], context));\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n    },\r\n\r\n    Object: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            properties: [ ],\r\n\r\n            property: function (name, type, defvalue=null)\r\n            {\r\n                this.properties.push({ name: name, source: name, type: type, defvalue: defvalue });\r\n                return this;\r\n            },\r\n\r\n            propertyAlias: function (name, source, type, defvalue=null)\r\n            {\r\n                this.properties.push({ name: name, source: source, type: type, defvalue: defvalue });\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (this.properties[i].source in value)\r\n\t\t\t\t\t\t\to[this.properties[i].name] = this.properties[i].type.flatten(value[this.properties[i].source], context);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\to[this.properties[i].name] = this.properties[i].type.flatten(this.properties[i].defvalue, context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = [ ];\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (this.properties[i].source in value)\r\n\t\t\t\t\t\t\to.push(this.properties[i].type.flatten(value[this.properties[i].source], context));\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\to.push(this.properties[i].type.flatten(this.properties[i].defvalue, context));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(this.properties[i].name in value ? value[this.properties[i].name] : this.properties[i].defvalue, context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(i in value ? value[i] : this.properties[i].defvalue, context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Class: function (classConstructor)\r\n    {\r\n\t\treturn Schema.Type\r\n\t\t({\r\n            _constructor: classConstructor,\r\n\r\n            constructor: function (classConstructor)\r\n            {\r\n                this._constructor = classConstructor;\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n                return value == null ? null : value.flatten(context);\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\treturn value == null ? null : await (new this._constructor()).unflatten(value, context);\r\n            }\r\n        });\r\n\t},\r\n\r\n\t/*\r\n\t**\tUsed when you want to specify just a single property.\r\n\t*/\r\n    Property: function(name, type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\tproperty: name,\r\n\t\t\ttype: type,\r\n\r\n\t\t\tname: function (name)\r\n\t\t\t{\r\n\t\t\t\tthis.property = name;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tis: function (type)\r\n\t\t\t{\r\n\t\t\t\tthis.type = type;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\t\t\t\t\to[this.property] = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value[this.property], context);\r\n\t\t\t\telse\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value, context);\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Map: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = [ ];\r\n\r\n\t\t\t\tfor (let i in value)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(i);\r\n\t\t\t\t\to.push(value[i]);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i += 2)\r\n\t\t\t\t\to[value[i]] = value[i+1];\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Selector: function ()\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\tconditions: [],\r\n\t\t\tvalue: null,\r\n\r\n\t\t\twhen: function (value, type)\r\n\t\t\t{\r\n\t\t\t\tthis.conditions.push([ (val) => val === value, type ]);\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\twith: function (value)\r\n\t\t\t{\r\n\t\t\t\tthis.value = value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tfor (let i of this.conditions)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (i[0](this.value) === true)\r\n\t\t\t\t\t\treturn i[1].flatten(value, context);\r\n\t\t\t\t}\r\n\r\n                return null;\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tfor (let i of this.conditions)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (i[0](this.value) === true)\r\n\t\t\t\t\t\treturn await i[1].unflatten(value, context);\r\n\t\t\t\t}\r\n\r\n                return null;\r\n            }\r\n\r\n        });\r\n\t}\r\n};\r\n\r\nexport default Schema;\r\n","/*\r\n**\trinn/flattenable.js\r\n**\r\n**\tCopyright (c) 2013-2022, RedStar Technologies, All rights reserved.\r\n**\thttps://rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nimport Class from './class.js';\r\n\r\n/**\r\n**\tClass used to add flattening and unflattening capabilities to any object. A \"flat\" object is an object composed\r\n**\tonly of native types, that is: `null,` `boolean`, `integer`, `number`, `array` or `object`.\r\n*/\r\n\r\nexport default Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Flattenable\",\r\n\r\n\t/**\r\n\t**\tType schema used to flatten/unflatten the contents of this class. See Schema class for more information.\r\n\t*/\r\n\ttypeSchema: null,\r\n\r\n\t/**\r\n\t**\tReturns the flattened contents of the object.\r\n\t*/\r\n\tflatten: function (context)\r\n\t{\r\n\t\treturn this.typeSchema.flatten(this, context);\r\n\t},\r\n\r\n\t/**\r\n\t**\tUnflattens the given object and overrides the local contents.\r\n\t*/\r\n\tunflatten: async function (value, context)\r\n\t{\r\n\t\tObject.assign(this, await this.typeSchema.unflatten(value, context));\r\n\t\tawait this.onUnflattened();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted when the unflatten() method is called on the object.\r\n\t*/\r\n\tonUnflattened: async function ()\r\n\t{\r\n\t}\r\n});\r\n","/*\r\n**\trinn/collection.js\r\n**\r\n**\tCopyright (c) 2013-2022, RedStar Technologies, All rights reserved.\r\n**\thttps://rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nimport Flattenable from './flattenable.js';\r\nimport Schema from './schema.js';\r\nimport Rinn from './alpha.js';\r\n\r\n/**\r\n**\tFlattenable collection class, used to store items and manipulate them. The items should also be flattenable.\r\n*/\r\n\r\nexport default Flattenable.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Collection\",\r\n\r\n\t/**\r\n\t**\tDescribes the type schema of the underlying items.\r\n\t*/\r\n\titemTypeSchema: null,\r\n\r\n\t/**\r\n\t**\tArray of items.\r\n\t*/\r\n\titems: null, /* Array */\r\n\r\n\t/**\r\n\t**\tConstructs the collection.\r\n\t*/\r\n\t__ctor: function (itemTypeSchema)\r\n\t{\r\n\t\tif (!itemTypeSchema) itemTypeSchema = this.itemTypeSchema;\r\n\r\n\t\tif (itemTypeSchema)\r\n\t\t\tthis.typeSchema = Schema.Property('items').is(Schema.Array().of(itemTypeSchema));\r\n\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted after the collection has been unflattened, re-adds the items to ensure onItemAdded() is called.\r\n\t*/\r\n\tonUnflattened: function()\r\n\t{\r\n\t\tlet items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (let i of items)\r\n\t\t\tthis.add(i);\r\n\t},\r\n\r\n\t/**\r\n\t * \tExecuted when the value in `items` is changed.\r\n\t */\r\n\titemsReferenceChanged: function()\r\n\t{\r\n\t},\r\n\r\n\t/*\r\n\t**\tResets the collection to empty. Note that onItemRemoved will not be called.\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.items = [];\r\n\t\tthis.itemsReferenceChanged();\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tClears the contents of the collection (removes each item manually, onItemRemoved will be called).\r\n\t*/\r\n\tclear: function ()\r\n\t{\r\n\t\tvar items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (var i = 0; i < items.length; i++)\r\n\t\t\tthis.onItemRemoved (items[i], 0);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSorts the collection. A comparison function should be provided, or the name of a property to sort by.\r\n\t**\r\n\t**\tObject sort (fn: Function)\r\n\t**\tObject sort (prop: string, [desc:bool=false])\r\n\t*/\r\n\tsort: function (fn, desc)\r\n\t{\r\n\t\tif (typeof(fn) != \"function\")\r\n\t\t{\r\n\t\t\tthis.items.sort(function(a, b)\r\n\t\t\t{\r\n\t\t\t\treturn (a[fn] <= b[fn] ? -1 : 1) * (desc === true ? -1 : 1);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.items.sort(fn);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSearches for an item with the specified fields and returns it. The \"inc\" object is the \"inclusive\" map, meaning all fields must match\r\n\t**\tand the optional \"exc\" is the exclusive map, meaning not even one field should match.\r\n\t**\r\n\t**\tObject findItem (inc: Object, exc: Object);\r\n\t*/\t\r\n\tfindItem: function (inc, exc)\r\n\t{\r\n\t\tif (!this.items) return null;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t{\r\n\t\t\tif (exc && Rinn.partialCompare(this.items[i], exc))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rinn.partialCompare(this.items[i], inc))\r\n\t\t\t\treturn this.items[i];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the container array.\r\n\t*/\r\n\tgetItems: function ()\r\n\t{\r\n\t\treturn this.items;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the number of items in the collection.\r\n\t*/\r\n\tlength: function ()\r\n\t{\r\n\t\treturn this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns true if the collection is empty.\r\n\t*/\r\n\tisEmpty: function ()\r\n\t{\r\n\t\treturn !this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the index of the specified item, or -1 if not found.\r\n\t*/\r\n\tindexOf: function (item)\r\n\t{\r\n\t\treturn this.items.indexOf(item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the item at the specified index, or null if not found. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/\r\n\tgetAt: function (index, relative=false)\r\n\t{\r\n\t\tif (index < 0 && relative == true)\r\n\t\t\tindex += this.items.length;\r\n\r\n\t\treturn index >= 0 && index < this.items.length ? this.items[index] : null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the first item in the collection.\r\n\t*/\r\n\tfirst: function ()\r\n\t{\r\n\t\treturn this.getAt(0);\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the last item in the collection.\r\n\t*/\r\n\tlast: function ()\r\n\t{\r\n\t\treturn this.getAt(-1, true);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item at the specified index, effectively moving the remaining items to the right.\r\n\t*/\r\n\taddAt: function (index, item)\r\n\t{\r\n\t\tif (!item || !this.onBeforeItemAdded (item))\r\n\t\t\treturn this;\r\n\r\n\t\tif (index < 0) index = 0;\r\n\t\tif (index > this.items.length) index = this.items.length;\r\n\r\n\t\tif (index == 0)\r\n\t\t{\r\n\t\t\tthis.items.unshift(item);\r\n\t\t}\r\n\t\telse if (index == this.items.length)\r\n\t\t{\r\n\t\t\tthis.items.push(item);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar tmp = this.items.splice(0, index);\r\n\t\t\ttmp.push(item);\r\n\r\n\t\t\tthis.items = tmp.concat(this.items);\r\n\t\t\tthis.itemsReferenceChanged();\r\n\t\t}\r\n\r\n\t\tthis.onItemAdded (item);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the start of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tunshift: function (item)\r\n\t{\r\n\t\treturn this.addAt(0, item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tpush: function (item)\r\n\t{\r\n\t\treturn this.addAt(this.items.length, item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tadd: function (item)\r\n\t{\r\n\t\treturn this.push(item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the item at the specified index. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/\r\n\tremoveAt: function (index, relative=false)\r\n\t{\r\n\t\tif (index < 0 && relative == true)\r\n\t\t\tindex += this.items.length;\r\n\r\n\t\tif (index < 0 || index >= this.items.length)\r\n\t\t\treturn null;\r\n\r\n\t\tvar item = this.items[index];\r\n\t\tthis.items.splice (index, 1);\r\n\t\tthis.onItemRemoved (item, index);\r\n\r\n\t\treturn item;\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves an item from the end of the collection.\r\n\t*/\r\n\tpop: function (item)\r\n\t{\r\n\t\treturn this.removeAt(-1, true);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves an item from the start of the collection.\r\n\t*/\r\n\tshift: function (item)\r\n\t{\r\n\t\treturn this.removeAt(0);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the specified item from the collection.\r\n\t*/\r\n\tremove: function (item)\r\n\t{\r\n\t\treturn this.removeAt (this.indexOf(item));\r\n\t},\r\n\r\n\t/*\r\n\t**\tRuns the specified callback for each of the items in the collection, if false is returned by the callback this function\r\n\t**\twill exit immediately. Parameters to the callback are: (item, index, collection).\r\n\t*/\r\n\tforEach: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecutes a method call with the specified parameters on each of the items in the collection, if false is returned by the\r\n\t**\titem's method this function will exit immediately.\r\n\t*/\r\n\tforEachCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEach but in reverse order.\r\n\t*/\r\n\tforEachRev: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEachCall but in reverse order.\r\n\t*/\r\n\tforEachRevCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the beforeItemAdded event. If returns false the item will not be added.\r\n\t*/\r\n\tonBeforeItemAdded: function (item)\r\n\t{\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemAdded event.\r\n\t*/\r\n\tonItemAdded: function (item)\r\n\t{\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemRemoved event.\r\n\t*/\r\n\tonItemRemoved: function (item)\r\n\t{\r\n\t}\r\n});\r\n","/*\n**\trinn/template\n**\n**\tCopyright (c) 2013-2022, RedStar Technologies, All rights reserved.\n**\thttps://rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nimport Rinn from './alpha.js';\n\n/**\n**\tTemplating module. The template formats available are shown below, note that the sym-open and sym-close symbols are by\n**\tdefault the square brackets, however those can be modified since are just parameters.\n**\n**\tHTML Escaped Output:\t\t\t[data.value]\t\t\t\t\tEscapes HTML characters from the output.\n**\tRaw Output:\t\t\t\t\t\t[!data.value]\t\t\t\t\tDoes not escape HTML characters from the output (used to output direct HTML).\n**\tDouble-Quoted Escaped Output:\t[data.value]\t\t\t\t\tEscapes HTML characters and surrounds with double quotes.\n**\tImmediate Reparse:\t\t\t\t[<....] [@....] \"...\" '...'\t\tReparses the contents as if parseTemplate() was called again.\n**\tImmediate Output:\t\t\t\t[:...]\t\t\t\t\t\t\tTakes the contents and outputs exactly as-is without format and optionally surrounded by the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsym-open and sym-close symbols when the first character is not '<', sym_open or space.\n**\tFiltered Output:\t\t\t\t[functionName ... <expr> ...]\tRuns a function call, 'expr' can be any of the allowed formats shown here (nested if desired),\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunctionName should map to one of the available expression functions registered in the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRinn.Template.functions map, each of which have their own parameters.\n*/\n\nlet Template =\n{\n\t/*\n\t**\tStrict mode flag. When set, any undefined expression function will trigger an exception.\n\t*/\n\tstrict: false,\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method.\n\t**\n\t**\t>> array parseTemplate (string template, char sym_open, char sym_close, bool is_tpl=false);\n\t*/\n\tparseTemplate: function (template, sym_open, sym_close, is_tpl=false, root=1)\n\t{\n\t\tlet nflush = 'string', flush = null, state = 0, count = 0;\n\t\tlet str = '', parts = [], mparts = parts, nparts = false;\n\n\t\tif (is_tpl === true)\n\t\t{\n\t\t\ttemplate = template.trim();\n\t\t\tnflush = 'identifier';\n\t\t\tstate = 10;\n\n\t\t\tmparts.push(parts = []);\n\t\t}\n\n\t\ttemplate += \"\\0\";\n\n\t\tfunction unescape (value)\n\t\t{\n\t\t\tif (typeof(value) == 'object')\n\t\t\t{\n\t\t\t\tif (value instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t\t\t\tunescape(value[i]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvalue.data = unescape(value.data);\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t{\n\t\t\t\tif (value[i] == '\\\\')\n\t\t\t\t{\n\t\t\t\t\tlet r = value[i+1];\n\n\t\t\t\t\tswitch (r)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'n': r = \"\\n\"; break;\n\t\t\t\t\t\tcase 'r': r = \"\\r\"; break;\n\t\t\t\t\t\tcase 'f': r = \"\\f\"; break;\n\t\t\t\t\t\tcase 'v': r = \"\\v\"; break;\n\t\t\t\t\t\tcase 't': r = \"\\t\"; break;\n\t\t\t\t\t\tcase 's': r = \"\\s\"; break;\n\t\t\t\t\t\tcase '\"': r = \"\\\"\"; break;\n\t\t\t\t\t\tcase \"'\": r = \"\\'\"; break;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = value.substr(0, i) + r + value.substr(i+2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction emit (type, data)\n\t\t{\n\t\t\tif (type == 'template')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, true, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t\ttype = 'base-string';\n\n\t\t\t\tif (Rinn.typeOf(data) == 'array')\n\t\t\t\t{\n\t\t\t\t\ttype = data[0].type;\n\t\t\t\t\tdata = data[0].data;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data.trim().split('\\n').map(i => i.trim()).join(\"\\n\"), sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge-alt')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, '{', '}', false, 0);\n\t\t\t}\n\n\t\t\tif (type == 'parse-merge' || type == 'parse-merge-alt' || type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tparts.push(data[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tparts.push({ type: type, data: data });\n\n\t\t\tif (nparts)\n\t\t\t{\n\t\t\t\tmparts.push(parts = []);\n\t\t\t\tnparts = false;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < template.length; i++)\n\t\t{\n\t\t\tif (template[i] == '\\\\')\n\t\t\t{\n\t\t\t\tstr += '\\\\';\n\t\t\t\tstr += template[++i];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (state)\n\t\t\t{\n\t\t\t\tcase 0:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-merge';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 12; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'template';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 1:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 10:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '.')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\temit ('access', '.');\n\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tnparts = true;\n\n\t\t\t\t\t\twhile (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null) i++;\n\t\t\t\t\t\ti--;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 14; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 15; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 16; count = 1; nflush = 'parse-merge-alt';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 13; count = 1; nflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) emit (nflush, str);\n\t\t\t\t\t\tstate = 11; count = 1; str = ''; nflush = 'parse';\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nflush != 'identifier')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 11:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 12:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (str.length != 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 13:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\n\t\t\t\t\t\t\tstate = 10;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 14:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\"');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 15:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\\'');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 16:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '`');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (flush)\n\t\t\t{\n\t\t\t\temit (flush, str);\n\t\t\t\tflush = str = '';\n\t\t\t}\n\t\t}\n\n\t\tif (!is_tpl)\n\t\t{\n\t\t\tlet i = 0;\n\t\t\twhile (i < mparts.length)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ti = mparts.length-1;\n\t\t\twhile (i > 0)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i--, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (mparts.length == 0)\n\t\t\t\tmparts.push({ type: 'string', data: '' });\n\t\t}\n\n\t\tif (root)\n\t\t\tunescape(mparts);\n\n\t\treturn mparts;\n\t},\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method. This\n\t**\tversion assumes the sym_open and sym_close chars are [ and ] respectively.\n\t**\n\t**\t>> array parse (string template);\n\t*/\n\tparse: function (template)\n\t{\n\t\treturn this.parseTemplate(template.trim(), '[', ']', false);\n\t},\n\n\t/**\n\t**\tRemoves all static parts from a parsed template.\n\t**\n\t**\t>> array clean (array parts);\n\t*/\n\tclean: function (parts)\n\t{\n\t\tfor (let i = 0; i < parts.length; i++)\n\t\t{\n\t\t\tif (parts[i].type != 'template')\n\t\t\t{\n\t\t\t\tparts.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\treturn parts;\n\t},\n\n\t/**\n\t**\tExpands a template using the given data object, ret can be set to 'text' or 'obj' allowing to expand the template as\n\t**\ta string (text) or an array of objects (obj) respectively. If none provided it will be expanded as text.\n\t**\n\t**\t>> string/array expand (array parts, object data, string ret='text', string mode='base-string');\n\t*/\n\texpand: function (parts, data, ret='text', mode='base-string')\n\t{\n\t\tlet s = [];\n\n\t\t// Expand variable parts.\n\t\tif (mode == 'var')\n\t\t{\n\t\t\tlet escape = true;\n\t\t\tlet quote = false;\n\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (str == '') str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tescape = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tquote = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tescape = false;\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tquote = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (str != 'this')\n\t\t\t{\n\t\t\t\tlet failed = false;\n\n\t\t\t\tif (data != null)\n\t\t\t\t{\n\t\t\t\t\tif (!(str in data))\n\t\t\t\t\t{\n\t\t\t\t\t\tfailed = true;\n\t\t\t\t\t\tdata = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tdata = data[str];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tfailed = true;\n\n\t\t\t\tif (failed && parts.length == 1)\n\t\t\t\t{\n\t\t\t\t\tif (Template.strict == true)\n\t\t\t\t\t\tthrow new Error ('Expression function `'+str+'` not found.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof(data) == 'string')\n\t\t\t{\n\t\t\t\tif (escape)\n\t\t\t\t\tdata = data.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n\n\t\t\t\tif (quote)\n\t\t\t\t\tdata = '\"' + data + '\"';\n\t\t\t}\n\n\t\t\ts.push(data);\n\t\t}\n\n\t\t// Expand variable parts and returns a reference to it.\n\t\tif (ret == 'varref')\n\t\t{\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (str == '') str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn str != 'this' ? [data, str] : null;\n\t\t}\n\n\t\t// Expand function parts.\n\t\tif (mode == 'fn')\n\t\t{\n\t\t\tvar args = [];\n\n\t\t\targs.push(Template.expand(parts[0], data, 'text', 'base-string'));\n\n\t\t\tif ('_'+args[0] in Template.functions)\n\t\t\t\targs[0] = '_'+args[0];\n\n\t\t\tif (!(args[0] in Template.functions))\n\t\t\t{\n\t\t\t\tif (Template.strict == true)\n\t\t\t\t\tthrow new Error ('Expression function `'+args[0]+'` not found.');\n\n\t\t\t\treturn `(Unknown: ${args[0]})`;\n\t\t\t}\n\n\t\t\tif (args[0][0] == '_')\n\t\t\t\treturn Template.functions[args[0]] (parts, data);\n\n\t\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\t\targs.push(Template.expand(parts[i], data, 'arg', 'base-string'));\n\n\t\t\ts.push(Template.functions[args[0]] (args, parts, data));\n\t\t}\n\n\t\t// Template mode.\n\t\tif (mode == 'template')\n\t\t{\n\t\t\tif (parts.length == 1)\n\t\t\t{\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'string')\n\t\t\t\t\treturn parts[0][0].data;\n\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'identifier')\n\t\t\t\t{\n\t\t\t\t\tlet name = parts[0][0].data;\n\n\t\t\t\t\tif (name in Template.functions || '_'+name in Template.functions)\n\t\t\t\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t\t\t}\n\t\n\t\t\t\treturn Template.expand(parts[0], data, ret, 'var');\n\t\t\t}\n\n\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t}\n\n\t\t// Expand parts.\n\t\tif (mode == 'base-string')\n\t\t{\n\t\t\tlet index = -1;\n\n\t\t\tfor (let i of parts)\n\t\t\t{\n\t\t\t\tlet tmp = null;\n\t\t\t\tindex++;\n\n\t\t\t\tswitch (i.type)\n\t\t\t\t{\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'template');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'string': case 'identifier':\n\t\t\t\t\t\ttmp = i.data;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'base-string');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (ret == 'void')\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (ret == 'last' && index != parts.length-1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\ts.push(tmp);\n\t\t\t}\n\t\t}\n\n\t\t// Return types for direct objects.\n\t\tif (ret == 'obj') return s;\n\n\t\tif (ret == 'last')\n\t\t{\n\t\t\tif (typeOf(s) == 'Rose\\\\Arry')\n\t\t\t\ts = s[0];\n\n\t\t\treturn s;\n\t\t}\n\n\t\t// When the output is not really needed.\n\t\tif (ret == 'void') return null;\n\n\t\t// Return as argument ('object' if only one, or string if more than one), that is, the first item in the result.\n\t\tif (ret == 'arg')\n\t\t{\n\t\t\tif (Rinn.typeOf(s) == 'array')\n\t\t\t{\n\t\t\t\tif (s.length != 1)\n\t\t\t\t\treturn s.join('');\n\n\t\t\t\treturn s[0];\n\t\t\t}\n\n\t\t\treturn s;\n\t\t}\n\n\t\tif (ret == 'text' && Rinn.typeOf(s) == 'array')\n\t\t{\n\t\t\tlet f = (e => e != null && typeof(e) == 'object' ? ('map' in e ? e.map(f).join('') : ('join' in e ? e.join('') : e.toString())) : e);\n\t\t\ts = s.map(f).join('');\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tParses the given template and returns a function that when called with an object will expand the template.\n\t**\n\t**\t>> object compile (string template);\n\t*/\n\tcompile: function (template)\n\t{\n\t\ttemplate = Template.parse(template);\n\n\t\treturn function (data=null, mode='text') {\n\t\t\treturn Template.expand(template, data ? data : { }, mode);\n\t\t};\n\t},\n\n\t/**\n\t**\tParses and expands the given template immediately.\n\t**\n\t**\t>> object eval (string template, object data, string mode='text');\n\t*/\n\teval: function (template, data=null, mode='text')\n\t{\n\t\ttemplate = Template.parse(template);\n\t\treturn Template.expand(template, data ? data : { }, mode);\n\t},\n\n\t/**\n\t**\tExpands the template as 'arg' and returns the result.\n\t**\n\t**\t>> object value (string parts, object data);\n\t*/\n\tvalue: function (parts, data=null)\n\t{\n\t\treturn Rinn.typeOf(parts) != 'array' ? parts : Template.expand(parts, data ? data : { }, 'arg');\n\t},\n\n\t/**\n\t**\tRegisters an expression function.\n\t**\n\t**\t>> object register (string name, function fn);\n\t*/\n\tregister: function (name, fn)\n\t{\n\t\tTemplate.functions[name] = fn;\n\t},\n\n\t/**\n\t**\tCalls an expression function.\n\t**\n\t**\t>> object call (string name, object args, object data);\n\t*/\n\t'call': function (name, args, data=null)\n\t{\n\t\tif (name in Template.functions)\n\t\t\treturn Template.functions[name] (args, null, data);\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tReturns a map given a 'parts' array having values of the form \"name: value\" or \":name value\".\n\t**\n\t**\t>> Map getNamedValues (array parts, object data, int i=1, bool expanded=true);\n\t*/\n\tgetNamedValues: function (parts, data, i=1, expanded=true)\n\t{\n\t\tlet s = { };\n\t\tlet mode = 0;\n\t\n\t\tfor (; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet key = Template.expand(parts[i], data, 'arg');\n\n\t\t\tif (!mode) {\n\t\t\t\tif (key.startsWith(':')) mode = 1; else mode = key.endsWith(':') ? 2 : 3;\n\t\t\t}\n\n\t\t\tif (mode == 1)\n\t\t\t\tkey = key.substr(1);\n\t\t\telse if (mode == 2)\n\t\t\t\tkey = key.substr(0, key.length-1);\n\n\t\t\tif (expanded)\n\t\t\t\ts[key] = Template.expand(parts[i+1], data, 'arg');\n\t\t\telse\n\t\t\t\ts[key] = parts[i+1];\n\t\t}\n\n\t\treturn s;\n\t}\n};\n\n\n/**\n**\tTemplate functions, functions that are used to format data. Each function takes three parameters (args, parts and data). By default the function arguments\n**\tare expanded and passed via 'args' for convenience, however if the function name starts with '_' the 'args' parameter will be skipped and only (parts, data)\n**\twill be available, each 'part' must be expanded manually by calling Template.expand.\n*/\n\nTemplate.functions =\n{\n\t/**\n\t**\tExpression functions.\n\t*/\n\t'global': function(args) { return globalThis; },\n\t'null': function(args) { return null; },\n\t'true': function(args) { return true; },\n\t'false': function(args) { return false; },\n\n\t'len': function(args) { return args[1].toString().length; },\n\t'int': function(args) { return ~~args[1]; },\n\t'str': function(args) { return args[1].toString(); },\n\t'float': function(args) { return parseFloat(args[1]); },\n\t'chr': function(args) { return String.fromCharCode(args[1]); },\n\t'ord': function(args) { return args[1].toString().charCodeAt(0); },\n\n\t'not': function(args) { return !args[1]; },\n\t'neg': function(args) { return -args[1]; },\n\t'abs': function(args) { return Math.abs(args[1]); },\n\n\t'and': function(args) { for (let i = 1; i < args.length; i++) if (!args[i]) return false; return true; },\n\t'or': function(args) { for (let i = 1; i < args.length; i++) if (~~args[i]) return true; return false; },\n\n\t'eq': function(args) { return args[1] == args[2]; },\n\t'ne': function(args) { return args[1] != args[2]; },\n\t'lt': function(args) { return args[1] < args[2]; },\n\t'le': function(args) { return args[1] <= args[2]; },\n\t'gt': function(args) { return args[1] > args[2]; },\n\t'ge': function(args) { return args[1] >= args[2]; },\n\t'isnotnull': function(args) { return !!args[1]; },\n\t'isnull': function(args) { return !args[1]; },\n\t'iszero': function(args) { return parseInt(args[1]) == 0; },\n\n\t'eq?': function(args) { return args[1] == args[2]; },\n\t'ne?': function(args) { return args[1] != args[2]; },\n\t'lt?': function(args) { return args[1] < args[2]; },\n\t'le?': function(args) { return args[1] <= args[2]; },\n\t'gt?': function(args) { return args[1] > args[2]; },\n\t'ge?': function(args) { return args[1] >= args[2]; },\n\t'notnull?': function(args) { return !!args[1]; },\n\t'null?': function(args) { return !args[1]; },\n\t'zero?': function(args) { return parseInt(args[1]) == 0; },\n\n\t'typeof': function(args) { return Rinn.typeOf(args[1]); },\n\n\t'*': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'/': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'+': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'-': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'mul': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'div': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'sum': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'sub': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'mod': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x %= args[i]; return x; },\n\t'pow': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x = Math.pow(x, args[i]); return x; },\n\n\t/**\n\t**\tReturns the JSON representation of the expression.\n\t**\n\t**\tdump <expr>\n\t*/\n\t'dump': function (args)\n\t{\n\t\treturn JSON.stringify(args[1]);\n\t},\n\n\t/**\n\t**\tSets one or more variables in the data context.\n\t**\n\t**\tset <var-name> <expr> [<var-name> <expr>]*\n\t*/\n\t'_set': function (parts, data)\n\t{\n\t\tfor (let i = 1; i+1 < parts.length; i += 2)\n\t\t{\n\t\t\tlet value = Template.value(parts[i+1], data);\n\n\t\t\tif (parts[i].length > 1)\n\t\t\t{\n\t\t\t\tlet ref = Template.expand(parts[i], data, 'varref');\n\t\t\t\tif (ref != null) ref[0][ref[1]] = value;\n\t\t\t}\n\t\t\telse\n\t\t\t\tdata[Template.value(parts[i], data)] = value;\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tRemoves one or more variables from the data context.\n\t**\n\t**\tunset <var-name> [<var-name>]*\n\t*/\n\t'_unset': function (parts, data)\n\t{\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t{\n\t\t\tif (parts[i].length > 1)\n\t\t\t{\n\t\t\t\tlet ref = Template.expand(parts[i], data, 'varref');\n\t\t\t\tif (ref != null) delete ref[0][ref[1]];\n\t\t\t}\n\t\t\telse\n\t\t\t\tdelete data[Template.value(parts[i], data)];\n\t\t}\n\n\t\treturn null;\n\t},\n\n\n\t/**\n\t**\tReturns the expression without white-space on the left or right. The expression can be a string or an array.\n\t**\n\t**\ttrim <expr>\n\t*/\n\t'trim': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.trim()) : args[1].trim()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in uppercase. The expression can be a string or an array.\n\t**\n\t**\tupper <expr>\n\t*/\n\t'upper': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toUpperCase()) : args[1].toUpperCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in lower. The expression can be a string or an array.\n\t**\n\t**\tlower <expr>\n\t*/\n\t'lower': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toLowerCase()) : args[1].toLowerCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns a sub-string of the given string.\n\t**\n\t**\tsubstr <start> <count> <string>\n\t**\tsubstr <start> <string>\n\t*/\n\t'substr': function (args)\n\t{\n\t\tlet s = args[args.length-1].toString();\n\n\t\tlet start = 0;\n\t\tlet count = null;\n\n\t\tif (args.length == 4)\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = ~~(args[2]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = null;\n\t\t}\n\n\t\tif (start < 0) start += s.length;\n\t\tif (count < 0) count += s.length;\n\n\t\tif (count === null)\n\t\t\tcount = s.length - start;\n\n\t\treturn s.substr(start, count);\n\t},\n\n\t/**\n\t**\tReplaces a matching string with the given replacement string in a given text.\n\t**\n\t**\treplace <search> <replacement> <text>\n\t*/\n\t'replace': function (args)\n\t{\n\t\treturn args[3].split(args[1]).join(args[2]);\n\t},\n\n\t/**\n\t**\tConverts all new-line chars in the expression to <br/>, the expression can be a string or an array.\n\t**\n\t**\tnl2br <expr>\n\t*/\n\t'nl2br': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.replace(/\\n/g, \"<br/>\")) : args[1].replace(/\\n/g, \"<br/>\")) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', the expression can be a string or an array.\n\t**\n\t**\t% <tag-name> <expr>\n\t*/\n\t'%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet s = '';\n\n\t\tfor (let i = 0; i < args.length; i++)\n\t\t{\n\t\t\tif (Rinn.typeOf(args[i]) == 'array')\n\t\t\t{\n\t\t\t\ts += `<${name}>`;\n\t\t\t\t\n\t\t\t\tfor (let j = 0; j < args[i].length; j++)\n\t\t\t\t\ts += args[i][j];\n\n\t\t\t\ts += `</${name}>`;\n\t\t\t}\n\t\t\telse\n\t\t\t\ts += `<${name}>${args[i]}</${name}>`;\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', attributes are supported.\n\t**\n\t**\t%% <tag-name> [<attr> <value>]* [<content>]\n\t*/\n\t'%%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet attr = '';\n\t\tlet text = '';\n\n\t\tfor (let i = 0; i < args.length; i += 2)\n\t\t{\n\t\t\tif (i+1 < args.length)\n\t\t\t\tattr += ` ${args[i]}=\"${args[i+1]}\"`;\n\t\t\telse\n\t\t\t\ttext = args[i];\n\t\t}\n\n\t\treturn text ? `<${name}${attr}>${text}</${name}>` : `<${name}${attr}/>`;\n\t},\n\n\t/**\n\t**\tJoins the given array expression into a string. The provided string-expr will be used as separator.\n\t**\n\t**\tjoin <string-expr> <array-expr>\n\t*/\n\t'join': function (args)\n\t{\n\t\tif (args[2] && Rinn.typeOf(args[2]) == 'array')\n\t\t\treturn args[2].join(args[1]);\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tSplits the given expression by the specified string. Returns an array.\n\t**\n\t**\tsplit <string-expr> <expr>\n\t*/\n\t'split': function (args)\n\t{\n\t\tif (args[2] && typeof(args[2]) == \"string\")\n\t\t\treturn args[2].split(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the keys of the given object-expr.\n\t**\n\t**\tkeys <object-expr>\n\t*/\n\t'keys': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.keys(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the values of the given object-expr.\n\t**\n\t**\tvalues <object-expr>\n\t*/\n\t'values': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.values(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tConstructs a string obtained by concatenating the expanded template for each of the items in the list-expr, the mandatory varname\n\t**\tparameter (namely 'i') indicates the name of the variable that will contain the data of each item as the list-expr is\n\t**\ttraversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote the index/key and numeric index\n\t**\tof the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\teach <varname> <list-expr> <template>\n\t*/\n\t'_each': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet s = '';\n\t\tlet j = 0;\n\n\t\tif (!list) return s;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\ts += Template.expand(parts[3], data, 'text');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tExpands the given template for each of the items in the list-expr, the mandatory varname parameter (namely 'i') indicates the name of the variable\n\t**\tthat will contain the data of each item as the list-expr is traversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote\n\t**\tthe index/key and numeric index of the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\tDoes not produce any output (returns null).\n\t**\n\t**\tforeach <varname> <list-expr> <template>\n\t*/\n\t'_foreach': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet j = 0;\n\n\t\tif (!list) return null;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tTemplate.expand(parts[3], data, 'text');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tReturns the valueA if the expression is true otherwise valueB, this is a short version of the 'if' function with the\n\t**\tdifference that the result is 'obj' instead of text.\n\t**\n\t**\t? <expr> <valueA> [<valueB>]\n\t*/\n\t'_?': function (parts, data)\n\t{\n\t\tif (Template.expand(parts[1], data, 'arg'))\n\t\t\treturn Template.expand(parts[2], data, 'arg');\n\n\t\tif (parts.length > 3)\n\t\t\treturn Template.expand(parts[3], data, 'arg');\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tReturns the valueA if it is not null (or empty or zero), otherwise returns valueB.\n\t**\n\t**\t?? <valueA> <valueB>\n\t*/\n\t'_??': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\t\tif (value) return value;\n\t\n\t\treturn Template.expand(parts[2], data, 'arg');\n\t},\n\n\t/**\n\t**\tReturns the value if the expression is true, supports 'elif' and 'else' as well. The result of this function is always text.\n\t**\n\t**\tif <expr> <value> [elif <expr> <value>] [else <value>]\n\t*/\n\t'_if': function (parts, data)\n\t{\n\t\tfor (let i = 0; i < parts.length; i += 3)\n\t\t{\n\t\t\tif (Template.expand(parts[i], data, 'arg') == 'else')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\n\t\t\tif (Template.expand(parts[i+1], data, 'arg'))\n\t\t\t\treturn Template.expand(parts[i+2], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tLoads the expression value and attempts to match one case.\n\t**\n\t**\tswitch <expr> <case1> <value1> ... <caseN> <valueN> default <defvalue> \n\t*/\n\t'_switch': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\n\t\tfor (let i = 2; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet case_value = Template.expand(parts[i], data, 'arg');\n\t\t\tif (case_value == value || case_value == 'default')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tExits the current inner most loop.\n\t**\n\t**\tbreak\n\t*/\n\t'_break': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_BREAK');\n\t},\n\n\t/**\n\t**\tSkips execution and continues the next cycle of the current inner most loop.\n\t**\n\t**\tcontinue\n\t*/\n\t'_continue': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_CONTINUE');\n\t},\n\n\t/**\n\t**\tConstructs an array with the results of repeating the specified template for a number of times.\n\t**\n\t**\trepeat <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_repeat': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`repeat`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0, to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tlet value = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\t\tlet arr = [];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\t\n\t\t\tfor (let i = from; ; i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn arr;\n\t},\n\n\t/**\n\t**\tRepeats the specified template for a number of times.\n\t**\n\t**\tfor <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_for': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`for`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0; to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tvalue = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\t\n\t\t\tfor (let i = from; ; i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tRepeats the specified template infinitely until a \"break\" is found.\n\t**\n\t**\tloop <template>\n\t*/\n\t'_loop': function (parts, data)\n\t{\n\t\tif (parts.length < 2)\n\t\t\treturn '(`loop`: Wrong number of parameters)';\n\n\t\tlet tpl = parts[1];\n\n\t\twhile (true)\n\t\t{\n\t\t\ttry {\n\t\t\t\tTemplate.value(tpl, data);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tlet name = e.message;\n\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tWrites the specified arguments to the console.\n\t**\n\t**\techo <expr> [<expr>...]\n\t*/\n\t'_echo': function (parts, data)\n\t{\n\t\tlet s = '';\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts += Template.expand(parts[i], data, 'arg');\n\n\t\tconsole.log(s);\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tConstructs a list from the given arguments and returns it.\n\t**\n\t**\t# <expr> [<expr>...]\n\t*/\n\t'_#': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(Template.expand(parts[i], data, 'arg'));\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded list from the given arguments and returns it.\n\t**\n\t**\t## <expr> [<expr>...]\n\t*/\n\t'_##': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(parts[i]);\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs an associative array (dictionary) and returns it.\n\t**\n\t**\t& <name>: <expr> [<name>: <expr>...]\n\t**\t& :<name> <expr> [:<name> <expr>...]\n\t*/\n\t'_&': function (parts, data)\n\t{\n\t\treturn Template.getNamedValues (parts, data, 1, true);\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded associative array (dictionary) and returns it.\n\t**\n\t**\t&& <name>: <expr> [<name>: <expr>...]\n\t**\t&& :<name> <expr> [:<name> <expr>...]\n\t*/\n\t'_&&': function (parts, data)\n\t{\n\t\treturn Template.getNamedValues (parts, data, 1, false);\n\t},\n\n\t/**\n\t**\tReturns true if the specified map contains all the specified keys. If it fails the global variable `err` will contain an error message.\n\t**\n\t**\tcontains <expr> <name> [<name>...]\n\t*/\n\t'contains': function (args, parts, data)\n\t{\n\t\tlet value = args[1];\n\n\t\tif (typeof(value) != 'object')\n\t\t{\n\t\t\tdata.err = 'Argument is not a Map';\n\t\t\treturn false;\n\t\t}\n\n\t\tlet s = '';\n\n\t\tfor (let i = 2; i < args.length; i++)\n\t\t{\n\t\t\tif (!(args[i] in value))\n\t\t\t\ts += ', '+args[i];\n\t\t}\n\n\t\tif (s != '')\n\t\t{\n\t\t\tdata.err = s.substr(1);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tReturns true if the specified map has the specified key. Returns boolean.\n\t**\n\t**\thas <name> <expr>\n\t*/\n\t'has': function (args, parts, data)\n\t{\n\t\tlet value = args[2];\n\n\t\tif (Rinn.typeOf(value) != 'object')\n\t\t\treturn false;\n\n\t\treturn args[1] in value;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the transformed values of the array/map (evaluating the template). And just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tmap <varname> <list-expr> <template>\n\t*/\n\t'_map': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rinn.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (arrayMode)\n\t\t\t\toutput.push(Template.expand(parts[3], data, 'arg'));\n\t\t\telse\n\t\t\t\toutput[i] = Template.expand(parts[3], data, 'arg');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the elements where the template evaluates to non-zero. Just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tfilter <varname> <list-expr> <template>\n\t*/\n\t'_filter': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rinn.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (~~Template.expand(parts[3], data, 'arg'))\n\t\t\t{\n\t\t\t\tif (arrayMode)\n\t\t\t\t\toutput.push(list[i]);\n\t\t\t\telse\n\t\t\t\t\toutput[i] = list[i];\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tExpands the specified template string with the given data. The sym_open and sym_close will be '{' and '}' respectively.\n\t**\tIf no data is provided, current data parameter will be used.\n\t**\n\t**\texpand <template> <data>\n\t*/\n\t'expand': function (args, parts, data)\n\t{\n\t\treturn Template.expand (Template.parseTemplate (args[1], '{', '}'), args.length == 3 ? args[2] : data);\n\t},\n\n\t/**\n\t**\tCalls a function described by the given parameter.\n\t**\n\t**\tcall <function> <args...>\n\t*/\n\t'_call': function (parts, data)\n\t{\n\t\tlet ref = Template.expand(parts[1], data, 'varref');\n\n\t\tif (!ref || typeof(ref[0][ref[1]]) != 'function')\n\t\t\tthrow new Error ('Expression is not a function: ' + Template.expand(parts[1], data, 'obj').map(i => i == null ? '.' : i).join(''));\n\n\t\tlet args = [];\n\n\t\tfor (let i = 2; i < parts.length; i++)\n\t\t\targs.push(Template.value(parts[i], data));\n\n\t\treturn ref[0][ref[1]] (...args);\n\t},\n};\n\nexport default Template;\n","/*\r\n**\trinn/main.js\r\n**\r\n**\tCopyright (c) 2013-2022, RedStar Technologies, All rights reserved.\r\n**\thttps://rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nimport _Rinn from './alpha.js';\r\nimport _Class from './class.js';\r\nimport _Event from './event.js';\r\nimport _EventDispatcher from './event-dispatcher.js';\r\nimport _Model from './model.js';\r\nimport _ModelList from './model-list.js';\r\nimport _Schema from './schema.js';\r\nimport _Flattenable from './flattenable.js';\r\nimport _Collection from './collection.js';\r\nimport _Template from './template.js';\r\n\r\nexport const Rinn = _Rinn;\r\nexport const Class = _Class;\r\nexport const Event = _Event;\r\nexport const EventDispatcher = _EventDispatcher;\r\nexport const Model = _Model;\r\nexport const ModelList = _ModelList;\r\nexport const Schema = _Schema;\r\nexport const Flattenable = _Flattenable;\r\nexport const Collection = _Collection;\r\nexport const Template = _Template;\r\n"],"names":["$e7a70fea451c1d66$export$2e2bcd8739ae039","_getref","value","obj","substr","get","eval","type","model","ctval","name","parseInt","isNaN","Error","parseFloat","toString","$0523981e283b00ea$export$2e2bcd8739ae039","typeOf","mclass","this","ensure","cls","ensureTypeOf","arrayof","i","length","arraynull","remove","splice","arraycompliant","isCompliant","required","minlen","maxlen","minval","maxval","mincount","maxcount","pattern","$dWhFJ","default","test","inset","RegExp","indexOf","join","upper","toUpperCase","lower","toLowerCase","$0523981e283b00ea$var$Rinn","invokeLater","fn","setTimeout","wait","millis","Promise","resolve","reject","o","Array","isArrayOrObject","clone","elem","push","merge","output","objs","arr","j","i1","field","override","partialCompare","full","partial","arrayFind","getObject","isInstanceOf","_class","$a25e6679217b277b$export$2e2bcd8739ae039","email","url","urlNoProt","uname","text","utext","$f7ca18717c214cf2$var$Class","_super","prototype","className","__ctor","__dtor","__proto__","hasOwnProperty","instanceOf","object","_initSuperRefs","constructor","_newSuper","self","_prot","a00","a01","a02","a03","a04","a05","a06","a07","a08","a09","a0A","call","$f7ca18717c214cf2$export$2e2bcd8739ae039","extend","source","ret","list","eventName","eventArgs","cbHandler","cbContext","next","_async","listeners","namespace","handler","context","data","split","ns","k","$a8b14ab12911b661$var$_Model","$764fa7261ccc826a$export$2e2bcd8739ae039","defaults","constraints","changedList","_silent","_level","EventDispatcher","reset","def","undefined","init","set","update","ready","nsilent","silent","_validate","nvalue","ctname","Constraints","e","message","_set","dispatchEvent","constraint","_propertyEvent","prev","direct","temp","old","level","evt","n","arguments","force","fields","has","flatten","getInt","getFloat","getBool","getReference","m","safe","rsafe","classPath","keys","ct","validate","observe","property","addEventListener","unobserve","removeEventListener","watch","args","unwatch","serialize","$jT52r","$a8b14ab12911b661$export$2e2bcd8739ae039","$7468b7763b89e914$export$2e2bcd8739ae039","itemt","contents","itemId","nextId","Model","_eventGroup","Date","now","_bind","iid","item","_onItemEvent","_unbind","prepareEvent","id","from","enqueue","resume","clear","setData","getData","getAt","index","removeAt","setAt","updateAt","position","pop","unshift","shift","find","retObject","proto","unflatten","tmp","$2dc29f9b761160bd$var$Schema","Type","precision","_precision","Math","pow","compact","_compact","strings","type1","itemType","v","_debug","callback","_filter","async","defvalue","properties","symbolic","classConstructor1","classConstructor","_constructor","name1","type2","conditions","val","$bf08d17deb8143a2$export$2e2bcd8739ae039","itemTypeSchema","typeSchema","$2dc29f9b761160bd$export$2e2bcd8739ae039","Property","is","of","items","add","itemsReferenceChanged","onItemRemoved","desc","sort","a","b","inc","exc","isEmpty","relative","onBeforeItemAdded","concat","onItemAdded","addAt","$826d32eb9d4eff74$var$Template","strict","parseTemplate","template","sym_open","sym_close","is_tpl","root","nflush","flush","state","count","str","parts","mparts","nparts","emit","trim","map","i2","match","unescape","r","parse","clean","expand","mode","s","escape","quote","last","first","functions","failed","replace","f","compile","register","getNamedValues","expanded","key","startsWith","endsWith","global","globalThis","null","true","false","len","int","float","chr","String","fromCharCode","ord","charCodeAt","not","neg","abs","and","or","eq","ne","lt","le","gt","ge","isnotnull","isnull","iszero","typeof","x","mul","div","sum","sub","mod","dump","JSON","stringify","ref","_unset","start","nl2br","attr","Object","values","_each","var_name","_foreach","_if","_switch","case_value","_break","_continue","_repeat","to","step","tpl","_for","_loop","_echo","console","log","contains","err","_map","arrayMode","_call","i3","$826d32eb9d4eff74$export$2e2bcd8739ae039","$bb627624112967de$export$eefcfe56efaaa57d","$bb627624112967de$export$4c85e640eb41c31b","$bb627624112967de$export$d61e24a684f9e51","$2c6c6d67abdc2b7f$export$2e2bcd8739ae039","$bb627624112967de$export$ec8b666c5fe2c75a","$bb627624112967de$export$a1edc412be3e1841","$bb627624112967de$export$59eced47f477f85a","$bb627624112967de$export$19342e026b58ebb7","$bb627624112967de$export$3a9581c9ade29768","$bb627624112967de$export$fb8073518f34e6ec","$17304fb0bb8e3d4f$export$2e2bcd8739ae039","$bb627624112967de$export$14416b8d99d47caa"],"version":3,"file":"rinn.m.js.map"}